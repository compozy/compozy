id: weather-agent
version: 0.1.0
description: A simple weather agent that provides weather information based on location

schemas:
  - id: city_input
    type: object
    properties:
      city:
        type: string
        description: The city to get weather information for
    required:
      - city

config:
  input:
    $ref: local::schemas.#(id=="city_input")

tools:
  - id: weather_tool
    description: Get the current weather for a specific location
    execute: ./weather_tool.ts
    input:
      $ref: local::schemas.#(id=="city_input")

  - id: save_data
    description: Save the weather data to a file
    execute: ./save_tool.ts
    input:
      type: object
      properties:
        city:
          type: string
        weather:
          type: object
          description: Weather data object containing temperature, humidity, and weather description
        clothing:
          oneOf:
            - type: string
            - type: object
            - type: array
          description: Clothing recommendations - can be a string, object, or array
        activities:
          oneOf:
            - type: string
            - type: object
            - type: array
          description: Activity recommendations - can be a string, object, or array
        format:
          type: string
          enum: ["json", "csv"]
      required:
        - city
        - weather
        - clothing
        - activities
        - format
    output:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the weather data was saved successfully
        format:
          type: string
          description: The format used for saving
        filename:
          type: string
          description: The name of the saved file

agents:
  - id: tourist_guide
    config:
      $ref: global::models.#(provider=="groq")
    instructions: |
      You are a helpful tourist guide assistant specialized in the city {{ .workflow.input.city }}
      That's is your capabilities:
      - You can use the `weather_tool` to fetch weather data (just when necessary and asked about it)
      - You can provide thoughtful recommendations for activities based on some weather data.
      - You can suggest clothing to use for specific activities and weather
      Always respond in valid JSON format.
    actions:
      - id: get_weather
        prompt: |
          What is the current weather in {{ .workflow.input.city }}?
        tools:
          - $ref: local::tools.#(id=="weather_tool")
      - id: suggest_activities
        json_mode: true
        prompt: |
          Given the current conditions in {{ .workflow.input.city }}: {{ .tasks.weather.output | toJson }}
          Suggest appropriate activities specifically from {{ .workflow.input.city }} for these weather conditions
          Return a list of activities as an array of strings in JSON format.
      - id: suggest_clothing
        prompt: |
          Given the current in {{ .workflow.input.city }}:
          - Weather: {{ .tasks.weather.output | toJson }}
          - Activities: {{ .tasks.activities.output | toJson }}
          Suggest appropriate clothing items based on the information above.
        output:
          type: object
          properties:
            clothings:
              type: array
              items:
                type: string
              description: List of recommending clothings items
          required:
            - clothings

tasks:
  - id: weather
    type: basic
    $use: agent(local::agents.#(id="tourist_guide"))
    action: get_weather
    on_success:
      next: activities

  - id: activities
    type: basic
    $use: agent(local::agents.#(id="tourist_guide"))
    action: suggest_activities
    on_success:
      next: clothing

  - id: clothing
    type: basic
    $use: agent(local::agents.#(id="tourist_guide"))
    action: suggest_clothing
    on_success:
      next: save_results_parallel

  - id: save_results_parallel
    type: parallel
    strategy: wait_all
    max_workers: 2
    timeout: 30s
    final: true
    tasks:
      - id: save_json
        type: basic
        $use: tool(local::tools.#(id="save_data"))
        with:
          city: "{{ .workflow.input.city }}"
          weather: "{{ .tasks.weather.output }}"
          clothing: "{{ .tasks.clothing.output }}"
          activities: "{{ .tasks.activities.output }}"
          format: "json"

      - id: save_csv
        type: basic
        $use: tool(local::tools.#(id="save_data"))
        with:
          city: "{{ .workflow.input.city }}"
          weather: "{{ .tasks.weather.output }}"
          clothing: "{{ .tasks.clothing.output }}"
          activities: "{{ .tasks.activities.output }}"
          format: "csv"
