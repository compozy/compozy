id: nested-tasks
version: 0.1.0
description: Test workflow for nested container tasks

schemas:
  - id: nested_input
    type: object
    properties:
      test_data:
        type: array
        items:
          type: string
        default:
          - "item1"
          - "item2"
          - "item3"
      parallel_count:
        type: number
        default: 3
  - id: echo_input
    type: object
    properties:
      message:
        type: string
        description: Message to echo
    required:
      - message
  - id: counter_input
    type: object
    properties:
      count:
        type: number
        description: Number to count to
    required:
      - count

config:
  input: nested_input

tools:
  - id: echo_tool
    description: Simple echo tool for testing
    input: echo_input

  - id: counter_tool
    description: Simple counter tool for testing
    input: counter_input

tasks:
  # Root composite task containing nested tasks
  - id: root_composite
    type: composite
    strategy: fail_fast
    tasks:
      # Parallel task with basic tasks
      - id: parallel_section
        type: parallel
        strategy: wait_all
        tasks:
          - id: task_a
            type: basic
            tool: echo_tool
            with:
              message: "Parallel Task A executed"

          - id: task_b
            type: basic
            tool: echo_tool
            with:
              message: "Parallel Task B executed"

          - id: task_c
            type: basic
            tool: counter_tool
            with:
              count: 3

      # Collection task processing input data
      - id: collection_section
        type: collection
        mode: parallel
        strategy: best_effort
        items: "{{ .workflow.input.test_data }}"
        task:
          id: "process-{{ .index }}"
          type: basic
          tool: echo_tool
          with:
            message: "Processing item: {{ .item }} at index {{ .index }}"

      # Nested composite task for deeper nesting
      - id: nested_composite
        type: composite
        tasks:
          - id: nested_parallel
            type: parallel
            strategy: race
            tasks:
              - id: race_task_1
                type: basic
                tool: echo_tool
                with:
                  message: "Race task 1 - trying to win!"

              - id: race_task_2
                type: basic
                tool: echo_tool
                with:
                  message: "Race task 2 - trying to win!"

          - id: final_collection
            type: collection
            mode: sequential
            strategy: fail_fast
            items: '["final1", "final2"]'
            task:
              id: "final-{{ .index }}"
              type: basic
              tool: echo_tool
              with:
                message: "Final processing: {{ .item }}"

    outputs:
      result: "Nested tasks execution completed"
      processed_items: "{{ .tasks.collection_section.output }}"
      parallel_results: "{{ .tasks.parallel_section.output }}"
