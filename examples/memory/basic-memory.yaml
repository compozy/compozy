id: basic-memory
version: 0.1.0
description: Simple conversational agent that remembers user information

config:
  input:
    type: object
    properties:
      user_id:
        type: string
        description: Unique identifier for the user
        default: "user_123"
      message:
        type: string
        description: User message
        default: "Hi, I'm John and I live in San Francisco"
    required:
      - user_id
      - message

tools:
  - id: memory_tool
    description: Memory operations for conversation history
    input:
      type: object
      properties:
        operation:
          type: string
          enum:
            - "read"
            - "append"
          description: Memory operation to perform
        memory_key:
          type: string
          description: Memory key to operate on
        message:
          type: string
          description: Message to append (for append operation)
      required:
        - operation

agents:
  - id: conversation_agent
    config:
      $ref: global::models.#(provider=="groq")
      temperature: 0.7
      max_tokens: 500
    memory:
      - id: user_memory
        key: "user:{{.workflow.input.user_id}}"
    instructions: |
      You are a friendly conversational agent that can remember information about users.

      When users introduce themselves with their name and city, remember this information.
      When users ask about their information, recall what they previously told you.

      Always be helpful and friendly.
    actions:
      - id: chat
        json_mode: true
        prompt: |
          User Message: {{ .workflow.input.message }}
          User ID: {{ .workflow.input.user_id }}

          {% if .tasks.load_memory.output %}
          Previous conversation: {{ .tasks.load_memory.output }}
          {% else %}
          This is a new conversation.
          {% endif %}

          Respond to the user's message. If they're introducing themselves, acknowledge and remember their information.
          If they're asking about information you should know, use your memory to answer.
        output:
          type: object
          properties:
            response:
              type: string
              description: Your response to the user
          required:
            - response

tasks:
  # Load previous conversation from memory
  - id: load_memory
    type: basic
    $use: tool(local::tools.#(id="memory_tool"))
    with:
      operation: "read"
      memory_key: "user:{{ .workflow.input.user_id }}"
    on_success:
      next: chat

  # Chat with the user
  - id: chat
    type: basic
    $use: agent(local::agents.#(id="conversation_agent"))
    action: chat
    on_success:
      next: save_memory

  # Save the conversation to memory
  - id: save_memory
    type: basic
    $use: tool(local::tools.#(id="memory_tool"))
    with:
      operation: "append"
      memory_key: "user:{{ .workflow.input.user_id }}"
      message: |
        User: {{ .workflow.input.message }}
        Agent: {{ .tasks.chat.output.response }}

outputs:
  response: "{{ .tasks.chat.output.response }}"
