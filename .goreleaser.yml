# yaml-language-server: $schema=https://goreleaser.com/static/schema-pro.json
# vim: set ts=2 sw=2 tw=0 fo=jcroql
version: 2
pro: true

# Project configuration
project_name: compozy

# Metadata configuration
metadata:
  mod_timestamp: "{{ .CommitTimestamp }}"
  license: "BSL-1.1"
  homepage: "https://github.com/compozy/compozy"
  description: "Next-level Agentic Orchestration Platform"
  maintainers:
    - "Compozy Team <support@compozy.com>"

# Environment variables
env:
  - GO111MODULE=on
  - CGO_ENABLED=0

# Git configuration
git:
  # What should be used to sort tags when gathering the current and previous
  # tags if there are more than one tag in the same commit.
  tag_sort: -version:refname

# Build configuration
builds:
  - id: compozy
    main: ./
    binary: compozy
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ignore:
      # Skip unsupported combinations
      - goos: windows
        goarch: arm64
      - goos: darwin
        goarch: "386"
      - goos: darwin
        goarch: arm
    ldflags:
      - -s -w
      - -X github.com/compozy/compozy/pkg/version.Version={{.Version}}
      - -X github.com/compozy/compozy/pkg/version.CommitHash={{.ShortCommit}}
      - -X github.com/compozy/compozy/pkg/version.BuildDate={{.Date}}
    env:
      - CGO_ENABLED=0
    flags:
      - -trimpath
    mod_timestamp: "{{ .CommitTimestamp }}"

# Archive configuration
archives:
  - id: compozy-archive
    ids:
      - compozy

    # Archive name template with conventional architecture naming
    name_template: >-
      {{ .ProjectName }}_{{ .Version }}_{{ .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- with .Arm }}v{{ . }}{{ end }}

    # Archive format (defaults to tar.gz, zip for windows)
    format_overrides:
      - goos: windows
        formats:
          - zip

    # Files to include in archive
    files:
      - README.md
      - LICENSE*
      - src: completions/
        dst: .

    # Wrap in directory
    wrap_in_directory: true

# Checksum configuration
checksum:
  name_template: "checksums.txt"
  algorithm: sha256

# Signing configuration
signs:
  - cmd: cosign
    certificate: "${artifact}.pem"
    args:
      - sign-blob
      - "--output-certificate=${certificate}"
      - "--output-signature=${signature}"
      - "${artifact}"
      - "--yes"
    artifacts: checksum
    output: true

# Snapshot configuration (for non-tagged builds)
snapshot:
  version_template: "0.0.0-{{ .Timestamp }}"

# Source archive configuration
source:
  enabled: true

# Changelog configuration
changelog:
  use: github
  sort: asc
  abbrev: 7

  # Changelog groups
  groups:
    - title: "\U0001F389"
      regexp: "^.*feat[\\(\\w)]*:+.*$"
      order: 0
    - title: "\U0001F41B"
      regexp: "^.*fix[\\(\\w)]*:+.*$"
      order: 1
    - title: "‚ö°"
      regexp: "^.*perf[\\(\\w)]*:+.*$"
      order: 2
    - title: "\U0001F510"
      regexp: "^.*security[\\(\\w)]*:+.*$"
      order: 3
    - title: "\U0001F4DA"
      regexp: "^.*docs[\\(\\w)]*:+.*$"
      order: 4
    - title: "\U0001F527"
      regexp: "^.*refactor[\\(\\w)]*:+.*$"
      order: 5
    - title: "\U0001F4E6"
      regexp: "^.*deps[\\(\\w)]*:+.*$"
      order: 6
    - title: "\U0001F9EA"
      regexp: "^.*test[\\(\\w)]*:+.*$"
      order: 7
    - title: "\U0001F504"
      order: 999

  # Filters
  filters:
    exclude:
      - "^(build|ci): "
      - "^chore: auto-update generated files$"
      - "^chore: docs$"
      - "^chore: schema update$"
      - "^chore: typo$"
      - "^chore\\(legal\\): "
      - "^chore\\(deps\\): "
      - "^docs: update$"
      - "^test:"
      - "^test\\("
      - "merge conflict"
      - Merge branch
      - Merge pull request
      - Merge remote-tracking branch
      - go mod tidy
      - "^wip "
      - "^wip:"

# Release configuration
release:
  github:
    owner: compozy
    name: compozy

  name_template: "Release {{ .Version }}"
  mode: replace
  draft: false
  prerelease: auto
  header: |
    ## Compozy {{ .Version }}

    Welcome to this new release of Compozy! üéâ

    ### Installation

    #### Binary Download
    Download the appropriate binary for your platform from the assets below.

    #### Go Install
    ```bash
    go install github.com/compozy/compozy@{{ .Tag }}
    ```

    #### Container Image
    ```bash
    docker pull ghcr.io/compozy/compozy:{{ .Version }}
    ```

  footer: |
    ### Verification

    All release artifacts are signed and can be verified:

    #### Checksums
    ```bash
    cosign verify-blob \
      --signature checksums.txt.sig \
      --certificate checksums.txt.pem \
      checksums.txt
    ```

    #### Container Images
    ```bash
    cosign verify ghcr.io/compozy/compozy:{{ .Version }}
    ```

    **Full Changelog**: https://github.com/compozy/compozy/compare/{{ .PreviousTag }}...{{ .Tag }}

    ---

    Thank you to all contributors who made this release possible! üôè

# Docker configuration
dockers:
  # Main Compozy application - AMD64
  - id: compozy-main-amd64
    ids:
      - compozy
    dockerfile: ./cluster/compozy.goreleaser.Dockerfile
    use: buildx
    goos: linux
    goarch: amd64
    image_templates:
      - "ghcr.io/compozy/compozy:{{ .Version }}-amd64"
      - "ghcr.io/compozy/compozy:latest-amd64"
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.title={{ .ProjectName }}"
      - "--label=org.opencontainers.image.description=Compozy Workflow Orchestration Engine"
      - "--label=org.opencontainers.image.url=https://github.com/compozy/compozy"
      - "--label=org.opencontainers.image.source=https://github.com/compozy/compozy"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.licenses=BSL-1.1"
      - "--label=org.opencontainers.image.vendor=Compozy"
    extra_files:
      - "README.md"
      - "LICENSE"

  # Main Compozy application - ARM64
  - id: compozy-main-arm64
    ids:
      - compozy
    dockerfile: ./cluster/compozy.goreleaser.Dockerfile
    use: buildx
    goos: linux
    goarch: arm64
    image_templates:
      - "ghcr.io/compozy/compozy:{{ .Version }}-arm64"
      - "ghcr.io/compozy/compozy:latest-arm64"
    build_flag_templates:
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.title={{ .ProjectName }}"
      - "--label=org.opencontainers.image.description=Compozy Workflow Orchestration Engine"
      - "--label=org.opencontainers.image.url=https://github.com/compozy/compozy"
      - "--label=org.opencontainers.image.source=https://github.com/compozy/compozy"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.licenses=BSL-1.1"
      - "--label=org.opencontainers.image.vendor=Compozy"
    extra_files:
      - "README.md"
      - "LICENSE"

  # MCP Proxy - AMD64
  - id: mcp-proxy-amd64
    ids:
      - compozy
    dockerfile: ./cluster/mcpproxy.goreleaser.Dockerfile
    use: buildx
    goos: linux
    goarch: amd64
    image_templates:
      - "ghcr.io/compozy/mcp-proxy:{{ .Version }}-amd64"
      - "ghcr.io/compozy/mcp-proxy:latest-amd64"
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.title=Compozy MCP Proxy"
      - "--label=org.opencontainers.image.description=Model Context Protocol Proxy for Compozy"
      - "--label=org.opencontainers.image.url=https://github.com/compozy/compozy"
      - "--label=org.opencontainers.image.source=https://github.com/compozy/compozy"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.licenses=BSL-1.1"
      - "--label=org.opencontainers.image.vendor=Compozy"
    extra_files:
      - "README.md"
      - "LICENSE"

  # MCP Proxy - ARM64
  - id: mcp-proxy-arm64
    ids:
      - compozy
    dockerfile: ./cluster/mcpproxy.goreleaser.Dockerfile
    use: buildx
    goos: linux
    goarch: arm64
    image_templates:
      - "ghcr.io/compozy/mcp-proxy:{{ .Version }}-arm64"
      - "ghcr.io/compozy/mcp-proxy:latest-arm64"
    build_flag_templates:
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.title=Compozy MCP Proxy"
      - "--label=org.opencontainers.image.description=Model Context Protocol Proxy for Compozy"
      - "--label=org.opencontainers.image.url=https://github.com/compozy/compozy"
      - "--label=org.opencontainers.image.source=https://github.com/compozy/compozy"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.licenses=BSL-1.1"
      - "--label=org.opencontainers.image.vendor=Compozy"
    extra_files:
      - "README.md"
      - "LICENSE"

# Docker manifest configuration for multi-arch images
docker_manifests:
  # Main Compozy application manifests
  - name_template: "ghcr.io/compozy/compozy:{{ .Version }}"
    image_templates:
      - "ghcr.io/compozy/compozy:{{ .Version }}-amd64"
      - "ghcr.io/compozy/compozy:{{ .Version }}-arm64"

  - name_template: "ghcr.io/compozy/compozy:latest"
    image_templates:
      - "ghcr.io/compozy/compozy:latest-amd64"
      - "ghcr.io/compozy/compozy:latest-arm64"

  # MCP Proxy manifests
  - name_template: "ghcr.io/compozy/mcp-proxy:{{ .Version }}"
    image_templates:
      - "ghcr.io/compozy/mcp-proxy:{{ .Version }}-amd64"
      - "ghcr.io/compozy/mcp-proxy:{{ .Version }}-arm64"

  - name_template: "ghcr.io/compozy/mcp-proxy:latest"
    image_templates:
      - "ghcr.io/compozy/mcp-proxy:latest-amd64"
      - "ghcr.io/compozy/mcp-proxy:latest-arm64"

# Container image signing with cosign
docker_signs:
  - cmd: cosign
    args:
      - "sign"
      - "--yes"
      - "${artifact}@${digest}"
    artifacts: images
    output: true

# Homebrew cask configuration
homebrew_casks:
  - name: compozy
    repository:
      owner: compozy
      name: homebrew-compozy
      branch: main
      token: "{{ .Env.RELEASE_TOKEN }}"

    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com

    commit_msg_template: "Brew cask update for {{ .ProjectName }} version {{ .Tag }}"
    directory: Casks
    caveats: |
      To get started with Compozy, you need to:
      1. Set up the required environment variables
      2. Configure your first workflow
      See https://github.com/compozy/compozy for more information.

    homepage: "https://github.com/compozy/compozy"
    description: "Next-level Agentic Orchestration Platform"
    skip_upload: auto

# NFPM packaging configuration
nfpms:
  - id: compozy-packages
    package_name: compozy
    file_name_template: "{{ .ConventionalFileName }}"
    vendor: "Compozy"
    homepage: "https://github.com/compozy/compozy"
    maintainer: "Compozy Team <support@compozy.com>"
    description: "Next-level Agentic Orchestration Platform"
    license: "BSL-1.1"
    formats:
      - apk
      - deb
      - rpm
      - archlinux
    rpm:
      signature:
        key_file: '{{ if ne (index .Env "GPG_KEY_PATH") "" }}{{ .Env.GPG_KEY_PATH }}{{ else }}{{ end }}'
    deb:
      signature:
        key_file: '{{ if ne (index .Env "GPG_KEY_PATH") "" }}{{ .Env.GPG_KEY_PATH }}{{ else }}{{ end }}'

# Before hooks (run before building)
before:
  hooks:
    - go mod tidy
    - go mod download
    - rm -rf completions
    - mkdir -p completions
    - sh -c "go run . completion bash > completions/compozy.bash || echo '# Bash completion' > completions/compozy.bash"
    - sh -c "go run . completion zsh > completions/compozy.zsh || echo '# Zsh completion' > completions/compozy.zsh"
    - sh -c "go run . completion fish > completions/compozy.fish || echo '# Fish completion' > completions/compozy.fish"

# Software Bill of Materials (SBOM) generation
sboms:
  - artifacts: archive
  - id: source
    artifacts: source

# Nix package configuration
nix:
  - name: compozy
    repository:
      owner: compozy
      name: nur
      branch: main
      token: "{{ .Env.RELEASE_TOKEN }}"

    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com

    commit_msg_template: "compozy: {{ .Version }}"
    homepage: "https://github.com/compozy/compozy"
    description: "Next-level Agentic Orchestration Platform"
    license: "bsl11"

npms:
  - name: "@compozy/cli"
    repository: "git+https://github.com/compozy/compozy.git"
    bugs: https://github.com/compozy/compozy/issues
    access: public
