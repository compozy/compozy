{
  "$defs": {
    "Author": {
      "additionalProperties": false,
      "properties": {
        "contributors": {
          "description": "Additional contributors who helped develop the project.\n\nUse this to acknowledge team members, collaborators, or external contributors.",
          "items": {
            "$ref": "#/$defs/Contributor"
          },
          "type": "array"
        },
        "email": {
          "description": "Email contact for project-related communication.\n\nUse team emails for shared ownership: `\"ai-team@company.com\"`",
          "type": "string"
        },
        "name": {
          "description": "Name of the author or team responsible for the project.\n\nExamples: `\"Jane Smith\"`, `\"AI Platform Team\"`, `\"Data Science Division\"`",
          "type": "string"
        },
        "organization": {
          "description": "Organization or company affiliation.\n\nExamples: `\"ACME Corporation\"`, `\"AI Research Lab\"`, `\"Engineering Division\"`",
          "type": "string"
        },
        "url": {
          "description": "URL to author's profile, repository, or team page.\n\nExamples: `\"https://github.com/username\"`, `\"https://company.com/team/ai\"`",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BaseConfig": {
      "additionalProperties": false,
      "properties": {
        "chunking": {
          "$ref": "#/$defs/ChunkingConfig"
        },
        "description": {
          "type": "string"
        },
        "embedder": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/$defs/MetadataConfig"
        },
        "preprocess": {
          "$ref": "#/$defs/PreprocessConfig"
        },
        "retrieval": {
          "$ref": "#/$defs/RetrievalConfig"
        },
        "sources": {
          "items": {
            "$ref": "#/$defs/SourceConfig"
          },
          "type": "array"
        },
        "vector_db": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ChunkingConfig": {
      "additionalProperties": false,
      "properties": {
        "overlap": {
          "type": "integer"
        },
        "size": {
          "type": "integer"
        },
        "strategy": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Contributor": {
      "additionalProperties": false,
      "description": "Contributor represents an individual who contributed to the project.",
      "properties": {
        "email": {
          "description": "Email address for contributor contact.",
          "type": "string"
        },
        "name": {
          "description": "Full name of the contributor.",
          "type": "string"
        },
        "organization": {
          "description": "Organization or team the contributor belongs to.",
          "type": "string"
        },
        "url": {
          "description": "URL to contributor's profile or portfolio.\n\nExamples: `\"https://github.com/username\"`, `\"https://linkedin.com/in/name\"`",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmbedderConfig": {
      "additionalProperties": false,
      "properties": {
        "api_key": {
          "type": "string"
        },
        "config": {
          "$ref": "#/$defs/EmbedderRuntimeConfig"
        },
        "id": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmbedderRuntimeConfig": {
      "additionalProperties": false,
      "properties": {
        "batch_size": {
          "type": "integer"
        },
        "dimension": {
          "type": "integer"
        },
        "retry": {
          "type": "object"
        },
        "strip_newlines": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ErrorTransition": {
      "additionalProperties": false,
      "description": "ErrorTransition defines error handling behavior when a task fails.",
      "properties": {
        "next": {
          "description": "ID of the error handler task\n\n- **Example**: \"handle-error\", \"retry-with-fallback\"",
          "type": "string"
        },
        "with": {
          "$ref": "#/$defs/Input",
          "description": "Error context passed to the handler\nIncludes error details: { \"error\": \"{{ .error }}\", \"attempt\": \"{{ .retryCount }}\" }"
        }
      },
      "type": "object"
    },
    "Input": {
      "type": "object"
    },
    "KnowledgeBinding": {
      "additionalProperties": false,
      "properties": {
        "fallback": {
          "type": "string"
        },
        "filters": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "id": {
          "type": "string"
        },
        "inject_as": {
          "type": "string"
        },
        "max_tokens": {
          "type": "integer"
        },
        "min_score": {
          "type": "number"
        },
        "top_k": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MetadataConfig": {
      "additionalProperties": false,
      "properties": {
        "owners": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Opts": {
      "additionalProperties": false,
      "description": "Opts contains project-specific configuration options.",
      "properties": {
        "heartbeat_timeout": {
          "description": "Interval for task heartbeat signals\nUsed for long-running tasks to indicate progress\n\n- **Example**: \"10s\", \"30s\", \"1m\"",
          "type": "string"
        },
        "on_error": {
          "$ref": "#/$defs/ErrorTransition",
          "description": "Error handler configuration\nDefines what happens when a task fails after all retries"
        },
        "retry_policy": {
          "$ref": "#/$defs/RetryPolicyConfig",
          "description": "Retry configuration for transient failures\nAutomatically retries failed tasks with exponential backoff"
        },
        "schedule_to_close_timeout": {
          "description": "Total timeout from scheduling to completion\nDefault: \"6m\"\n\n- **Example**: \"1m\", \"15m\", \"2h\"",
          "type": "string"
        },
        "schedule_to_start_timeout": {
          "description": "Maximum time to wait for a task to start executing\nDefault: \"1m\"\n\n- **Example**: \"30s\", \"5m\", \"1h\"",
          "type": "string"
        },
        "source_of_truth": {
          "description": "SourceOfTruth optionally overrides server default for this project.\nValues: \"repo\" or \"builder\".",
          "type": "string"
        },
        "start_to_close_timeout": {
          "description": "Maximum time for task execution once started\nDefault: \"5m\"\n\n- **Example**: \"30s\", \"10m\", \"1h\"",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PathCWD": {
      "additionalProperties": false,
      "properties": {
        "path": {
          "description": "Path holds the absolute working directory.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PreprocessConfig": {
      "additionalProperties": false,
      "properties": {
        "dedupe": {
          "type": "boolean"
        },
        "remove_html": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PromptParams": {
      "additionalProperties": false,
      "description": "PromptParams defines the parameters that control LLM behavior during text generation.",
      "properties": {
        "max_length": {
          "description": "MaxLength provides an alternative way to specify maximum response length.\nTypically used by providers that distinguish between length and token limits.\n- **Range**: MinLength to provider-specific maximum\n- **Provider Support**: Primarily local models and some API providers",
          "type": "integer"
        },
        "max_tokens": {
          "description": "MaxTokens limits the maximum number of tokens in the generated response.\nThis parameter is crucial for cost control and response time management.\n- **Range**: 1 to model-specific maximum (e.g., 8192 for GPT-4)\n- **Default**: Provider-specific default (typically 1000-2000)",
          "type": "integer"
        },
        "min_length": {
          "description": "MinLength specifies the minimum number of tokens that must be generated.\nPrevents the model from generating responses that are too short.\n- **Range**: 1 to MaxTokens\n- **Provider Support**: Limited; primarily local models",
          "type": "integer"
        },
        "repetition_penalty": {
          "description": "RepetitionPenalty reduces the likelihood of repeating the same tokens.\nValues \u003e 1.0 penalize repetition, values \u003c 1.0 encourage it.\n- **Range**: 0.1 to 2.0\n- **Recommended**: 1.0 (no penalty) to 1.2 (moderate penalty)\n- **Provider Support**: Primarily local models (Ollama, etc.)",
          "type": "number"
        },
        "seed": {
          "description": "Seed provides a random seed for reproducible outputs.\nWhen set, the same input with the same parameters will generate identical responses.\n- **Use Cases**: Testing, debugging, demonstration, A/B testing\n\u003e **Note:**: Not all providers support seeding; OpenAI and some others do",
          "type": "integer"
        },
        "stop_words": {
          "description": "StopWords defines a list of strings that will halt text generation when encountered.\nUseful for creating structured outputs or preventing unwanted content patterns.\n\n- **Example**: `[\"END\", \"STOP\", \"\\n\\n---\"]` for section-based content\n\u003e **Note:**: Not all providers support stop words; check provider documentation",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "temperature": {
          "description": "Temperature controls the randomness of the generated text.\nLower values produce more deterministic, focused responses.\nHigher values increase creativity and variation but may reduce coherence.\n- **Range**: 0.0 (deterministic) to 1.0 (maximum randomness)\n- **Recommended**: 0.1-0.3 for factual tasks, 0.7-0.9 for creative tasks",
          "type": "number"
        },
        "top_k": {
          "description": "TopK limits the number of highest probability tokens considered during sampling.\nLower values focus on the most likely tokens, higher values allow more variety.\n- **Range**: 1 to vocabulary size (typically 1-100)\n- **Provider Support**: Primarily Google models and some local models",
          "type": "integer"
        },
        "top_p": {
          "description": "TopP (nucleus sampling) considers only tokens with cumulative probability up to this value.\nDynamically adjusts the vocabulary size based on probability distribution.\n- **Range**: 0.0 to 1.0\n- **Recommended**: 0.9 for balanced outputs, 0.95 for more variety",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ProviderConfig": {
      "additionalProperties": false,
      "description": "ProviderConfig represents the complete configuration for an LLM provider in Compozy workflows.",
      "properties": {
        "api_key": {
          "description": "APIKey contains the authentication key for the AI provider.\n\n- **Security**: Use template references to environment variables.\n- **Examples**: `\"{{ .env.OPENAI_API_KEY }}\"`, `\"{{ .secrets.ANTHROPIC_KEY }}\"`\n\u003e **Note:**: Required for most cloud providers, optional for local providers",
          "type": "string"
        },
        "api_url": {
          "description": "APIURL specifies a custom API endpoint for the provider.\n**Use Cases**:\n  - Local model hosting (Ollama, OpenAI-compatible servers)\n  - Enterprise API gateways\n  - Regional API endpoints\n  - Custom proxy servers\n\n**Examples**: `\"http://localhost:11434\"`, `\"https://api.openai.com/v1\"`",
          "type": "string"
        },
        "default": {
          "description": "Default indicates that this model should be used as the fallback when no explicit\nmodel configuration is provided at the task or agent level.\n\n**Behavior**:\n  - Only one model per project can be marked as default\n  - When set to true, this model will be used for tasks/agents without explicit model config\n  - Validation ensures at most one default model per project\n\n**Example**:\n```yaml\nmodels:\n  - provider: openai\n    model: gpt-4\n    default: true  # This will be used by default\n```",
          "type": "boolean"
        },
        "max_tool_iterations": {
          "description": "MaxToolIterations optionally caps the maximum number of tool-call iterations\nduring a single LLM request when tools are available.\nWhen \u003e 0, overrides the global default for this model; 0 uses the global default.",
          "type": "integer"
        },
        "model": {
          "description": "Model defines the specific model identifier to use with the provider.\nModel names are provider-specific and determine capabilities and pricing.\n\n- **Examples**:\n  - OpenAI: `\"gpt-4-turbo\"`, `\"gpt-3.5-turbo\"`\n  - Anthropic: `\"claude-4-opus\"`, `\"claude-3-5-haiku-latest\"`\n  - Google: `\"gemini-pro\"`, `\"gemini-pro-vision\"`\n  - Ollama: `\"llama2:13b\"`, `\"mistral:7b\"`",
          "type": "string"
        },
        "organization": {
          "description": "Organization specifies the organization ID for providers that support it.\n- **Primary Use**: OpenAI organization management for billing and access control\n\n- **Example**: `\"org-123456789abcdef\"`\n\u003e **Note:**: Optional for most providers",
          "type": "string"
        },
        "params": {
          "$ref": "#/$defs/PromptParams",
          "description": "Params contains the generation parameters that control LLM behavior.\nThese parameters are applied to all requests using this provider configuration.\nCan be overridden at the task or action level for specific requirements."
        },
        "provider": {
          "description": "Provider specifies which AI service to use for LLM operations.\nMust match one of the supported ProviderName constants.\n\n- **Examples**: `\"openai\"`, `\"anthropic\"`, `\"google\"`, `\"ollama\"`",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RetrievalConfig": {
      "additionalProperties": false,
      "properties": {
        "fallback": {
          "type": "string"
        },
        "filters": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "inject_as": {
          "type": "string"
        },
        "max_tokens": {
          "type": "integer"
        },
        "min_score": {
          "type": "number"
        },
        "top_k": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "RetryPolicyConfig": {
      "additionalProperties": false,
      "description": "RetryPolicyConfig defines automatic retry behavior for failed tasks.",
      "properties": {
        "backoff_coefficient": {
          "description": "Multiplier for exponential backoff\n- **Default:** `2.0` (doubles each time)\n- **Example:** `1.5`, `2.0`, `3.0`",
          "type": "number"
        },
        "initial_interval": {
          "description": "Initial delay before first retry\n- **Default:** `\"1s\"`\n- **Example:** `\"500ms\"`, `\"2s\"`, `\"1m\"`",
          "type": "string"
        },
        "maximum_attempts": {
          "description": "Maximum retry attempts\n- **Default:** `3`\n- **Example:** `5` for critical operations",
          "type": "integer"
        },
        "maximum_interval": {
          "description": "Maximum delay between retries\n- **Default:** `\"1m\"`\n- **Example:** `\"30s\"`, `\"5m\"`, `\"1h\"`",
          "type": "string"
        },
        "non_retryable_error_types": {
          "description": "Error types that should not trigger retries\n- **Example:** `[\"ValidationError\", \"AuthenticationError\"]`",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RuntimeConfig": {
      "additionalProperties": false,
      "description": "RuntimeConfig defines project-specific runtime overrides.",
      "properties": {
        "entrypoint": {
          "description": "Entrypoint specifies the path to the JavaScript/TypeScript entrypoint file.\nOverrides global runtime.entrypoint_path setting if specified.",
          "type": "string"
        },
        "permissions": {
          "description": "Permissions defines runtime security permissions.\nOverrides global runtime.bun_permissions setting if specified.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "task_execution_timeout_default": {
          "description": "TaskExecutionTimeoutDefault overrides the global runtime.task_execution_timeout_default when provided.\nAccepts Go duration strings (e.g., \"90s\", \"2m\").",
          "type": "integer"
        },
        "task_execution_timeout_max": {
          "description": "TaskExecutionTimeoutMax overrides the global runtime.task_execution_timeout_max when provided.\nAccepts Go duration strings (e.g., \"300s\", \"5m\").",
          "type": "integer"
        },
        "tool_execution_timeout": {
          "description": "ToolExecutionTimeout overrides the global runtime.tool_execution_timeout when provided.\nAccepts Go duration strings (e.g., \"120s\", \"2m\").",
          "type": "integer"
        },
        "type": {
          "description": "Type specifies the JavaScript runtime to use for tool execution.\nOverrides global runtime.runtime_type setting if specified.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Schema": {
      "type": "object"
    },
    "SourceConfig": {
      "additionalProperties": false,
      "properties": {
        "bucket": {
          "type": "string"
        },
        "options": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "path": {
          "type": "string"
        },
        "paths": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "prefix": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "urls": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "video_id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VectorDBConfig": {
      "additionalProperties": false,
      "properties": {
        "config": {
          "$ref": "#/$defs/VectorDBConnConfig"
        },
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VectorDBConnConfig": {
      "additionalProperties": false,
      "properties": {
        "auth": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "consistency": {
          "type": "string"
        },
        "dimension": {
          "type": "integer"
        },
        "dsn": {
          "type": "string"
        },
        "index": {
          "type": "string"
        },
        "metric": {
          "type": "string"
        },
        "table": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkflowSourceConfig": {
      "additionalProperties": false,
      "description": "WorkflowSourceConfig defines the source location for a workflow file.",
      "properties": {
        "source": {
          "description": "Source specifies the path to the workflow YAML file relative to the project root.\n\nThis file contains the task definitions, agent configurations, and execution flow.\nPaths can be:\n  - **Relative**: `\"./workflows/data-analysis.yaml\"` (recommended)\n  - **Nested**: `\"workflows/pipelines/etl.yaml\"`\n  - **Top-level**: `\"main-workflow.yaml\"`\n\nBest practices:\n  - Organize workflows by domain or functionality\n  - Use descriptive names that indicate the workflow's purpose\n  - Keep related workflows in the same directory",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "$id": "project.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "description": "Config represents main Compozy project configuration.",
  "properties": {
    "author": {
      "$ref": "#/$defs/Author",
      "description": "Author information for the project.\n\n$ref: inline:#author"
    },
    "autoload": {
      "$ref": "autoload.json",
      "description": "AutoLoad configures automatic loading and reloading of project resources during development.\n\n$ref: inline:#autoload\n\n**Development Benefits**:\n  - Hot-reload agents and workflows without restart\n  - Automatic discovery of new resources\n  - Faster iteration cycles\n  - Validation on file changes\n\n**Example**:\n\n```yaml\nautoload:\n  enabled: true\n  strict: true              # Fail on validation errors\n  watch_interval: 2s        # Check for changes every 2 seconds\n  include:\n    - \"agents/**/*.yaml\"\n    - \"workflows/**/*.yaml\"\n    - \"memory/**/*.yaml\"\n  exclude:\n    - \"**/*.tmp\"\n    - \"**/*~\"\n```"
    },
    "config": {
      "$ref": "#/$defs/Opts",
      "description": "Opts contains project-wide configuration options for performance tuning and behavior control.\n\n$ref: inline:#project-options"
    },
    "description": {
      "description": "Description provides a human-readable explanation of the project's purpose and capabilities.\n\n**Guidelines**:\n  - Be specific about what the project does\n  - Include primary use cases and benefits\n  - Keep it concise (1-3 sentences)\n  - Avoid technical jargon for broader understanding\n\n**Example**: `\"Multi-agent customer support system with automated ticket routing\"`",
      "type": "string"
    },
    "embedders": {
      "description": "Embedders declares project-level embedding providers that can be reused across workflows.",
      "items": {
        "$ref": "embedder.json"
      },
      "type": "array"
    },
    "knowledge": {
      "description": "Knowledge defines the default binding for tasks or agents within the project scope (MVP single binding).",
      "items": {
        "$ref": "knowledge-binding.json"
      },
      "type": "array"
    },
    "knowledge_bases": {
      "description": "KnowledgeBases declares reusable knowledge base definitions scoped to the project.",
      "items": {
        "$ref": "knowledge-base.json"
      },
      "type": "array"
    },
    "memories": {
      "description": "Memories declares project-scoped memory resources that agents and tasks can reference\nby ID. These are indexed into the ResourceStore under the current project and can be\nused across workflows for conversation and state sharing.\n\nExample:\n\n memories:\n   - id: conversation\n     type: buffer\n     persistence:\n       type: in_memory\n\nThe Resource field on memory.Config is optional in project-level definitions and will\ndefault to \"memory\" during validation.",
      "items": {
        "$ref": "memory.json"
      },
      "type": "array"
    },
    "models": {
      "description": "Models configures the LLM providers and model settings available to this project.\n\n$ref: schema://provider\n\n**Multi-Model Support**:\n  - Configure multiple providers for redundancy\n  - Different models for different tasks (cost/performance optimization)\n  - Fallback chains for high availability\n\n**Supported Providers**:\n  - OpenAI (GPT-4, GPT-3.5, etc.)\n  - Anthropic (Claude models)\n  - Google (Gemini models)\n  - Groq (Fast inference)\n  - Ollama (Local models)\n  - Custom providers via API compatibility\n\n**Example**:\n\n```yaml\nmodels:\n # Primary model for complex reasoning\n - provider: openai\n   model: gpt-4-turbo\n   api_key: \"{{ .env.OPENAI_API_KEY }}\"\n   temperature: 0.7\n   max_tokens: 4000\n\n # Fallback for cost optimization\n - provider: anthropic\n   model: claude-3-haiku\n   api_key: \"{{ .env.ANTHROPIC_API_KEY }}\"\n\n # Local model for sensitive data\n - provider: ollama\n   model: llama2:13b\n   api_url: http://localhost:11434\n```",
      "items": {
        "$ref": "#/$defs/ProviderConfig"
      },
      "type": "array"
    },
    "monitoring": {
      "$ref": "monitoring.json",
      "description": "MonitoringConfig enables observability and metrics collection for performance tracking.\n\n$ref: inline:#monitoring"
    },
    "name": {
      "description": "Name is the unique identifier for this Compozy project.\n\n**Requirements**:\n  - Must be unique within your Compozy installation\n  - Alphanumeric characters, hyphens, and underscores only\n  - Cannot start with a number\n  - Maximum 63 characters\n\n- **Examples**: `\"customer-support-ai\"`, `\"data-pipeline\"`, `\"content-generator\"`",
      "type": "string"
    },
    "runtime": {
      "$ref": "#/$defs/RuntimeConfig",
      "description": "Runtime specifies the JavaScript/TypeScript execution environment for custom tools.\nNOTE: Runtime configuration has been moved to global config (pkg/config.RuntimeConfig)\nThis field is kept for backwards compatibility and project-specific overrides.\n\n$ref: schema://application#runtime"
    },
    "schemas": {
      "description": "Schemas defines the data validation schemas used throughout the project workflows.\n\n**Schema Benefits**:\n  - Type safety for workflow inputs/outputs\n  - Early error detection and validation\n  - Self-documenting data contracts\n  - IDE autocomplete support\n\n**Example**:\n\n```yaml\nschemas:\n - id: user-input\n   schema:\n     type: object\n     properties:\n       name:\n         type: string\n         minLength: 1\n       age:\n         type: integer\n         minimum: 0\n     required: [\"name\"]\n```",
      "items": {
        "$ref": "#/$defs/Schema"
      },
      "type": "array"
    },
    "tools": {
      "description": "Tools defines shared tool definitions available to all workflows and agents\nwithin this project. These tools are inherited unless explicitly overridden.\n\n**Inheritance Rules**:\n  - Agent tools completely override inheritance when present\n  - Workflow tools override project tools by ID\n  - Tool ID collisions resolved by precedence: Agent \u003e Workflow \u003e Project\n\n**Location \u0026 autoload**:\n  - Place reusable tool configuration files under the `tools/` directory (e.g., `tools/*.yaml`)\n  - If autoload is enabled, files in `tools/` will be discovered and validated automatically\n\n**Example**:\n\n```yaml\ntools:\n  - id: code-analyzer\n    description: Analyzes code quality and patterns\n    timeout: 30s\n  - id: data-processor\n    description: Processes and transforms data\n```",
      "items": {
        "$ref": "tool.json"
      },
      "type": "array"
    },
    "vector_dbs": {
      "description": "VectorDBs declares project-level vector database connections that knowledge bases can reference.",
      "items": {
        "$ref": "vectordb.json"
      },
      "type": "array"
    },
    "version": {
      "description": "Version specifies the semantic version of this project configuration.\n\n**Format**: Follows [Semantic Versioning 2.0.0](https://semver.org/)\n  - `MAJOR.MINOR.PATCH` (e.g., `1.2.3`)\n  - Optional pre-release: `1.0.0-alpha.1`\n  - Optional build metadata: `1.0.0+20230615`",
      "type": "string"
    },
    "workflows": {
      "description": "Workflows defines the list of workflow files that compose this project's AI capabilities.",
      "items": {
        "$ref": "#/$defs/WorkflowSourceConfig"
      },
      "type": "array"
    }
  },
  "title": "Project Configuration",
  "type": "object",
  "yamlCompatible": true
}
