{
  "$defs": {
    "AttachmentAudio": {
      "$id": "https://github.com/compozy/compozy/engine/attachment/audio-attachment",
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "description": "Audio attachment supporting URL or path sources.",
      "properties": {
        "meta": {
          "type": "object"
        },
        "mime": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "paths": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "type": {
          "const": "audio",
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "urls": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "AttachmentFile": {
      "$id": "https://github.com/compozy/compozy/engine/attachment/file-attachment",
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "description": "Local file attachment resolved from the project workspace.",
      "properties": {
        "meta": {
          "type": "object"
        },
        "mime": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "type": {
          "const": "file",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "AttachmentImage": {
      "$id": "https://github.com/compozy/compozy/engine/attachment/image-attachment",
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "description": "Image attachment supporting URL or path sources.",
      "properties": {
        "meta": {
          "type": "object"
        },
        "mime": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "paths": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "type": {
          "const": "image",
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "urls": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "AttachmentPDF": {
      "$id": "https://github.com/compozy/compozy/engine/attachment/pdf-attachment",
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "description": "PDF attachment with optional page limits and multiple sources.",
      "properties": {
        "max_pages": {
          "type": "integer"
        },
        "meta": {
          "type": "object"
        },
        "mime": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "paths": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "type": {
          "const": "pdf",
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "urls": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "AttachmentURL": {
      "$id": "https://github.com/compozy/compozy/engine/attachment/url-attachment",
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "description": "External URL attachment.",
      "properties": {
        "meta": {
          "type": "object"
        },
        "mime": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "const": "url",
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "AttachmentVideo": {
      "$id": "https://github.com/compozy/compozy/engine/attachment/video-attachment",
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "description": "Video attachment supporting URL or path sources.",
      "properties": {
        "meta": {
          "type": "object"
        },
        "mime": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "paths": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "type": {
          "const": "video",
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "urls": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "Input": {
      "type": "object"
    },
    "PathCWD": {
      "additionalProperties": false,
      "properties": {
        "path": {
          "description": "Path holds the absolute working directory.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Schema": {
      "type": "object"
    }
  },
  "$id": "action-config.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "description": "ActionConfig defines a structured action that an agent can perform.",
  "properties": {
    "attachments": {
      "description": "Attachments available at this configuration scope.",
      "items": {
        "discriminator": {
          "propertyName": "type"
        },
        "oneOf": [
          {
            "$ref": "#/$defs/AttachmentImage"
          },
          {
            "$ref": "#/$defs/AttachmentPDF"
          },
          {
            "$ref": "#/$defs/AttachmentAudio"
          },
          {
            "$ref": "#/$defs/AttachmentVideo"
          },
          {
            "$ref": "#/$defs/AttachmentURL"
          },
          {
            "$ref": "#/$defs/AttachmentFile"
          }
        ]
      },
      "type": "array"
    },
    "id": {
      "description": "Unique identifier for the action within the agent's scope.\nUsed to invoke specific actions programmatically.\n\n- **Examples:** `\"analyze-code\"`, `\"generate-summary\"`, `\"validate-data\"`",
      "type": "string"
    },
    "input": {
      "$ref": "#/$defs/Schema",
      "description": "JSON Schema defining the expected input parameters for this action.\nEnables validation and type checking of inputs before execution.\n\nIf `nil`, the action accepts any input format without validation.\n\n**Schema format:** JSON Schema Draft 7"
    },
    "output": {
      "$ref": "#/$defs/Schema",
      "description": "JSON Schema defining the expected output format from this action.\nUsed for validating agent responses and ensuring consistent output structure.\n\nIf `nil`, no output validation is performed.\n\n**Schema format:** JSON Schema Draft 7"
    },
    "prompt": {
      "description": "Detailed instructions for the agent when executing this action.\nShould clearly define the expected behavior, output format, and any constraints.\n\n**Best practices:**\n- Be specific about the desired outcome\n- Include examples if complex formatting is required\n- Define clear success criteria\n- Specify any limitations or boundaries",
      "type": "string"
    },
    "with": {
      "$ref": "#/$defs/Input",
      "description": "Default parameters to provide to the action.\nThese are merged with runtime parameters, with runtime values taking precedence.\n\n**Use cases:**\n- Setting default configuration options\n- Providing constant context values\n- Pre-filling common parameters"
    }
  },
  "title": "Agent Action Configuration",
  "type": "object",
  "yamlCompatible": true
}
