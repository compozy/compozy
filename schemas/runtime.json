{
  "$defs": {
    "NativeCallAgentConfig": {
      "additionalProperties": false,
      "description": "NativeCallAgentConfig configures cp__call_agent behavior.",
      "properties": {
        "default_timeout": {
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "NativeExecArgumentConfig": {
      "additionalProperties": false,
      "description": "NativeExecArgumentConfig enforces validation for a single argument position.",
      "properties": {
        "enum": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "index": {
          "type": "integer"
        },
        "optional": {
          "type": "boolean"
        },
        "pattern": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "NativeExecCommandConfig": {
      "additionalProperties": false,
      "description": "NativeExecCommandConfig defines per-command execution policies.",
      "properties": {
        "allow_additional": {
          "type": "boolean"
        },
        "arguments": {
          "items": {
            "$ref": "#/$defs/NativeExecArgumentConfig"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "max_args": {
          "type": "integer"
        },
        "path": {
          "type": "string"
        },
        "timeout": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "NativeExecConfig": {
      "additionalProperties": false,
      "description": "NativeExecConfig holds cp__exec configuration knobs.",
      "properties": {
        "allowlist": {
          "items": {
            "$ref": "#/$defs/NativeExecCommandConfig"
          },
          "type": "array"
        },
        "max_stderr_bytes": {
          "type": "integer"
        },
        "max_stdout_bytes": {
          "type": "integer"
        },
        "timeout": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "NativeFetchConfig": {
      "additionalProperties": false,
      "description": "NativeFetchConfig holds cp__fetch configuration knobs.",
      "properties": {
        "allowed_methods": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "max_body_bytes": {
          "type": "integer"
        },
        "max_redirects": {
          "type": "integer"
        },
        "timeout": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "NativeToolsConfig": {
      "additionalProperties": false,
      "description": "NativeToolsConfig controls cp__ builtin enablement and sandbox settings.",
      "properties": {
        "additional_roots": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "call_agent": {
          "$ref": "#/$defs/NativeCallAgentConfig"
        },
        "enabled": {
          "type": "boolean"
        },
        "exec": {
          "$ref": "#/$defs/NativeExecConfig"
        },
        "fetch": {
          "$ref": "#/$defs/NativeFetchConfig"
        },
        "root_dir": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "$id": "runtime.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "description": "Complete runtime configuration for both tool execution and system behavior",
  "properties": {
    "async_token_counter_buffer_size": {
      "description": "AsyncTokenCounterBufferSize sets the token counter queue size.\n\nLarger buffers handle traffic spikes better but use more memory.\nDefault: 100",
      "type": "integer"
    },
    "async_token_counter_workers": {
      "description": "AsyncTokenCounterWorkers sets the number of token counting workers.\n\nMore workers improve throughput for high-volume token counting.\nDefault: 4",
      "type": "integer"
    },
    "bun_permissions": {
      "description": "BunPermissions defines runtime security permissions for Bun.\n\nDefault: [\"--allow-read\"]",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "dispatcher_heartbeat_interval": {
      "description": "DispatcherHeartbeatInterval sets how often dispatchers report health.\n\nLower values provide faster failure detection but increase load.\nDefault: 30s",
      "type": "integer"
    },
    "dispatcher_heartbeat_ttl": {
      "description": "DispatcherHeartbeatTTL sets heartbeat expiration time.\n\nMust be greater than heartbeat interval to handle network delays.\nDefault: 90s",
      "type": "integer"
    },
    "dispatcher_stale_threshold": {
      "description": "DispatcherStaleThreshold defines when a dispatcher is considered failed.\n\nTriggers reassignment of dispatcher's workflows.\nDefault: 120s",
      "type": "integer"
    },
    "entrypoint": {
      "description": "Entrypoint specifies the path to the JavaScript/TypeScript entrypoint file.\nOverrides global runtime.entrypoint_path setting if specified.",
      "type": "string"
    },
    "entrypoint_path": {
      "description": "EntrypointPath specifies the path to the JavaScript/TypeScript entrypoint file.\nLeave empty to disable custom TypeScript tools and rely on built-in capabilities.",
      "type": "string"
    },
    "environment": {
      "description": "Environment specifies the deployment environment.\n\nAffects:\n  - Error verbosity and stack traces\n  - Performance optimizations\n  - Debug endpoints availability\n  - Default timeouts and limits\n\nValues: \"development\", \"staging\", \"production\"",
      "type": "string"
    },
    "log_level": {
      "description": "LogLevel controls logging verbosity.\n\nLevels (least to most verbose):\n  - `\"error\"`: Critical errors only\n  - `\"warn\"`: Warnings and errors\n  - `\"info\"`: General operational info (default)\n  - `\"debug\"`: Detailed debugging information",
      "type": "string"
    },
    "native_tools": {
      "$ref": "#/$defs/NativeToolsConfig",
      "description": "NativeTools configures native cp__ tool behavior and guards."
    },
    "permissions": {
      "description": "Permissions defines runtime security permissions.\nOverrides global runtime.bun_permissions setting if specified.",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "runtime_type": {
      "description": "RuntimeType specifies the JavaScript runtime to use for tool execution.\n\nValues: \"bun\", \"node\"\nDefault: \"bun\"",
      "type": "string"
    },
    "task_execution_timeout_default": {
      "description": "TaskExecutionTimeoutDefault controls the fallback timeout applied when direct task executions\nomit a timeout value. Applies to synchronous and asynchronous direct executions triggered via API.\nDefault: 60s",
      "type": "integer"
    },
    "task_execution_timeout_max": {
      "description": "TaskExecutionTimeoutMax caps the maximum timeout allowed for direct task executions.\nClient-specified or configuration-derived timeouts exceeding this value are rejected.\nDefault: 300s",
      "type": "integer"
    },
    "tool_execution_timeout": {
      "description": "ToolExecutionTimeout sets the maximum time for tool execution.\n\nPrevents runaway tools from blocking workflows.\nDefault: 60s",
      "type": "integer"
    },
    "type": {
      "description": "Type specifies the JavaScript runtime to use for tool execution.\nOverrides global runtime.runtime_type setting if specified.",
      "type": "string"
    }
  },
  "title": "Compozy Runtime Configuration",
  "type": "object",
  "yamlCompatible": true
}
