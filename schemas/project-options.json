{
  "$defs": {
    "ErrorTransition": {
      "additionalProperties": false,
      "description": "ErrorTransition defines error handling behavior when a task fails.",
      "properties": {
        "next": {
          "description": "ID of the error handler task\n\n- **Example**: \"handle-error\", \"retry-with-fallback\"",
          "type": "string"
        },
        "with": {
          "description": "Error context passed to the handler\nIncludes error details: { \"error\": \"{{ .error }}\", \"attempt\": \"{{ .retryCount }}\" }",
          "type": "object"
        }
      },
      "type": "object"
    },
    "Input": {
      "type": "object"
    },
    "RetryPolicyConfig": {
      "additionalProperties": false,
      "description": "RetryPolicyConfig defines automatic retry behavior for failed tasks.",
      "properties": {
        "backoff_coefficient": {
          "description": "Multiplier for exponential backoff\n- **Default:** `2.0` (doubles each time)\n- **Example:** `1.5`, `2.0`, `3.0`",
          "type": "number"
        },
        "initial_interval": {
          "description": "Initial delay before first retry\n- **Default:** `\"1s\"`\n- **Example:** `\"500ms\"`, `\"2s\"`, `\"1m\"`",
          "type": "string"
        },
        "maximum_attempts": {
          "description": "Maximum retry attempts\n- **Default:** `3`\n- **Example:** `5` for critical operations",
          "type": "integer"
        },
        "maximum_interval": {
          "description": "Maximum delay between retries\n- **Default:** `\"1m\"`\n- **Example:** `\"30s\"`, `\"5m\"`, `\"1h\"`",
          "type": "string"
        },
        "non_retryable_error_types": {
          "description": "Error types that should not trigger retries\n- **Example:** `[\"ValidationError\", \"AuthenticationError\"]`",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    }
  },
  "$id": "project-options.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "description": "Opts contains project-specific configuration options.",
  "properties": {
    "heartbeat_timeout": {
      "description": "Interval for task heartbeat signals\nUsed for long-running tasks to indicate progress\n\n- **Example**: \"10s\", \"30s\", \"1m\"",
      "type": "string"
    },
    "on_error": {
      "additionalProperties": false,
      "description": "ErrorTransition defines error handling behavior when a task fails.",
      "properties": {
        "next": {
          "description": "ID of the error handler task\n\n- **Example**: \"handle-error\", \"retry-with-fallback\"",
          "type": "string"
        },
        "with": {
          "description": "Error context passed to the handler\nIncludes error details: { \"error\": \"{{ .error }}\", \"attempt\": \"{{ .retryCount }}\" }",
          "type": "object"
        }
      },
      "type": "object"
    },
    "retry_policy": {
      "additionalProperties": false,
      "description": "RetryPolicyConfig defines automatic retry behavior for failed tasks.",
      "properties": {
        "backoff_coefficient": {
          "description": "Multiplier for exponential backoff\n- **Default:** `2.0` (doubles each time)\n- **Example:** `1.5`, `2.0`, `3.0`",
          "type": "number"
        },
        "initial_interval": {
          "description": "Initial delay before first retry\n- **Default:** `\"1s\"`\n- **Example:** `\"500ms\"`, `\"2s\"`, `\"1m\"`",
          "type": "string"
        },
        "maximum_attempts": {
          "description": "Maximum retry attempts\n- **Default:** `3`\n- **Example:** `5` for critical operations",
          "type": "integer"
        },
        "maximum_interval": {
          "description": "Maximum delay between retries\n- **Default:** `\"1m\"`\n- **Example:** `\"30s\"`, `\"5m\"`, `\"1h\"`",
          "type": "string"
        },
        "non_retryable_error_types": {
          "description": "Error types that should not trigger retries\n- **Example:** `[\"ValidationError\", \"AuthenticationError\"]`",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "schedule_to_close_timeout": {
      "description": "Total timeout from scheduling to completion\nDefault: \"6m\"\n\n- **Example**: \"1m\", \"15m\", \"2h\"",
      "type": "string"
    },
    "schedule_to_start_timeout": {
      "description": "Maximum time to wait for a task to start executing\nDefault: \"1m\"\n\n- **Example**: \"30s\", \"5m\", \"1h\"",
      "type": "string"
    },
    "source_of_truth": {
      "description": "SourceOfTruth optionally overrides server default for this project.\nValues: \"repo\" or \"builder\".",
      "type": "string"
    },
    "start_to_close_timeout": {
      "description": "Maximum time for task execution once started\nDefault: \"5m\"\n\n- **Example**: \"30s\", \"10m\", \"1h\"",
      "type": "string"
    }
  },
  "type": "object",
  "yamlCompatible": true
}
