{
  "$defs": {
    "CircuitBreakerConfig": {
      "additionalProperties": false,
      "description": "CircuitBreakerConfig defines parameters for a circuit breaker pattern.",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "max_failures": {
          "type": "integer"
        },
        "reset_timeout": {
          "description": "e.g., \"30s\"",
          "type": "string"
        },
        "timeout": {
          "description": "e.g., \"100ms\"",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FlushingStrategyConfig": {
      "additionalProperties": false,
      "description": "FlushingStrategyConfig holds the configuration for how memory is flushed or trimmed.",
      "properties": {
        "summarize_oldest_percent": {
          "description": "SummarizeOldestPercent is the percentage of the oldest messages to summarize. Only for hybrid_summary.\nE.g., 0.3 means summarize the oldest 30% of messages.",
          "type": "number"
        },
        "summarize_threshold": {
          "description": "SummarizeThreshold is the percentage of MaxTokens/MaxMessages at which summarization should trigger.\nE.g., 0.8 means trigger summarization when memory is 80% full. Only for hybrid_summary.",
          "type": "number"
        },
        "summary_tokens": {
          "description": "SummaryTokens is the target token count for generated summaries. Only for hybrid_summary.",
          "type": "integer"
        },
        "type": {
          "description": "Type is the kind of flushing strategy to apply (e.g., hybrid_summary).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LockConfig": {
      "additionalProperties": false,
      "description": "LockConfig defines lock timeout settings for memory operations.",
      "properties": {
        "append_ttl": {
          "description": "AppendTTL is the lock timeout for append operations (default: \"30s\")",
          "type": "string"
        },
        "clear_ttl": {
          "description": "ClearTTL is the lock timeout for clear operations (default: \"10s\")",
          "type": "string"
        },
        "flush_ttl": {
          "description": "FlushTTL is the lock timeout for flush operations (default: \"5m\")",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PersistenceConfig": {
      "additionalProperties": false,
      "description": "PersistenceConfig defines how memory instances are persisted.",
      "properties": {
        "circuit_breaker": {
          "additionalProperties": false,
          "description": "CircuitBreakerConfig defines parameters for a circuit breaker pattern.",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "max_failures": {
              "type": "integer"
            },
            "reset_timeout": {
              "description": "e.g., \"30s\"",
              "type": "string"
            },
            "timeout": {
              "description": "e.g., \"100ms\"",
              "type": "string"
            }
          },
          "type": "object"
        },
        "ttl": {
          "description": "TTL is the time-to-live for memory instances in this resource.\nParsed as a duration string (e.g., \"24h\", \"30m\").",
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PrivacyPolicyConfig": {
      "additionalProperties": false,
      "description": "PrivacyPolicyConfig defines rules for handling sensitive data.",
      "properties": {
        "default_redaction_string": {
          "description": "DefaultRedactionString is the string to replace redacted content with. Defaults to \"[REDACTED]\".",
          "type": "string"
        },
        "non_persistable_message_types": {
          "description": "NonPersistableMessageTypes is a list of message types/roles that should not be persisted.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "redact_patterns": {
          "description": "RedactPatterns is a list of regex patterns to apply for redacting content.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "TokenAllocation": {
      "additionalProperties": false,
      "description": "TokenAllocation defines percentages for distributing a token budget across different categories of memory content.",
      "properties": {
        "long_term": {
          "description": "LongTerm is the percentage of tokens allocated for summarized or older important context.",
          "type": "number"
        },
        "short_term": {
          "description": "ShortTerm is the percentage of tokens allocated for recent messages.",
          "type": "number"
        },
        "system": {
          "description": "System is the percentage of tokens reserved for system prompts or critical instructions.",
          "type": "number"
        },
        "user_defined": {
          "additionalProperties": {
            "type": "number"
          },
          "description": "UserDefined is a map for additional custom allocations if needed.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "TokenProviderConfig": {
      "additionalProperties": false,
      "description": "TokenProviderConfig defines configuration for multi-provider token counting",
      "properties": {
        "api_key": {
          "description": "API key for real-time counting (can be env var reference like ${OPENAI_API_KEY})",
          "type": "string"
        },
        "api_key_env": {
          "description": "Environment variable name containing the API key",
          "type": "string"
        },
        "endpoint": {
          "description": "Optional custom endpoint",
          "type": "string"
        },
        "fallback": {
          "description": "Fallback strategy",
          "type": "string"
        },
        "model": {
          "description": "Model name",
          "type": "string"
        },
        "provider": {
          "description": "\"openai\", \"anthropic\", etc.",
          "type": "string"
        },
        "settings": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Provider-specific settings",
          "type": "object"
        }
      },
      "type": "object"
    }
  },
  "$id": "memory.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "description": "Config defines the structure for a memory resource configuration.",
  "properties": {
    "default_key_template": {
      "description": "DefaultKeyTemplate provides a fallback key template used when an\nagent's memory reference omits the `key` field and supplies only the\nmemory ID. The template supports the same variables available to\nagent-level key templates and will be rendered at runtime.\nExample: \"session:{{.workflow.input.session_id}}\"",
      "type": "string"
    },
    "description": {
      "description": "Description provides a **human-readable explanation** of the memory resource's purpose.\nThis helps developers understand what kind of data this memory stores and\nhow it should be used within workflows.",
      "type": "string"
    },
    "flushing": {
      "additionalProperties": false,
      "description": "FlushingStrategyConfig holds the configuration for how memory is flushed or trimmed.",
      "properties": {
        "summarize_oldest_percent": {
          "description": "SummarizeOldestPercent is the percentage of the oldest messages to summarize. Only for hybrid_summary.\nE.g., 0.3 means summarize the oldest 30% of messages.",
          "type": "number"
        },
        "summarize_threshold": {
          "description": "SummarizeThreshold is the percentage of MaxTokens/MaxMessages at which summarization should trigger.\nE.g., 0.8 means trigger summarization when memory is 80% full. Only for hybrid_summary.",
          "type": "number"
        },
        "summary_tokens": {
          "description": "SummaryTokens is the target token count for generated summaries. Only for hybrid_summary.",
          "type": "integer"
        },
        "type": {
          "description": "Type is the kind of flushing strategy to apply (e.g., hybrid_summary).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "id": {
      "description": "ID is the **unique identifier** for this memory resource within the project.\nThis ID is used by agents to reference the memory in their configuration.\n- **Examples**: `\"user_conversation\"`, `\"session_context\"`, `\"agent_workspace\"`",
      "type": "string"
    },
    "locking": {
      "additionalProperties": false,
      "description": "LockConfig defines lock timeout settings for memory operations.",
      "properties": {
        "append_ttl": {
          "description": "AppendTTL is the lock timeout for append operations (default: \"30s\")",
          "type": "string"
        },
        "clear_ttl": {
          "description": "ClearTTL is the lock timeout for clear operations (default: \"10s\")",
          "type": "string"
        },
        "flush_ttl": {
          "description": "FlushTTL is the lock timeout for flush operations (default: \"5m\")",
          "type": "string"
        }
      },
      "type": "object"
    },
    "max_context_ratio": {
      "description": "MaxContextRatio specifies the **maximum portion** of an LLM's context window this memory should use.\nValue between 0 and 1. Dynamically calculates MaxTokens based on the model's context window.\n\n- **Example**: `0.5` means use at most 50% of the model's context window for memory,\nleaving the rest for system prompts and current task context.",
      "type": "number"
    },
    "max_messages": {
      "description": "MaxMessages is the **hard limit** on the number of messages this memory can store.\nApplicable for `\"message_count_based\"` type or as a secondary limit for `\"token_based\"`.\n\n- **Example**: `100` (keeps last 100 messages in conversation)",
      "type": "integer"
    },
    "max_tokens": {
      "description": "MaxTokens is the **hard limit** on the number of tokens this memory can hold.\nOnly applicable when Type is `\"token_based\"`. When this limit is reached,\nthe flushing strategy determines how to make room for new content.\n\n- **Example**: `4000` (roughly equivalent to ~3000 words)",
      "type": "integer"
    },
    "persistence": {
      "additionalProperties": false,
      "description": "PersistenceConfig defines how memory instances are persisted.",
      "properties": {
        "circuit_breaker": {
          "additionalProperties": false,
          "description": "CircuitBreakerConfig defines parameters for a circuit breaker pattern.",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "max_failures": {
              "type": "integer"
            },
            "reset_timeout": {
              "description": "e.g., \"30s\"",
              "type": "string"
            },
            "timeout": {
              "description": "e.g., \"100ms\"",
              "type": "string"
            }
          },
          "type": "object"
        },
        "ttl": {
          "description": "TTL is the time-to-live for memory instances in this resource.\nParsed as a duration string (e.g., \"24h\", \"30m\").",
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "privacy_policy": {
      "additionalProperties": false,
      "description": "PrivacyPolicyConfig defines rules for handling sensitive data.",
      "properties": {
        "default_redaction_string": {
          "description": "DefaultRedactionString is the string to replace redacted content with. Defaults to \"[REDACTED]\".",
          "type": "string"
        },
        "non_persistable_message_types": {
          "description": "NonPersistableMessageTypes is a list of message types/roles that should not be persisted.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "redact_patterns": {
          "description": "RedactPatterns is a list of regex patterns to apply for redacting content.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "resource": {
      "description": "Resource type identifier, **must be \"memory\"**.\nThis field is used by the autoloader system to identify and properly\nregister this configuration as a memory resource.",
      "type": "string"
    },
    "token_allocation": {
      "additionalProperties": false,
      "description": "TokenAllocation defines percentages for distributing a token budget across different categories of memory content.",
      "properties": {
        "long_term": {
          "description": "LongTerm is the percentage of tokens allocated for summarized or older important context.",
          "type": "number"
        },
        "short_term": {
          "description": "ShortTerm is the percentage of tokens allocated for recent messages.",
          "type": "number"
        },
        "system": {
          "description": "System is the percentage of tokens reserved for system prompts or critical instructions.",
          "type": "number"
        },
        "user_defined": {
          "additionalProperties": {
            "type": "number"
          },
          "description": "UserDefined is a map for additional custom allocations if needed.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "token_provider": {
      "additionalProperties": false,
      "description": "TokenProviderConfig defines configuration for multi-provider token counting",
      "properties": {
        "api_key": {
          "description": "API key for real-time counting (can be env var reference like ${OPENAI_API_KEY})",
          "type": "string"
        },
        "api_key_env": {
          "description": "Environment variable name containing the API key",
          "type": "string"
        },
        "endpoint": {
          "description": "Optional custom endpoint",
          "type": "string"
        },
        "fallback": {
          "description": "Fallback strategy",
          "type": "string"
        },
        "model": {
          "description": "Model name",
          "type": "string"
        },
        "provider": {
          "description": "\"openai\", \"anthropic\", etc.",
          "type": "string"
        },
        "settings": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Provider-specific settings",
          "type": "object"
        }
      },
      "type": "object"
    },
    "type": {
      "description": "Type indicates the **primary memory management strategy**:\n- **`\"token_based\"`**: Manages memory based on token count limits (recommended for LLM contexts)\n- **`\"message_count_based\"`**: Manages memory based on message count limits\n- **`\"buffer\"`**: Simple buffer that stores messages up to a limit without sophisticated eviction",
      "type": "string"
    },
    "version": {
      "description": "Version allows **tracking changes** to the memory resource definition.\nCan be used for migration strategies when memory schema evolves.\n**Format**: semantic versioning (e.g., `\"1.0.0\"`, `\"2.1.0-beta\"`)",
      "type": "string"
    }
  },
  "type": "object",
  "yamlCompatible": true
}
