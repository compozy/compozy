# yaml-language-server: $schema=https://goreleaser.com/static/schema-pro.json
# vim: set ts=2 sw=2 tw=0 fo=jcroql
version: 2

# Project configuration
project_name: compozy-mcp-proxy

# Metadata configuration
metadata:
  mod_timestamp: "{{ .CommitTimestamp }}"
  license: "BSL-1.1"
  homepage: "https://github.com/compozy/compozy"
  description: "Model Context Protocol Proxy - HTTP gateway for MCP servers"
  maintainers:
    - "Compozy Team <support@compozy.com>"

# Environment variables
env:
  - GO111MODULE=on
  - CGO_ENABLED=0

# Git configuration
git:
  tag_sort: -version:refname

# Nightly builds configuration
nightly:
  publish_release: true
  keep_single_release: true
  version_template: "{{ incminor .Version }}-nightly"

# Build configuration
builds:
  - id: compozy-mcp-proxy
    main: ./cmd/mcp-proxy/main.go
    binary: compozy-mcp-proxy

    # Build for multiple platforms
    goos:
      - linux
      - darwin
      - windows
      - freebsd
      - openbsd
      - netbsd

    goarch:
      - amd64
      - arm64
      - "386"
      - arm

    goarm:
      - "7"

    # Build constraints
    ignore:
      # Skip unsupported combinations
      - goos: windows
        goarch: arm64
      - goos: darwin
        goarch: "386"
      - goos: darwin
        goarch: arm

    # Linker flags for version injection
    ldflags:
      - -s -w
      - -X github.com/compozy/compozy/pkg/version.Version={{.Version}}
      - -X github.com/compozy/compozy/pkg/version.CommitHash={{.ShortCommit}}
      - -X github.com/compozy/compozy/pkg/version.BuildDate={{.Date}}

    # Build environment
    env:
      - CGO_ENABLED=0

    # Build flags
    flags:
      - -trimpath

    # Build mode
    mod_timestamp: "{{ .CommitTimestamp }}"

# Archive configuration
archives:
  - id: compozy-mcp-proxy-archive
    builds:
      - compozy-mcp-proxy

    # Archive name template
    name_template:
      "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{\\
      \\ end }}"

    # Archive format
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip

    # Files to include in archive
    files:
      - README.md
      - LICENSE*
      - CHANGELOG.md
      - docs/mcp-proxy/README.md

    # Wrap in directory
    wrap_in_directory: true

# Checksum configuration
checksum:
  name_template: "checksums.txt"
  algorithm: sha256

# Signing configuration
signs:
  - cmd: cosign
    certificate: "${artifact}.pem"
    args:
      - sign-blob
      - "--output-certificate=${certificate}"
      - "--output-signature=${signature}"
      - "${artifact}"
      - "--yes"
    artifacts: checksum
    output: true

# Snapshot configuration (for non-tagged builds)
snapshot:
  version_template: "0.0.0-{{ .Timestamp }}"

# Source archive configuration
source:
  enabled: true

# Changelog configuration
changelog:
  use: github
  sort: asc
  abbrev: 7

  # Changelog groups
  groups:
    - title: "üéâ New Features"
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: "üêõ Bug Fixes"
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 1
    - title: "‚ö° Performance Improvements"
      regexp: "^.*perf[(\\w)]*:+.*$"
      order: 2
    - title: "üîê Security Updates"
      regexp: "^.*security[(\\w)]*:+.*$"
      order: 3
    - title: "üìö Documentation"
      regexp: "^.*docs[(\\w)]*:+.*$"
      order: 4
    - title: "üîß Refactoring"
      regexp: "^.*refactor[(\\w)]*:+.*$"
      order: 5
    - title: "üì¶ Dependencies"
      regexp: "^.*deps[(\\w)]*:+.*$"
      order: 6
    - title: "üß™ Testing"
      regexp: "^.*test[(\\w)]*:+.*$"
      order: 7
    - title: "Other Changes"
      order: 999

  # Filters
  filters:
    exclude:
      - "^(build|ci): "
      - "^chore: auto-update generated files$"
      - "^chore: docs$"
      - "^chore: schema update$"
      - "^chore: typo$"
      - "^chore\\(legal\\): "
      - "^chore\\(deps\\): "
      - "^docs: update$"
      - "^test:"
      - "^test\\("
      - "merge conflict"
      - Merge branch
      - Merge pull request
      - Merge remote-tracking branch
      - go mod tidy
      - "^wip "
      - "^wip:"

# Release configuration
release:
  # GitHub repository
  github:
    owner: compozy
    name: compozy

  # Release name template
  name_template: "Compozy MCP Proxy {{ .Version }}"

  # Release mode
  mode: replace

  # Draft release
  draft: false

  # Prerelease detection
  prerelease: auto

  # Release header and footer
  header: |
    ## Compozy MCP Proxy {{ .Version }}

    The Model Context Protocol Proxy provides HTTP gateway access to MCP servers.

    ### Installation

    #### Binary Download
    Download the appropriate binary for your platform from the assets below.

    #### Docker Image
    ```bash
    docker pull ghcr.io/compozy/compozy-mcp-proxy:{{ .Version }}
    ```

    #### Homebrew
    ```bash
    brew install compozy/compozy/compozy-mcp-proxy
    ```

  footer: |
    ### Verification

    All release artifacts are signed and can be verified:

    #### Checksums
    ```bash
    cosign verify-blob \
      --signature checksums.txt.sig \
      --certificate checksums.txt.pem \
      checksums.txt
    ```

    #### Container Images
    ```bash
    cosign verify ghcr.io/compozy/compozy-mcp-proxy:{{ .Version }}
    ```

    **Full Changelog**: https://github.com/compozy/compozy/compare/{{ .PreviousTag }}...{{ .Tag }}

    ---

    Thank you to all contributors who made this release possible! üôè

# Docker configuration
dockers:
  # MCP Proxy - AMD64
  - id: compozy-mcp-proxy-amd64
    ids:
      - compozy-mcp-proxy
    dockerfile: cluster/mcpproxy.Dockerfile
    use: buildx
    goos: linux
    goarch: amd64
    image_templates:
      - "ghcr.io/compozy/compozy-mcp-proxy:{{ .Version }}-amd64"
      - "ghcr.io/compozy/compozy-mcp-proxy:latest-amd64"
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.title=Compozy MCP Proxy"
      - "--label=org.opencontainers.image.description=Model Context Protocol Proxy"
      - "--label=org.opencontainers.image.url=https://github.com/compozy/compozy"
      - "--label=org.opencontainers.image.source=https://github.com/compozy/compozy"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.licenses=BSL-1.1"
      - "--label=org.opencontainers.image.vendor=Compozy"
    extra_files:
      - "README.md"
      - "LICENSE"

  # MCP Proxy - ARM64
  - id: compozy-mcp-proxy-arm64
    ids:
      - compozy-mcp-proxy
    dockerfile: cluster/mcpproxy.Dockerfile
    use: buildx
    goos: linux
    goarch: arm64
    image_templates:
      - "ghcr.io/compozy/compozy-mcp-proxy:{{ .Version }}-arm64"
      - "ghcr.io/compozy/compozy-mcp-proxy:latest-arm64"
    build_flag_templates:
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.title=Compozy MCP Proxy"
      - "--label=org.opencontainers.image.description=Model Context Protocol Proxy"
      - "--label=org.opencontainers.image.url=https://github.com/compozy/compozy"
      - "--label=org.opencontainers.image.source=https://github.com/compozy/compozy"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.licenses=BSL-1.1"
      - "--label=org.opencontainers.image.vendor=Compozy"
    extra_files:
      - "README.md"
      - "LICENSE"

# Docker manifest configuration for multi-arch images
docker_manifests:
  - name_template: "ghcr.io/compozy/compozy-mcp-proxy:{{ .Version }}"
    image_templates:
      - "ghcr.io/compozy/compozy-mcp-proxy:{{ .Version }}-amd64"
      - "ghcr.io/compozy/compozy-mcp-proxy:{{ .Version }}-arm64"

  - name_template: "ghcr.io/compozy/compozy-mcp-proxy:latest"
    image_templates:
      - "ghcr.io/compozy/compozy-mcp-proxy:latest-amd64"
      - "ghcr.io/compozy/compozy-mcp-proxy:latest-arm64"

# Container image signing with cosign
docker_signs:
  - cmd: cosign
    args:
      - "sign"
      - "--yes"
      - "${artifact}@${digest}"
    artifacts: images
    output: true

# Homebrew tap configuration
brews:
  - name: compozy-mcp-proxy
    # GitHub repository to push the formula to
    repository:
      owner: compozy
      name: homebrew-compozy
      branch: main
      # Token for the repository
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"

    # Git author used to commit to the repository
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com

    # The project name and current git tag are used in the format string
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"

    # Directory inside the repository to put the formula
    directory: Formula

    # Caveats for the user of your binary
    caveats: |
      To get started with MCP Proxy, you need to:

      1. Set up the required environment variables
      2. Configure your MCP servers

      See https://github.com/compozy/compozy for more information.

    # Homepage for the project
    homepage: "https://github.com/compozy/compozy"

    # Short description of your project
    description: "Model Context Protocol Proxy"

    # License of your project
    license: "BSL-1.1"

    # Setting this will prevent goreleaser to publish the formula
    # in case there are no unix builds
    skip_upload: auto

    # Custom block for the brew formula
    dependencies:
      - name: redis
        type: optional

    # Install script
    install: |
      bin.install "compozy-mcp-proxy"

    # Test block
    test: |
      system "#{bin}/compozy-mcp-proxy", "--help"

# NPM publishing configuration
npms:
  - name: "compozy-mcp-proxy"
    repository: "git+https://github.com/compozy/compozy.git"
    bugs: https://github.com/compozy/compozy/issues
    homepage: https://github.com/compozy/compozy
    description: "Model Context Protocol Proxy - HTTP gateway for MCP servers"
    license: BSL-1.1
    access: public

# NFPM packaging configuration
nfpms:
  - id: compozy-mcp-proxy-packages
    package_name: compozy-mcp-proxy
    file_name_template: "{{ .ConventionalFileName }}"

    vendor: "Compozy"
    homepage: "https://github.com/compozy/compozy"
    maintainer: "Compozy Team <support@compozy.com>"
    description: "Model Context Protocol Proxy - HTTP gateway for MCP servers"
    license: "BSL-1.1"

    formats:
      - apk
      - deb
      - rpm
      - archlinux

    contents:
      - src: ./completions/compozy-mcp-proxy.bash
        dst: /etc/bash_completion.d/compozy-mcp-proxy
        file_info:
          mode: 0644
      - src: ./completions/compozy-mcp-proxy.fish
        dst: /usr/share/fish/vendor_completions.d/compozy-mcp-proxy.fish
        file_info:
          mode: 0644
      - src: ./completions/compozy-mcp-proxy.zsh
        dst: /usr/share/zsh/site-functions/_compozy-mcp-proxy
        file_info:
          mode: 0644
      - src: ./manpages/compozy-mcp-proxy.1.gz
        dst: /usr/share/man/man1/compozy-mcp-proxy.1.gz
        file_info:
          mode: 0644

    rpm:
      signature:
        key_file: '{{ if ne (index .Env "GPG_KEY_PATH") "" }}{{ .Env.GPG_KEY_PATH }}{{ else }}{{ end }}'

    deb:
      signature:
        key_file: '{{ if ne (index .Env "GPG_KEY_PATH") "" }}{{ .Env.GPG_KEY_PATH }}{{ else }}{{ end }}'

# AUR (Arch User Repository) publishing configuration
aurs:
  # Source package
  - name: compozy-mcp-proxy
    homepage: "https://github.com/compozy/compozy"
    description: "Model Context Protocol Proxy - HTTP gateway for MCP servers"
    maintainers:
      - "Compozy Team <support@compozy.com>"
    license: BSL-1.1
    private_key: "{{ .Env.AUR_KEY }}"
    git_url: "ssh://aur@aur.archlinux.org/compozy-mcp-proxy.git"
    skip_upload: auto

    # Package build dependencies
    depends:
      - git

    # Package relations
    conflicts:
      - compozy-mcp-proxy-bin
      - compozy-mcp-proxy-git

    # PKGBUILD customization
    package: |
      # Install binary
      install -Dm755 compozy-mcp-proxy "$pkgdir/usr/bin/compozy-mcp-proxy"

      # Install man pages
      install -Dm644 manpages/compozy-mcp-proxy.1.gz "$pkgdir/usr/share/man/man1/compozy-mcp-proxy.1.gz"

      # Install shell completions
      install -Dm644 completions/compozy-mcp-proxy.bash "$pkgdir/etc/bash_completion.d/compozy-mcp-proxy"
      install -Dm644 completions/compozy-mcp-proxy.fish "$pkgdir/usr/share/fish/vendor_completions.d/compozy-mcp-proxy.fish"
      install -Dm644 completions/compozy-mcp-proxy.zsh "$pkgdir/usr/share/zsh/site-functions/_compozy-mcp-proxy"

# Before hooks (run before building)
before:
  hooks:
    # Clean up any previous builds
    - go clean -cache
    # Download dependencies
    - go mod download
    # Verify dependencies
    - go mod verify
    # Run tests
    - make test || true
