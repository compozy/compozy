// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: task/cmds.proto

package task

import (
	common "github.com/compozy/compozy/pkg/pb/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CmdTaskDispatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *common.Metadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Workflow      *common.WorkflowInfo   `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Task          *common.TaskInfo       `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CmdTaskDispatch) Reset() {
	*x = CmdTaskDispatch{}
	mi := &file_task_cmds_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CmdTaskDispatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdTaskDispatch) ProtoMessage() {}

func (x *CmdTaskDispatch) ProtoReflect() protoreflect.Message {
	mi := &file_task_cmds_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdTaskDispatch.ProtoReflect.Descriptor instead.
func (*CmdTaskDispatch) Descriptor() ([]byte, []int) {
	return file_task_cmds_proto_rawDescGZIP(), []int{0}
}

func (x *CmdTaskDispatch) GetMetadata() *common.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CmdTaskDispatch) GetWorkflow() *common.WorkflowInfo {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *CmdTaskDispatch) GetTask() *common.TaskInfo {
	if x != nil {
		return x.Task
	}
	return nil
}

type CmdTaskExecute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *common.Metadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Workflow      *common.WorkflowInfo   `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Task          *common.TaskInfo       `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CmdTaskExecute) Reset() {
	*x = CmdTaskExecute{}
	mi := &file_task_cmds_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CmdTaskExecute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdTaskExecute) ProtoMessage() {}

func (x *CmdTaskExecute) ProtoReflect() protoreflect.Message {
	mi := &file_task_cmds_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdTaskExecute.ProtoReflect.Descriptor instead.
func (*CmdTaskExecute) Descriptor() ([]byte, []int) {
	return file_task_cmds_proto_rawDescGZIP(), []int{1}
}

func (x *CmdTaskExecute) GetMetadata() *common.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CmdTaskExecute) GetWorkflow() *common.WorkflowInfo {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *CmdTaskExecute) GetTask() *common.TaskInfo {
	if x != nil {
		return x.Task
	}
	return nil
}

type CmdTaskResume struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *common.Metadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Workflow      *common.WorkflowInfo   `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Task          *common.TaskInfo       `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CmdTaskResume) Reset() {
	*x = CmdTaskResume{}
	mi := &file_task_cmds_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CmdTaskResume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdTaskResume) ProtoMessage() {}

func (x *CmdTaskResume) ProtoReflect() protoreflect.Message {
	mi := &file_task_cmds_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdTaskResume.ProtoReflect.Descriptor instead.
func (*CmdTaskResume) Descriptor() ([]byte, []int) {
	return file_task_cmds_proto_rawDescGZIP(), []int{2}
}

func (x *CmdTaskResume) GetMetadata() *common.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CmdTaskResume) GetWorkflow() *common.WorkflowInfo {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *CmdTaskResume) GetTask() *common.TaskInfo {
	if x != nil {
		return x.Task
	}
	return nil
}

var File_task_cmds_proto protoreflect.FileDescriptor

const file_task_cmds_proto_rawDesc = "" +
	"\n" +
	"\x0ftask/cmds.proto\x12\x04task\x1a\x15common/entities.proto\x1a\x15common/metadata.proto\"\x97\x01\n" +
	"\x0fCmdTaskDispatch\x12,\n" +
	"\bmetadata\x18\x01 \x01(\v2\x10.common.MetadataR\bmetadata\x120\n" +
	"\bworkflow\x18\x02 \x01(\v2\x14.common.WorkflowInfoR\bworkflow\x12$\n" +
	"\x04task\x18\x03 \x01(\v2\x10.common.TaskInfoR\x04task\"\x96\x01\n" +
	"\x0eCmdTaskExecute\x12,\n" +
	"\bmetadata\x18\x01 \x01(\v2\x10.common.MetadataR\bmetadata\x120\n" +
	"\bworkflow\x18\x02 \x01(\v2\x14.common.WorkflowInfoR\bworkflow\x12$\n" +
	"\x04task\x18\x03 \x01(\v2\x10.common.TaskInfoR\x04task\"\x95\x01\n" +
	"\rCmdTaskResume\x12,\n" +
	"\bmetadata\x18\x01 \x01(\v2\x10.common.MetadataR\bmetadata\x120\n" +
	"\bworkflow\x18\x02 \x01(\v2\x14.common.WorkflowInfoR\bworkflow\x12$\n" +
	"\x04task\x18\x03 \x01(\v2\x10.common.TaskInfoR\x04taskB(Z&github.com/compozy/compozy/pkg/pb/taskb\x06proto3"

var (
	file_task_cmds_proto_rawDescOnce sync.Once
	file_task_cmds_proto_rawDescData []byte
)

func file_task_cmds_proto_rawDescGZIP() []byte {
	file_task_cmds_proto_rawDescOnce.Do(func() {
		file_task_cmds_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_task_cmds_proto_rawDesc), len(file_task_cmds_proto_rawDesc)))
	})
	return file_task_cmds_proto_rawDescData
}

var file_task_cmds_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_task_cmds_proto_goTypes = []any{
	(*CmdTaskDispatch)(nil),     // 0: task.CmdTaskDispatch
	(*CmdTaskExecute)(nil),      // 1: task.CmdTaskExecute
	(*CmdTaskResume)(nil),       // 2: task.CmdTaskResume
	(*common.Metadata)(nil),     // 3: common.Metadata
	(*common.WorkflowInfo)(nil), // 4: common.WorkflowInfo
	(*common.TaskInfo)(nil),     // 5: common.TaskInfo
}
var file_task_cmds_proto_depIdxs = []int32{
	3, // 0: task.CmdTaskDispatch.metadata:type_name -> common.Metadata
	4, // 1: task.CmdTaskDispatch.workflow:type_name -> common.WorkflowInfo
	5, // 2: task.CmdTaskDispatch.task:type_name -> common.TaskInfo
	3, // 3: task.CmdTaskExecute.metadata:type_name -> common.Metadata
	4, // 4: task.CmdTaskExecute.workflow:type_name -> common.WorkflowInfo
	5, // 5: task.CmdTaskExecute.task:type_name -> common.TaskInfo
	3, // 6: task.CmdTaskResume.metadata:type_name -> common.Metadata
	4, // 7: task.CmdTaskResume.workflow:type_name -> common.WorkflowInfo
	5, // 8: task.CmdTaskResume.task:type_name -> common.TaskInfo
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_task_cmds_proto_init() }
func file_task_cmds_proto_init() {
	if File_task_cmds_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_task_cmds_proto_rawDesc), len(file_task_cmds_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_task_cmds_proto_goTypes,
		DependencyIndexes: file_task_cmds_proto_depIdxs,
		MessageInfos:      file_task_cmds_proto_msgTypes,
	}.Build()
	File_task_cmds_proto = out.File
	file_task_cmds_proto_goTypes = nil
	file_task_cmds_proto_depIdxs = nil
}
