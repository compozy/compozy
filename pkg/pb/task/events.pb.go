// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: task/events.proto

package task

import (
	common "github.com/compozy/compozy/pkg/pb/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskStatus int32

const (
	TaskStatus_TASK_STATUS_UNSPECIFIED     TaskStatus = 0
	TaskStatus_TASK_STATUS_PENDING         TaskStatus = 1
	TaskStatus_TASK_STATUS_SCHEDULED       TaskStatus = 2
	TaskStatus_TASK_STATUS_RUNNING         TaskStatus = 3
	TaskStatus_TASK_STATUS_WAITING         TaskStatus = 4
	TaskStatus_TASK_STATUS_SUCCESS         TaskStatus = 5
	TaskStatus_TASK_STATUS_FAILED          TaskStatus = 6
	TaskStatus_TASK_STATUS_TIMED_OUT       TaskStatus = 7
	TaskStatus_TASK_STATUS_CANCELLED       TaskStatus = 8
	TaskStatus_TASK_STATUS_RETRY_SCHEDULED TaskStatus = 9
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "TASK_STATUS_UNSPECIFIED",
		1: "TASK_STATUS_PENDING",
		2: "TASK_STATUS_SCHEDULED",
		3: "TASK_STATUS_RUNNING",
		4: "TASK_STATUS_WAITING",
		5: "TASK_STATUS_SUCCESS",
		6: "TASK_STATUS_FAILED",
		7: "TASK_STATUS_TIMED_OUT",
		8: "TASK_STATUS_CANCELLED",
		9: "TASK_STATUS_RETRY_SCHEDULED",
	}
	TaskStatus_value = map[string]int32{
		"TASK_STATUS_UNSPECIFIED":     0,
		"TASK_STATUS_PENDING":         1,
		"TASK_STATUS_SCHEDULED":       2,
		"TASK_STATUS_RUNNING":         3,
		"TASK_STATUS_WAITING":         4,
		"TASK_STATUS_SUCCESS":         5,
		"TASK_STATUS_FAILED":          6,
		"TASK_STATUS_TIMED_OUT":       7,
		"TASK_STATUS_CANCELLED":       8,
		"TASK_STATUS_RETRY_SCHEDULED": 9,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_task_events_proto_enumTypes[0].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_task_events_proto_enumTypes[0]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{0}
}

type TaskDispatchedEvent struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Metadata      *common.Metadata             `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Workflow      *common.WorkflowInfo         `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Task          *common.TaskInfo             `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	Payload       *TaskDispatchedEvent_Payload `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskDispatchedEvent) Reset() {
	*x = TaskDispatchedEvent{}
	mi := &file_task_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskDispatchedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDispatchedEvent) ProtoMessage() {}

func (x *TaskDispatchedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDispatchedEvent.ProtoReflect.Descriptor instead.
func (*TaskDispatchedEvent) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{0}
}

func (x *TaskDispatchedEvent) GetMetadata() *common.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TaskDispatchedEvent) GetWorkflow() *common.WorkflowInfo {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *TaskDispatchedEvent) GetTask() *common.TaskInfo {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskDispatchedEvent) GetPayload() *TaskDispatchedEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TaskExecutionStartedEvent struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Metadata      *common.Metadata                   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Workflow      *common.WorkflowInfo               `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Task          *common.TaskInfo                   `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	Payload       *TaskExecutionStartedEvent_Payload `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskExecutionStartedEvent) Reset() {
	*x = TaskExecutionStartedEvent{}
	mi := &file_task_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecutionStartedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecutionStartedEvent) ProtoMessage() {}

func (x *TaskExecutionStartedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecutionStartedEvent.ProtoReflect.Descriptor instead.
func (*TaskExecutionStartedEvent) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{1}
}

func (x *TaskExecutionStartedEvent) GetMetadata() *common.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TaskExecutionStartedEvent) GetWorkflow() *common.WorkflowInfo {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *TaskExecutionStartedEvent) GetTask() *common.TaskInfo {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskExecutionStartedEvent) GetPayload() *TaskExecutionStartedEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TaskWaitingStartedEvent struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Metadata      *common.Metadata                 `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Workflow      *common.WorkflowInfo             `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Task          *common.TaskInfo                 `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	Payload       *TaskWaitingStartedEvent_Payload `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskWaitingStartedEvent) Reset() {
	*x = TaskWaitingStartedEvent{}
	mi := &file_task_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskWaitingStartedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskWaitingStartedEvent) ProtoMessage() {}

func (x *TaskWaitingStartedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskWaitingStartedEvent.ProtoReflect.Descriptor instead.
func (*TaskWaitingStartedEvent) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{2}
}

func (x *TaskWaitingStartedEvent) GetMetadata() *common.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TaskWaitingStartedEvent) GetWorkflow() *common.WorkflowInfo {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *TaskWaitingStartedEvent) GetTask() *common.TaskInfo {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskWaitingStartedEvent) GetPayload() *TaskWaitingStartedEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TaskWaitingEndedEvent struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Metadata      *common.Metadata               `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Workflow      *common.WorkflowInfo           `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Task          *common.TaskInfo               `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	Payload       *TaskWaitingEndedEvent_Payload `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskWaitingEndedEvent) Reset() {
	*x = TaskWaitingEndedEvent{}
	mi := &file_task_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskWaitingEndedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskWaitingEndedEvent) ProtoMessage() {}

func (x *TaskWaitingEndedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskWaitingEndedEvent.ProtoReflect.Descriptor instead.
func (*TaskWaitingEndedEvent) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{3}
}

func (x *TaskWaitingEndedEvent) GetMetadata() *common.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TaskWaitingEndedEvent) GetWorkflow() *common.WorkflowInfo {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *TaskWaitingEndedEvent) GetTask() *common.TaskInfo {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskWaitingEndedEvent) GetPayload() *TaskWaitingEndedEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TaskWaitingTimedOutEvent struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Metadata      *common.Metadata                  `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Workflow      *common.WorkflowInfo              `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Task          *common.TaskInfo                  `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	Payload       *TaskWaitingTimedOutEvent_Payload `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskWaitingTimedOutEvent) Reset() {
	*x = TaskWaitingTimedOutEvent{}
	mi := &file_task_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskWaitingTimedOutEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskWaitingTimedOutEvent) ProtoMessage() {}

func (x *TaskWaitingTimedOutEvent) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskWaitingTimedOutEvent.ProtoReflect.Descriptor instead.
func (*TaskWaitingTimedOutEvent) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{4}
}

func (x *TaskWaitingTimedOutEvent) GetMetadata() *common.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TaskWaitingTimedOutEvent) GetWorkflow() *common.WorkflowInfo {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *TaskWaitingTimedOutEvent) GetTask() *common.TaskInfo {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskWaitingTimedOutEvent) GetPayload() *TaskWaitingTimedOutEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TaskExecutionSuccessEvent struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Metadata      *common.Metadata                   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Workflow      *common.WorkflowInfo               `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Task          *common.TaskInfo                   `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	Payload       *TaskExecutionSuccessEvent_Payload `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskExecutionSuccessEvent) Reset() {
	*x = TaskExecutionSuccessEvent{}
	mi := &file_task_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecutionSuccessEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecutionSuccessEvent) ProtoMessage() {}

func (x *TaskExecutionSuccessEvent) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecutionSuccessEvent.ProtoReflect.Descriptor instead.
func (*TaskExecutionSuccessEvent) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{5}
}

func (x *TaskExecutionSuccessEvent) GetMetadata() *common.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TaskExecutionSuccessEvent) GetWorkflow() *common.WorkflowInfo {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *TaskExecutionSuccessEvent) GetTask() *common.TaskInfo {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskExecutionSuccessEvent) GetPayload() *TaskExecutionSuccessEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TaskExecutionFailedEvent struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Metadata      *common.Metadata                  `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Workflow      *common.WorkflowInfo              `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Task          *common.TaskInfo                  `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	Payload       *TaskExecutionFailedEvent_Payload `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskExecutionFailedEvent) Reset() {
	*x = TaskExecutionFailedEvent{}
	mi := &file_task_events_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecutionFailedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecutionFailedEvent) ProtoMessage() {}

func (x *TaskExecutionFailedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecutionFailedEvent.ProtoReflect.Descriptor instead.
func (*TaskExecutionFailedEvent) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{6}
}

func (x *TaskExecutionFailedEvent) GetMetadata() *common.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TaskExecutionFailedEvent) GetWorkflow() *common.WorkflowInfo {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *TaskExecutionFailedEvent) GetTask() *common.TaskInfo {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskExecutionFailedEvent) GetPayload() *TaskExecutionFailedEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TaskRetryScheduledEvent struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Metadata      *common.Metadata                 `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Workflow      *common.WorkflowInfo             `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Task          *common.TaskInfo                 `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	Payload       *TaskRetryScheduledEvent_Payload `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskRetryScheduledEvent) Reset() {
	*x = TaskRetryScheduledEvent{}
	mi := &file_task_events_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskRetryScheduledEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRetryScheduledEvent) ProtoMessage() {}

func (x *TaskRetryScheduledEvent) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRetryScheduledEvent.ProtoReflect.Descriptor instead.
func (*TaskRetryScheduledEvent) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{7}
}

func (x *TaskRetryScheduledEvent) GetMetadata() *common.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TaskRetryScheduledEvent) GetWorkflow() *common.WorkflowInfo {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *TaskRetryScheduledEvent) GetTask() *common.TaskInfo {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskRetryScheduledEvent) GetPayload() *TaskRetryScheduledEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TaskDispatchedEvent_Payload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        TaskStatus             `protobuf:"varint,1,opt,name=status,proto3,enum=task.TaskStatus" json:"status,omitempty"`
	Context       *structpb.Struct       `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskDispatchedEvent_Payload) Reset() {
	*x = TaskDispatchedEvent_Payload{}
	mi := &file_task_events_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskDispatchedEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDispatchedEvent_Payload) ProtoMessage() {}

func (x *TaskDispatchedEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDispatchedEvent_Payload.ProtoReflect.Descriptor instead.
func (*TaskDispatchedEvent_Payload) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{0, 0}
}

func (x *TaskDispatchedEvent_Payload) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *TaskDispatchedEvent_Payload) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

type TaskExecutionStartedEvent_Payload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        TaskStatus             `protobuf:"varint,1,opt,name=status,proto3,enum=task.TaskStatus" json:"status,omitempty"`
	Context       *structpb.Struct       `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskExecutionStartedEvent_Payload) Reset() {
	*x = TaskExecutionStartedEvent_Payload{}
	mi := &file_task_events_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecutionStartedEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecutionStartedEvent_Payload) ProtoMessage() {}

func (x *TaskExecutionStartedEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecutionStartedEvent_Payload.ProtoReflect.Descriptor instead.
func (*TaskExecutionStartedEvent_Payload) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{1, 0}
}

func (x *TaskExecutionStartedEvent_Payload) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *TaskExecutionStartedEvent_Payload) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

type TaskWaitingStartedEvent_Payload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        TaskStatus             `protobuf:"varint,1,opt,name=status,proto3,enum=task.TaskStatus" json:"status,omitempty"`
	Context       *structpb.Struct       `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskWaitingStartedEvent_Payload) Reset() {
	*x = TaskWaitingStartedEvent_Payload{}
	mi := &file_task_events_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskWaitingStartedEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskWaitingStartedEvent_Payload) ProtoMessage() {}

func (x *TaskWaitingStartedEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskWaitingStartedEvent_Payload.ProtoReflect.Descriptor instead.
func (*TaskWaitingStartedEvent_Payload) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{2, 0}
}

func (x *TaskWaitingStartedEvent_Payload) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *TaskWaitingStartedEvent_Payload) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

type TaskWaitingEndedEvent_Payload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        TaskStatus             `protobuf:"varint,1,opt,name=status,proto3,enum=task.TaskStatus" json:"status,omitempty"`
	Context       *structpb.Struct       `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	DurationMs    int64                  `protobuf:"varint,3,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskWaitingEndedEvent_Payload) Reset() {
	*x = TaskWaitingEndedEvent_Payload{}
	mi := &file_task_events_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskWaitingEndedEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskWaitingEndedEvent_Payload) ProtoMessage() {}

func (x *TaskWaitingEndedEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskWaitingEndedEvent_Payload.ProtoReflect.Descriptor instead.
func (*TaskWaitingEndedEvent_Payload) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{3, 0}
}

func (x *TaskWaitingEndedEvent_Payload) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *TaskWaitingEndedEvent_Payload) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *TaskWaitingEndedEvent_Payload) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

type TaskWaitingTimedOutEvent_Payload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        TaskStatus             `protobuf:"varint,1,opt,name=status,proto3,enum=task.TaskStatus" json:"status,omitempty"`
	Result        *common.Result         `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	Context       *structpb.Struct       `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	DurationMs    int64                  `protobuf:"varint,4,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskWaitingTimedOutEvent_Payload) Reset() {
	*x = TaskWaitingTimedOutEvent_Payload{}
	mi := &file_task_events_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskWaitingTimedOutEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskWaitingTimedOutEvent_Payload) ProtoMessage() {}

func (x *TaskWaitingTimedOutEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskWaitingTimedOutEvent_Payload.ProtoReflect.Descriptor instead.
func (*TaskWaitingTimedOutEvent_Payload) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{4, 0}
}

func (x *TaskWaitingTimedOutEvent_Payload) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *TaskWaitingTimedOutEvent_Payload) GetResult() *common.Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TaskWaitingTimedOutEvent_Payload) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *TaskWaitingTimedOutEvent_Payload) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

type TaskExecutionSuccessEvent_Payload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        TaskStatus             `protobuf:"varint,1,opt,name=status,proto3,enum=task.TaskStatus" json:"status,omitempty"`
	Result        *common.Result         `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	Context       *structpb.Struct       `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	DurationMs    int64                  `protobuf:"varint,4,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskExecutionSuccessEvent_Payload) Reset() {
	*x = TaskExecutionSuccessEvent_Payload{}
	mi := &file_task_events_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecutionSuccessEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecutionSuccessEvent_Payload) ProtoMessage() {}

func (x *TaskExecutionSuccessEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecutionSuccessEvent_Payload.ProtoReflect.Descriptor instead.
func (*TaskExecutionSuccessEvent_Payload) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{5, 0}
}

func (x *TaskExecutionSuccessEvent_Payload) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *TaskExecutionSuccessEvent_Payload) GetResult() *common.Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TaskExecutionSuccessEvent_Payload) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *TaskExecutionSuccessEvent_Payload) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

type TaskExecutionFailedEvent_Payload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        TaskStatus             `protobuf:"varint,1,opt,name=status,proto3,enum=task.TaskStatus" json:"status,omitempty"`
	Result        *common.Result         `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	Context       *structpb.Struct       `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	DurationMs    int64                  `protobuf:"varint,4,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskExecutionFailedEvent_Payload) Reset() {
	*x = TaskExecutionFailedEvent_Payload{}
	mi := &file_task_events_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecutionFailedEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecutionFailedEvent_Payload) ProtoMessage() {}

func (x *TaskExecutionFailedEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecutionFailedEvent_Payload.ProtoReflect.Descriptor instead.
func (*TaskExecutionFailedEvent_Payload) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{6, 0}
}

func (x *TaskExecutionFailedEvent_Payload) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *TaskExecutionFailedEvent_Payload) GetResult() *common.Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TaskExecutionFailedEvent_Payload) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *TaskExecutionFailedEvent_Payload) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

type TaskRetryScheduledEvent_Payload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        TaskStatus             `protobuf:"varint,1,opt,name=status,proto3,enum=task.TaskStatus" json:"status,omitempty"`
	Context       *structpb.Struct       `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskRetryScheduledEvent_Payload) Reset() {
	*x = TaskRetryScheduledEvent_Payload{}
	mi := &file_task_events_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskRetryScheduledEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRetryScheduledEvent_Payload) ProtoMessage() {}

func (x *TaskRetryScheduledEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRetryScheduledEvent_Payload.ProtoReflect.Descriptor instead.
func (*TaskRetryScheduledEvent_Payload) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{7, 0}
}

func (x *TaskRetryScheduledEvent_Payload) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *TaskRetryScheduledEvent_Payload) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

var File_task_events_proto protoreflect.FileDescriptor

const file_task_events_proto_rawDesc = "" +
	"\n" +
	"\x11task/events.proto\x12\x04task\x1a\x15common/metadata.proto\x1a\x15common/entities.proto\x1a\x14common/payload.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xc0\x02\n" +
	"\x13TaskDispatchedEvent\x12,\n" +
	"\bmetadata\x18\x01 \x01(\v2\x10.common.MetadataR\bmetadata\x120\n" +
	"\bworkflow\x18\x02 \x01(\v2\x14.common.WorkflowInfoR\bworkflow\x12$\n" +
	"\x04task\x18\x03 \x01(\v2\x10.common.TaskInfoR\x04task\x12;\n" +
	"\apayload\x18\x04 \x01(\v2!.task.TaskDispatchedEvent.PayloadR\apayload\x1af\n" +
	"\aPayload\x12(\n" +
	"\x06status\x18\x01 \x01(\x0e2\x10.task.TaskStatusR\x06status\x121\n" +
	"\acontext\x18\x02 \x01(\v2\x17.google.protobuf.StructR\acontext\"\xcc\x02\n" +
	"\x19TaskExecutionStartedEvent\x12,\n" +
	"\bmetadata\x18\x01 \x01(\v2\x10.common.MetadataR\bmetadata\x120\n" +
	"\bworkflow\x18\x02 \x01(\v2\x14.common.WorkflowInfoR\bworkflow\x12$\n" +
	"\x04task\x18\x03 \x01(\v2\x10.common.TaskInfoR\x04task\x12A\n" +
	"\apayload\x18\x04 \x01(\v2'.task.TaskExecutionStartedEvent.PayloadR\apayload\x1af\n" +
	"\aPayload\x12(\n" +
	"\x06status\x18\x01 \x01(\x0e2\x10.task.TaskStatusR\x06status\x121\n" +
	"\acontext\x18\x02 \x01(\v2\x17.google.protobuf.StructR\acontext\"\xc8\x02\n" +
	"\x17TaskWaitingStartedEvent\x12,\n" +
	"\bmetadata\x18\x01 \x01(\v2\x10.common.MetadataR\bmetadata\x120\n" +
	"\bworkflow\x18\x02 \x01(\v2\x14.common.WorkflowInfoR\bworkflow\x12$\n" +
	"\x04task\x18\x03 \x01(\v2\x10.common.TaskInfoR\x04task\x12?\n" +
	"\apayload\x18\x04 \x01(\v2%.task.TaskWaitingStartedEvent.PayloadR\apayload\x1af\n" +
	"\aPayload\x12(\n" +
	"\x06status\x18\x01 \x01(\x0e2\x10.task.TaskStatusR\x06status\x121\n" +
	"\acontext\x18\x02 \x01(\v2\x17.google.protobuf.StructR\acontext\"\xe6\x02\n" +
	"\x15TaskWaitingEndedEvent\x12,\n" +
	"\bmetadata\x18\x01 \x01(\v2\x10.common.MetadataR\bmetadata\x120\n" +
	"\bworkflow\x18\x02 \x01(\v2\x14.common.WorkflowInfoR\bworkflow\x12$\n" +
	"\x04task\x18\x03 \x01(\v2\x10.common.TaskInfoR\x04task\x12=\n" +
	"\apayload\x18\x04 \x01(\v2#.task.TaskWaitingEndedEvent.PayloadR\apayload\x1a\x87\x01\n" +
	"\aPayload\x12(\n" +
	"\x06status\x18\x01 \x01(\x0e2\x10.task.TaskStatusR\x06status\x121\n" +
	"\acontext\x18\x02 \x01(\v2\x17.google.protobuf.StructR\acontext\x12\x1f\n" +
	"\vduration_ms\x18\x03 \x01(\x03R\n" +
	"durationMs\"\x94\x03\n" +
	"\x18TaskWaitingTimedOutEvent\x12,\n" +
	"\bmetadata\x18\x01 \x01(\v2\x10.common.MetadataR\bmetadata\x120\n" +
	"\bworkflow\x18\x02 \x01(\v2\x14.common.WorkflowInfoR\bworkflow\x12$\n" +
	"\x04task\x18\x03 \x01(\v2\x10.common.TaskInfoR\x04task\x12@\n" +
	"\apayload\x18\x05 \x01(\v2&.task.TaskWaitingTimedOutEvent.PayloadR\apayload\x1a\xaf\x01\n" +
	"\aPayload\x12(\n" +
	"\x06status\x18\x01 \x01(\x0e2\x10.task.TaskStatusR\x06status\x12&\n" +
	"\x06result\x18\x02 \x01(\v2\x0e.common.ResultR\x06result\x121\n" +
	"\acontext\x18\x03 \x01(\v2\x17.google.protobuf.StructR\acontext\x12\x1f\n" +
	"\vduration_ms\x18\x04 \x01(\x03R\n" +
	"durationMs\"\x96\x03\n" +
	"\x19TaskExecutionSuccessEvent\x12,\n" +
	"\bmetadata\x18\x01 \x01(\v2\x10.common.MetadataR\bmetadata\x120\n" +
	"\bworkflow\x18\x02 \x01(\v2\x14.common.WorkflowInfoR\bworkflow\x12$\n" +
	"\x04task\x18\x03 \x01(\v2\x10.common.TaskInfoR\x04task\x12A\n" +
	"\apayload\x18\x04 \x01(\v2'.task.TaskExecutionSuccessEvent.PayloadR\apayload\x1a\xaf\x01\n" +
	"\aPayload\x12(\n" +
	"\x06status\x18\x01 \x01(\x0e2\x10.task.TaskStatusR\x06status\x12&\n" +
	"\x06result\x18\x02 \x01(\v2\x0e.common.ResultR\x06result\x121\n" +
	"\acontext\x18\x03 \x01(\v2\x17.google.protobuf.StructR\acontext\x12\x1f\n" +
	"\vduration_ms\x18\x04 \x01(\x03R\n" +
	"durationMs\"\x94\x03\n" +
	"\x18TaskExecutionFailedEvent\x12,\n" +
	"\bmetadata\x18\x01 \x01(\v2\x10.common.MetadataR\bmetadata\x120\n" +
	"\bworkflow\x18\x02 \x01(\v2\x14.common.WorkflowInfoR\bworkflow\x12$\n" +
	"\x04task\x18\x03 \x01(\v2\x10.common.TaskInfoR\x04task\x12@\n" +
	"\apayload\x18\x04 \x01(\v2&.task.TaskExecutionFailedEvent.PayloadR\apayload\x1a\xaf\x01\n" +
	"\aPayload\x12(\n" +
	"\x06status\x18\x01 \x01(\x0e2\x10.task.TaskStatusR\x06status\x12&\n" +
	"\x06result\x18\x02 \x01(\v2\x0e.common.ResultR\x06result\x121\n" +
	"\acontext\x18\x03 \x01(\v2\x17.google.protobuf.StructR\acontext\x12\x1f\n" +
	"\vduration_ms\x18\x04 \x01(\x03R\n" +
	"durationMs\"\xc8\x02\n" +
	"\x17TaskRetryScheduledEvent\x12,\n" +
	"\bmetadata\x18\x01 \x01(\v2\x10.common.MetadataR\bmetadata\x120\n" +
	"\bworkflow\x18\x02 \x01(\v2\x14.common.WorkflowInfoR\bworkflow\x12$\n" +
	"\x04task\x18\x03 \x01(\v2\x10.common.TaskInfoR\x04task\x12?\n" +
	"\apayload\x18\x04 \x01(\v2%.task.TaskRetryScheduledEvent.PayloadR\apayload\x1af\n" +
	"\aPayload\x12(\n" +
	"\x06status\x18\x01 \x01(\x0e2\x10.task.TaskStatusR\x06status\x121\n" +
	"\acontext\x18\x02 \x01(\v2\x17.google.protobuf.StructR\acontext*\x97\x02\n" +
	"\n" +
	"TaskStatus\x12\x1b\n" +
	"\x17TASK_STATUS_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13TASK_STATUS_PENDING\x10\x01\x12\x19\n" +
	"\x15TASK_STATUS_SCHEDULED\x10\x02\x12\x17\n" +
	"\x13TASK_STATUS_RUNNING\x10\x03\x12\x17\n" +
	"\x13TASK_STATUS_WAITING\x10\x04\x12\x17\n" +
	"\x13TASK_STATUS_SUCCESS\x10\x05\x12\x16\n" +
	"\x12TASK_STATUS_FAILED\x10\x06\x12\x19\n" +
	"\x15TASK_STATUS_TIMED_OUT\x10\a\x12\x19\n" +
	"\x15TASK_STATUS_CANCELLED\x10\b\x12\x1f\n" +
	"\x1bTASK_STATUS_RETRY_SCHEDULED\x10\tB(Z&github.com/compozy/compozy/pkg/pb/taskb\x06proto3"

var (
	file_task_events_proto_rawDescOnce sync.Once
	file_task_events_proto_rawDescData []byte
)

func file_task_events_proto_rawDescGZIP() []byte {
	file_task_events_proto_rawDescOnce.Do(func() {
		file_task_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_task_events_proto_rawDesc), len(file_task_events_proto_rawDesc)))
	})
	return file_task_events_proto_rawDescData
}

var file_task_events_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_task_events_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_task_events_proto_goTypes = []any{
	(TaskStatus)(0),                           // 0: task.TaskStatus
	(*TaskDispatchedEvent)(nil),               // 1: task.TaskDispatchedEvent
	(*TaskExecutionStartedEvent)(nil),         // 2: task.TaskExecutionStartedEvent
	(*TaskWaitingStartedEvent)(nil),           // 3: task.TaskWaitingStartedEvent
	(*TaskWaitingEndedEvent)(nil),             // 4: task.TaskWaitingEndedEvent
	(*TaskWaitingTimedOutEvent)(nil),          // 5: task.TaskWaitingTimedOutEvent
	(*TaskExecutionSuccessEvent)(nil),         // 6: task.TaskExecutionSuccessEvent
	(*TaskExecutionFailedEvent)(nil),          // 7: task.TaskExecutionFailedEvent
	(*TaskRetryScheduledEvent)(nil),           // 8: task.TaskRetryScheduledEvent
	(*TaskDispatchedEvent_Payload)(nil),       // 9: task.TaskDispatchedEvent.Payload
	(*TaskExecutionStartedEvent_Payload)(nil), // 10: task.TaskExecutionStartedEvent.Payload
	(*TaskWaitingStartedEvent_Payload)(nil),   // 11: task.TaskWaitingStartedEvent.Payload
	(*TaskWaitingEndedEvent_Payload)(nil),     // 12: task.TaskWaitingEndedEvent.Payload
	(*TaskWaitingTimedOutEvent_Payload)(nil),  // 13: task.TaskWaitingTimedOutEvent.Payload
	(*TaskExecutionSuccessEvent_Payload)(nil), // 14: task.TaskExecutionSuccessEvent.Payload
	(*TaskExecutionFailedEvent_Payload)(nil),  // 15: task.TaskExecutionFailedEvent.Payload
	(*TaskRetryScheduledEvent_Payload)(nil),   // 16: task.TaskRetryScheduledEvent.Payload
	(*common.Metadata)(nil),                   // 17: common.Metadata
	(*common.WorkflowInfo)(nil),               // 18: common.WorkflowInfo
	(*common.TaskInfo)(nil),                   // 19: common.TaskInfo
	(*structpb.Struct)(nil),                   // 20: google.protobuf.Struct
	(*common.Result)(nil),                     // 21: common.Result
}
var file_task_events_proto_depIdxs = []int32{
	17, // 0: task.TaskDispatchedEvent.metadata:type_name -> common.Metadata
	18, // 1: task.TaskDispatchedEvent.workflow:type_name -> common.WorkflowInfo
	19, // 2: task.TaskDispatchedEvent.task:type_name -> common.TaskInfo
	9,  // 3: task.TaskDispatchedEvent.payload:type_name -> task.TaskDispatchedEvent.Payload
	17, // 4: task.TaskExecutionStartedEvent.metadata:type_name -> common.Metadata
	18, // 5: task.TaskExecutionStartedEvent.workflow:type_name -> common.WorkflowInfo
	19, // 6: task.TaskExecutionStartedEvent.task:type_name -> common.TaskInfo
	10, // 7: task.TaskExecutionStartedEvent.payload:type_name -> task.TaskExecutionStartedEvent.Payload
	17, // 8: task.TaskWaitingStartedEvent.metadata:type_name -> common.Metadata
	18, // 9: task.TaskWaitingStartedEvent.workflow:type_name -> common.WorkflowInfo
	19, // 10: task.TaskWaitingStartedEvent.task:type_name -> common.TaskInfo
	11, // 11: task.TaskWaitingStartedEvent.payload:type_name -> task.TaskWaitingStartedEvent.Payload
	17, // 12: task.TaskWaitingEndedEvent.metadata:type_name -> common.Metadata
	18, // 13: task.TaskWaitingEndedEvent.workflow:type_name -> common.WorkflowInfo
	19, // 14: task.TaskWaitingEndedEvent.task:type_name -> common.TaskInfo
	12, // 15: task.TaskWaitingEndedEvent.payload:type_name -> task.TaskWaitingEndedEvent.Payload
	17, // 16: task.TaskWaitingTimedOutEvent.metadata:type_name -> common.Metadata
	18, // 17: task.TaskWaitingTimedOutEvent.workflow:type_name -> common.WorkflowInfo
	19, // 18: task.TaskWaitingTimedOutEvent.task:type_name -> common.TaskInfo
	13, // 19: task.TaskWaitingTimedOutEvent.payload:type_name -> task.TaskWaitingTimedOutEvent.Payload
	17, // 20: task.TaskExecutionSuccessEvent.metadata:type_name -> common.Metadata
	18, // 21: task.TaskExecutionSuccessEvent.workflow:type_name -> common.WorkflowInfo
	19, // 22: task.TaskExecutionSuccessEvent.task:type_name -> common.TaskInfo
	14, // 23: task.TaskExecutionSuccessEvent.payload:type_name -> task.TaskExecutionSuccessEvent.Payload
	17, // 24: task.TaskExecutionFailedEvent.metadata:type_name -> common.Metadata
	18, // 25: task.TaskExecutionFailedEvent.workflow:type_name -> common.WorkflowInfo
	19, // 26: task.TaskExecutionFailedEvent.task:type_name -> common.TaskInfo
	15, // 27: task.TaskExecutionFailedEvent.payload:type_name -> task.TaskExecutionFailedEvent.Payload
	17, // 28: task.TaskRetryScheduledEvent.metadata:type_name -> common.Metadata
	18, // 29: task.TaskRetryScheduledEvent.workflow:type_name -> common.WorkflowInfo
	19, // 30: task.TaskRetryScheduledEvent.task:type_name -> common.TaskInfo
	16, // 31: task.TaskRetryScheduledEvent.payload:type_name -> task.TaskRetryScheduledEvent.Payload
	0,  // 32: task.TaskDispatchedEvent.Payload.status:type_name -> task.TaskStatus
	20, // 33: task.TaskDispatchedEvent.Payload.context:type_name -> google.protobuf.Struct
	0,  // 34: task.TaskExecutionStartedEvent.Payload.status:type_name -> task.TaskStatus
	20, // 35: task.TaskExecutionStartedEvent.Payload.context:type_name -> google.protobuf.Struct
	0,  // 36: task.TaskWaitingStartedEvent.Payload.status:type_name -> task.TaskStatus
	20, // 37: task.TaskWaitingStartedEvent.Payload.context:type_name -> google.protobuf.Struct
	0,  // 38: task.TaskWaitingEndedEvent.Payload.status:type_name -> task.TaskStatus
	20, // 39: task.TaskWaitingEndedEvent.Payload.context:type_name -> google.protobuf.Struct
	0,  // 40: task.TaskWaitingTimedOutEvent.Payload.status:type_name -> task.TaskStatus
	21, // 41: task.TaskWaitingTimedOutEvent.Payload.result:type_name -> common.Result
	20, // 42: task.TaskWaitingTimedOutEvent.Payload.context:type_name -> google.protobuf.Struct
	0,  // 43: task.TaskExecutionSuccessEvent.Payload.status:type_name -> task.TaskStatus
	21, // 44: task.TaskExecutionSuccessEvent.Payload.result:type_name -> common.Result
	20, // 45: task.TaskExecutionSuccessEvent.Payload.context:type_name -> google.protobuf.Struct
	0,  // 46: task.TaskExecutionFailedEvent.Payload.status:type_name -> task.TaskStatus
	21, // 47: task.TaskExecutionFailedEvent.Payload.result:type_name -> common.Result
	20, // 48: task.TaskExecutionFailedEvent.Payload.context:type_name -> google.protobuf.Struct
	0,  // 49: task.TaskRetryScheduledEvent.Payload.status:type_name -> task.TaskStatus
	20, // 50: task.TaskRetryScheduledEvent.Payload.context:type_name -> google.protobuf.Struct
	51, // [51:51] is the sub-list for method output_type
	51, // [51:51] is the sub-list for method input_type
	51, // [51:51] is the sub-list for extension type_name
	51, // [51:51] is the sub-list for extension extendee
	0,  // [0:51] is the sub-list for field type_name
}

func init() { file_task_events_proto_init() }
func file_task_events_proto_init() {
	if File_task_events_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_task_events_proto_rawDesc), len(file_task_events_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_task_events_proto_goTypes,
		DependencyIndexes: file_task_events_proto_depIdxs,
		EnumInfos:         file_task_events_proto_enumTypes,
		MessageInfos:      file_task_events_proto_msgTypes,
	}.Build()
	File_task_events_proto = out.File
	file_task_events_proto_goTypes = nil
	file_task_events_proto_depIdxs = nil
}
