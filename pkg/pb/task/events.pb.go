// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: task/events.proto

package task

import (
	common "github.com/compozy/compozy/pkg/pb/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskStatus int32

const (
	TaskStatus_TASK_STATUS_UNSPECIFIED TaskStatus = 0
	TaskStatus_TASK_STATUS_PENDING     TaskStatus = 1
	TaskStatus_TASK_STATUS_RUNNING     TaskStatus = 2
	TaskStatus_TASK_STATUS_WAITING     TaskStatus = 3
	TaskStatus_TASK_STATUS_SUCCESS     TaskStatus = 4
	TaskStatus_TASK_STATUS_FAILED      TaskStatus = 5
	TaskStatus_TASK_STATUS_TIMED_OUT   TaskStatus = 6
	TaskStatus_TASK_STATUS_CANCELED    TaskStatus = 7
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "TASK_STATUS_UNSPECIFIED",
		1: "TASK_STATUS_PENDING",
		2: "TASK_STATUS_RUNNING",
		3: "TASK_STATUS_WAITING",
		4: "TASK_STATUS_SUCCESS",
		5: "TASK_STATUS_FAILED",
		6: "TASK_STATUS_TIMED_OUT",
		7: "TASK_STATUS_CANCELED",
	}
	TaskStatus_value = map[string]int32{
		"TASK_STATUS_UNSPECIFIED": 0,
		"TASK_STATUS_PENDING":     1,
		"TASK_STATUS_RUNNING":     2,
		"TASK_STATUS_WAITING":     3,
		"TASK_STATUS_SUCCESS":     4,
		"TASK_STATUS_FAILED":      5,
		"TASK_STATUS_TIMED_OUT":   6,
		"TASK_STATUS_CANCELED":    7,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_task_events_proto_enumTypes[0].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_task_events_proto_enumTypes[0]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{0}
}

type TaskDispatchedEvent struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Metadata      *common.Metadata             `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Workflow      *common.WorkflowInfo         `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Task          *common.TaskInfo             `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	Payload       *TaskDispatchedEvent_Payload `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskDispatchedEvent) Reset() {
	*x = TaskDispatchedEvent{}
	mi := &file_task_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskDispatchedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDispatchedEvent) ProtoMessage() {}

func (x *TaskDispatchedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDispatchedEvent.ProtoReflect.Descriptor instead.
func (*TaskDispatchedEvent) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{0}
}

func (x *TaskDispatchedEvent) GetMetadata() *common.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TaskDispatchedEvent) GetWorkflow() *common.WorkflowInfo {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *TaskDispatchedEvent) GetTask() *common.TaskInfo {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskDispatchedEvent) GetPayload() *TaskDispatchedEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TaskExecutionStartedEvent struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Metadata      *common.Metadata                   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Workflow      *common.WorkflowInfo               `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Task          *common.TaskInfo                   `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	Payload       *TaskExecutionStartedEvent_Payload `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskExecutionStartedEvent) Reset() {
	*x = TaskExecutionStartedEvent{}
	mi := &file_task_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecutionStartedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecutionStartedEvent) ProtoMessage() {}

func (x *TaskExecutionStartedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecutionStartedEvent.ProtoReflect.Descriptor instead.
func (*TaskExecutionStartedEvent) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{1}
}

func (x *TaskExecutionStartedEvent) GetMetadata() *common.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TaskExecutionStartedEvent) GetWorkflow() *common.WorkflowInfo {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *TaskExecutionStartedEvent) GetTask() *common.TaskInfo {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskExecutionStartedEvent) GetPayload() *TaskExecutionStartedEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TaskExecutionWaitingStartedEvent struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Metadata      *common.Metadata                          `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Workflow      *common.WorkflowInfo                      `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Task          *common.TaskInfo                          `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	Payload       *TaskExecutionWaitingStartedEvent_Payload `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskExecutionWaitingStartedEvent) Reset() {
	*x = TaskExecutionWaitingStartedEvent{}
	mi := &file_task_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecutionWaitingStartedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecutionWaitingStartedEvent) ProtoMessage() {}

func (x *TaskExecutionWaitingStartedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecutionWaitingStartedEvent.ProtoReflect.Descriptor instead.
func (*TaskExecutionWaitingStartedEvent) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{2}
}

func (x *TaskExecutionWaitingStartedEvent) GetMetadata() *common.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TaskExecutionWaitingStartedEvent) GetWorkflow() *common.WorkflowInfo {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *TaskExecutionWaitingStartedEvent) GetTask() *common.TaskInfo {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskExecutionWaitingStartedEvent) GetPayload() *TaskExecutionWaitingStartedEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TaskExecutionWaitingEndedEvent struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Metadata      *common.Metadata                        `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Workflow      *common.WorkflowInfo                    `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Task          *common.TaskInfo                        `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	Payload       *TaskExecutionWaitingEndedEvent_Payload `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskExecutionWaitingEndedEvent) Reset() {
	*x = TaskExecutionWaitingEndedEvent{}
	mi := &file_task_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecutionWaitingEndedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecutionWaitingEndedEvent) ProtoMessage() {}

func (x *TaskExecutionWaitingEndedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecutionWaitingEndedEvent.ProtoReflect.Descriptor instead.
func (*TaskExecutionWaitingEndedEvent) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{3}
}

func (x *TaskExecutionWaitingEndedEvent) GetMetadata() *common.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TaskExecutionWaitingEndedEvent) GetWorkflow() *common.WorkflowInfo {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *TaskExecutionWaitingEndedEvent) GetTask() *common.TaskInfo {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskExecutionWaitingEndedEvent) GetPayload() *TaskExecutionWaitingEndedEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TaskExecutionWaitingTimedOutEvent struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Metadata      *common.Metadata                           `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Workflow      *common.WorkflowInfo                       `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Task          *common.TaskInfo                           `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	Payload       *TaskExecutionWaitingTimedOutEvent_Payload `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskExecutionWaitingTimedOutEvent) Reset() {
	*x = TaskExecutionWaitingTimedOutEvent{}
	mi := &file_task_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecutionWaitingTimedOutEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecutionWaitingTimedOutEvent) ProtoMessage() {}

func (x *TaskExecutionWaitingTimedOutEvent) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecutionWaitingTimedOutEvent.ProtoReflect.Descriptor instead.
func (*TaskExecutionWaitingTimedOutEvent) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{4}
}

func (x *TaskExecutionWaitingTimedOutEvent) GetMetadata() *common.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TaskExecutionWaitingTimedOutEvent) GetWorkflow() *common.WorkflowInfo {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *TaskExecutionWaitingTimedOutEvent) GetTask() *common.TaskInfo {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskExecutionWaitingTimedOutEvent) GetPayload() *TaskExecutionWaitingTimedOutEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TaskExecutionSuccessEvent struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Metadata      *common.Metadata                   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Workflow      *common.WorkflowInfo               `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Task          *common.TaskInfo                   `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	Payload       *TaskExecutionSuccessEvent_Payload `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskExecutionSuccessEvent) Reset() {
	*x = TaskExecutionSuccessEvent{}
	mi := &file_task_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecutionSuccessEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecutionSuccessEvent) ProtoMessage() {}

func (x *TaskExecutionSuccessEvent) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecutionSuccessEvent.ProtoReflect.Descriptor instead.
func (*TaskExecutionSuccessEvent) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{5}
}

func (x *TaskExecutionSuccessEvent) GetMetadata() *common.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TaskExecutionSuccessEvent) GetWorkflow() *common.WorkflowInfo {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *TaskExecutionSuccessEvent) GetTask() *common.TaskInfo {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskExecutionSuccessEvent) GetPayload() *TaskExecutionSuccessEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TaskExecutionFailedEvent struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Metadata      *common.Metadata                  `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Workflow      *common.WorkflowInfo              `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Task          *common.TaskInfo                  `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	Payload       *TaskExecutionFailedEvent_Payload `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskExecutionFailedEvent) Reset() {
	*x = TaskExecutionFailedEvent{}
	mi := &file_task_events_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecutionFailedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecutionFailedEvent) ProtoMessage() {}

func (x *TaskExecutionFailedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecutionFailedEvent.ProtoReflect.Descriptor instead.
func (*TaskExecutionFailedEvent) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{6}
}

func (x *TaskExecutionFailedEvent) GetMetadata() *common.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TaskExecutionFailedEvent) GetWorkflow() *common.WorkflowInfo {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *TaskExecutionFailedEvent) GetTask() *common.TaskInfo {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskExecutionFailedEvent) GetPayload() *TaskExecutionFailedEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TaskDispatchedEvent_Payload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        TaskStatus             `protobuf:"varint,1,opt,name=status,proto3,enum=task.TaskStatus" json:"status,omitempty"`
	Context       *structpb.Struct       `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskDispatchedEvent_Payload) Reset() {
	*x = TaskDispatchedEvent_Payload{}
	mi := &file_task_events_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskDispatchedEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDispatchedEvent_Payload) ProtoMessage() {}

func (x *TaskDispatchedEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDispatchedEvent_Payload.ProtoReflect.Descriptor instead.
func (*TaskDispatchedEvent_Payload) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{0, 0}
}

func (x *TaskDispatchedEvent_Payload) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *TaskDispatchedEvent_Payload) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

type TaskExecutionStartedEvent_Payload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        TaskStatus             `protobuf:"varint,1,opt,name=status,proto3,enum=task.TaskStatus" json:"status,omitempty"`
	Context       *structpb.Struct       `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskExecutionStartedEvent_Payload) Reset() {
	*x = TaskExecutionStartedEvent_Payload{}
	mi := &file_task_events_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecutionStartedEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecutionStartedEvent_Payload) ProtoMessage() {}

func (x *TaskExecutionStartedEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecutionStartedEvent_Payload.ProtoReflect.Descriptor instead.
func (*TaskExecutionStartedEvent_Payload) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{1, 0}
}

func (x *TaskExecutionStartedEvent_Payload) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *TaskExecutionStartedEvent_Payload) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

type TaskExecutionWaitingStartedEvent_Payload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        TaskStatus             `protobuf:"varint,1,opt,name=status,proto3,enum=task.TaskStatus" json:"status,omitempty"`
	Context       *structpb.Struct       `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskExecutionWaitingStartedEvent_Payload) Reset() {
	*x = TaskExecutionWaitingStartedEvent_Payload{}
	mi := &file_task_events_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecutionWaitingStartedEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecutionWaitingStartedEvent_Payload) ProtoMessage() {}

func (x *TaskExecutionWaitingStartedEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecutionWaitingStartedEvent_Payload.ProtoReflect.Descriptor instead.
func (*TaskExecutionWaitingStartedEvent_Payload) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{2, 0}
}

func (x *TaskExecutionWaitingStartedEvent_Payload) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *TaskExecutionWaitingStartedEvent_Payload) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

type TaskExecutionWaitingEndedEvent_Payload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        TaskStatus             `protobuf:"varint,1,opt,name=status,proto3,enum=task.TaskStatus" json:"status,omitempty"`
	Context       *structpb.Struct       `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	DurationMs    int64                  `protobuf:"varint,3,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskExecutionWaitingEndedEvent_Payload) Reset() {
	*x = TaskExecutionWaitingEndedEvent_Payload{}
	mi := &file_task_events_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecutionWaitingEndedEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecutionWaitingEndedEvent_Payload) ProtoMessage() {}

func (x *TaskExecutionWaitingEndedEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecutionWaitingEndedEvent_Payload.ProtoReflect.Descriptor instead.
func (*TaskExecutionWaitingEndedEvent_Payload) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{3, 0}
}

func (x *TaskExecutionWaitingEndedEvent_Payload) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *TaskExecutionWaitingEndedEvent_Payload) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *TaskExecutionWaitingEndedEvent_Payload) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

type TaskExecutionWaitingTimedOutEvent_Payload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        TaskStatus             `protobuf:"varint,1,opt,name=status,proto3,enum=task.TaskStatus" json:"status,omitempty"`
	Result        *common.Result         `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	Context       *structpb.Struct       `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	DurationMs    int64                  `protobuf:"varint,4,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskExecutionWaitingTimedOutEvent_Payload) Reset() {
	*x = TaskExecutionWaitingTimedOutEvent_Payload{}
	mi := &file_task_events_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecutionWaitingTimedOutEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecutionWaitingTimedOutEvent_Payload) ProtoMessage() {}

func (x *TaskExecutionWaitingTimedOutEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecutionWaitingTimedOutEvent_Payload.ProtoReflect.Descriptor instead.
func (*TaskExecutionWaitingTimedOutEvent_Payload) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{4, 0}
}

func (x *TaskExecutionWaitingTimedOutEvent_Payload) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *TaskExecutionWaitingTimedOutEvent_Payload) GetResult() *common.Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TaskExecutionWaitingTimedOutEvent_Payload) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *TaskExecutionWaitingTimedOutEvent_Payload) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

type TaskExecutionSuccessEvent_Payload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        TaskStatus             `protobuf:"varint,1,opt,name=status,proto3,enum=task.TaskStatus" json:"status,omitempty"`
	Result        *common.Result         `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	Context       *structpb.Struct       `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	DurationMs    int64                  `protobuf:"varint,4,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskExecutionSuccessEvent_Payload) Reset() {
	*x = TaskExecutionSuccessEvent_Payload{}
	mi := &file_task_events_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecutionSuccessEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecutionSuccessEvent_Payload) ProtoMessage() {}

func (x *TaskExecutionSuccessEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecutionSuccessEvent_Payload.ProtoReflect.Descriptor instead.
func (*TaskExecutionSuccessEvent_Payload) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{5, 0}
}

func (x *TaskExecutionSuccessEvent_Payload) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *TaskExecutionSuccessEvent_Payload) GetResult() *common.Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TaskExecutionSuccessEvent_Payload) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *TaskExecutionSuccessEvent_Payload) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

type TaskExecutionFailedEvent_Payload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        TaskStatus             `protobuf:"varint,1,opt,name=status,proto3,enum=task.TaskStatus" json:"status,omitempty"`
	Result        *common.Result         `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	Context       *structpb.Struct       `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	DurationMs    int64                  `protobuf:"varint,4,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskExecutionFailedEvent_Payload) Reset() {
	*x = TaskExecutionFailedEvent_Payload{}
	mi := &file_task_events_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskExecutionFailedEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskExecutionFailedEvent_Payload) ProtoMessage() {}

func (x *TaskExecutionFailedEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_task_events_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskExecutionFailedEvent_Payload.ProtoReflect.Descriptor instead.
func (*TaskExecutionFailedEvent_Payload) Descriptor() ([]byte, []int) {
	return file_task_events_proto_rawDescGZIP(), []int{6, 0}
}

func (x *TaskExecutionFailedEvent_Payload) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *TaskExecutionFailedEvent_Payload) GetResult() *common.Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TaskExecutionFailedEvent_Payload) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *TaskExecutionFailedEvent_Payload) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

var File_task_events_proto protoreflect.FileDescriptor

const file_task_events_proto_rawDesc = "" +
	"\n" +
	"\x11task/events.proto\x12\x04task\x1a\x15common/entities.proto\x1a\x15common/metadata.proto\x1a\x14common/payload.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xc0\x02\n" +
	"\x13TaskDispatchedEvent\x12,\n" +
	"\bmetadata\x18\x01 \x01(\v2\x10.common.MetadataR\bmetadata\x120\n" +
	"\bworkflow\x18\x02 \x01(\v2\x14.common.WorkflowInfoR\bworkflow\x12$\n" +
	"\x04task\x18\x03 \x01(\v2\x10.common.TaskInfoR\x04task\x12;\n" +
	"\apayload\x18\x04 \x01(\v2!.task.TaskDispatchedEvent.PayloadR\apayload\x1af\n" +
	"\aPayload\x12(\n" +
	"\x06status\x18\x01 \x01(\x0e2\x10.task.TaskStatusR\x06status\x121\n" +
	"\acontext\x18\x02 \x01(\v2\x17.google.protobuf.StructR\acontext\"\xcc\x02\n" +
	"\x19TaskExecutionStartedEvent\x12,\n" +
	"\bmetadata\x18\x01 \x01(\v2\x10.common.MetadataR\bmetadata\x120\n" +
	"\bworkflow\x18\x02 \x01(\v2\x14.common.WorkflowInfoR\bworkflow\x12$\n" +
	"\x04task\x18\x03 \x01(\v2\x10.common.TaskInfoR\x04task\x12A\n" +
	"\apayload\x18\x04 \x01(\v2'.task.TaskExecutionStartedEvent.PayloadR\apayload\x1af\n" +
	"\aPayload\x12(\n" +
	"\x06status\x18\x01 \x01(\x0e2\x10.task.TaskStatusR\x06status\x121\n" +
	"\acontext\x18\x02 \x01(\v2\x17.google.protobuf.StructR\acontext\"\xda\x02\n" +
	" TaskExecutionWaitingStartedEvent\x12,\n" +
	"\bmetadata\x18\x01 \x01(\v2\x10.common.MetadataR\bmetadata\x120\n" +
	"\bworkflow\x18\x02 \x01(\v2\x14.common.WorkflowInfoR\bworkflow\x12$\n" +
	"\x04task\x18\x03 \x01(\v2\x10.common.TaskInfoR\x04task\x12H\n" +
	"\apayload\x18\x04 \x01(\v2..task.TaskExecutionWaitingStartedEvent.PayloadR\apayload\x1af\n" +
	"\aPayload\x12(\n" +
	"\x06status\x18\x01 \x01(\x0e2\x10.task.TaskStatusR\x06status\x121\n" +
	"\acontext\x18\x02 \x01(\v2\x17.google.protobuf.StructR\acontext\"\xf8\x02\n" +
	"\x1eTaskExecutionWaitingEndedEvent\x12,\n" +
	"\bmetadata\x18\x01 \x01(\v2\x10.common.MetadataR\bmetadata\x120\n" +
	"\bworkflow\x18\x02 \x01(\v2\x14.common.WorkflowInfoR\bworkflow\x12$\n" +
	"\x04task\x18\x03 \x01(\v2\x10.common.TaskInfoR\x04task\x12F\n" +
	"\apayload\x18\x04 \x01(\v2,.task.TaskExecutionWaitingEndedEvent.PayloadR\apayload\x1a\x87\x01\n" +
	"\aPayload\x12(\n" +
	"\x06status\x18\x01 \x01(\x0e2\x10.task.TaskStatusR\x06status\x121\n" +
	"\acontext\x18\x02 \x01(\v2\x17.google.protobuf.StructR\acontext\x12\x1f\n" +
	"\vduration_ms\x18\x03 \x01(\x03R\n" +
	"durationMs\"\xa6\x03\n" +
	"!TaskExecutionWaitingTimedOutEvent\x12,\n" +
	"\bmetadata\x18\x01 \x01(\v2\x10.common.MetadataR\bmetadata\x120\n" +
	"\bworkflow\x18\x02 \x01(\v2\x14.common.WorkflowInfoR\bworkflow\x12$\n" +
	"\x04task\x18\x03 \x01(\v2\x10.common.TaskInfoR\x04task\x12I\n" +
	"\apayload\x18\x05 \x01(\v2/.task.TaskExecutionWaitingTimedOutEvent.PayloadR\apayload\x1a\xaf\x01\n" +
	"\aPayload\x12(\n" +
	"\x06status\x18\x01 \x01(\x0e2\x10.task.TaskStatusR\x06status\x12&\n" +
	"\x06result\x18\x02 \x01(\v2\x0e.common.ResultR\x06result\x121\n" +
	"\acontext\x18\x03 \x01(\v2\x17.google.protobuf.StructR\acontext\x12\x1f\n" +
	"\vduration_ms\x18\x04 \x01(\x03R\n" +
	"durationMs\"\x96\x03\n" +
	"\x19TaskExecutionSuccessEvent\x12,\n" +
	"\bmetadata\x18\x01 \x01(\v2\x10.common.MetadataR\bmetadata\x120\n" +
	"\bworkflow\x18\x02 \x01(\v2\x14.common.WorkflowInfoR\bworkflow\x12$\n" +
	"\x04task\x18\x03 \x01(\v2\x10.common.TaskInfoR\x04task\x12A\n" +
	"\apayload\x18\x04 \x01(\v2'.task.TaskExecutionSuccessEvent.PayloadR\apayload\x1a\xaf\x01\n" +
	"\aPayload\x12(\n" +
	"\x06status\x18\x01 \x01(\x0e2\x10.task.TaskStatusR\x06status\x12&\n" +
	"\x06result\x18\x02 \x01(\v2\x0e.common.ResultR\x06result\x121\n" +
	"\acontext\x18\x03 \x01(\v2\x17.google.protobuf.StructR\acontext\x12\x1f\n" +
	"\vduration_ms\x18\x04 \x01(\x03R\n" +
	"durationMs\"\x94\x03\n" +
	"\x18TaskExecutionFailedEvent\x12,\n" +
	"\bmetadata\x18\x01 \x01(\v2\x10.common.MetadataR\bmetadata\x120\n" +
	"\bworkflow\x18\x02 \x01(\v2\x14.common.WorkflowInfoR\bworkflow\x12$\n" +
	"\x04task\x18\x03 \x01(\v2\x10.common.TaskInfoR\x04task\x12@\n" +
	"\apayload\x18\x04 \x01(\v2&.task.TaskExecutionFailedEvent.PayloadR\apayload\x1a\xaf\x01\n" +
	"\aPayload\x12(\n" +
	"\x06status\x18\x01 \x01(\x0e2\x10.task.TaskStatusR\x06status\x12&\n" +
	"\x06result\x18\x02 \x01(\v2\x0e.common.ResultR\x06result\x121\n" +
	"\acontext\x18\x03 \x01(\v2\x17.google.protobuf.StructR\acontext\x12\x1f\n" +
	"\vduration_ms\x18\x04 \x01(\x03R\n" +
	"durationMs*\xda\x01\n" +
	"\n" +
	"TaskStatus\x12\x1b\n" +
	"\x17TASK_STATUS_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13TASK_STATUS_PENDING\x10\x01\x12\x17\n" +
	"\x13TASK_STATUS_RUNNING\x10\x02\x12\x17\n" +
	"\x13TASK_STATUS_WAITING\x10\x03\x12\x17\n" +
	"\x13TASK_STATUS_SUCCESS\x10\x04\x12\x16\n" +
	"\x12TASK_STATUS_FAILED\x10\x05\x12\x19\n" +
	"\x15TASK_STATUS_TIMED_OUT\x10\x06\x12\x18\n" +
	"\x14TASK_STATUS_CANCELED\x10\aB(Z&github.com/compozy/compozy/pkg/pb/taskb\x06proto3"

var (
	file_task_events_proto_rawDescOnce sync.Once
	file_task_events_proto_rawDescData []byte
)

func file_task_events_proto_rawDescGZIP() []byte {
	file_task_events_proto_rawDescOnce.Do(func() {
		file_task_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_task_events_proto_rawDesc), len(file_task_events_proto_rawDesc)))
	})
	return file_task_events_proto_rawDescData
}

var file_task_events_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_task_events_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_task_events_proto_goTypes = []any{
	(TaskStatus)(0),                                   // 0: task.TaskStatus
	(*TaskDispatchedEvent)(nil),                       // 1: task.TaskDispatchedEvent
	(*TaskExecutionStartedEvent)(nil),                 // 2: task.TaskExecutionStartedEvent
	(*TaskExecutionWaitingStartedEvent)(nil),          // 3: task.TaskExecutionWaitingStartedEvent
	(*TaskExecutionWaitingEndedEvent)(nil),            // 4: task.TaskExecutionWaitingEndedEvent
	(*TaskExecutionWaitingTimedOutEvent)(nil),         // 5: task.TaskExecutionWaitingTimedOutEvent
	(*TaskExecutionSuccessEvent)(nil),                 // 6: task.TaskExecutionSuccessEvent
	(*TaskExecutionFailedEvent)(nil),                  // 7: task.TaskExecutionFailedEvent
	(*TaskDispatchedEvent_Payload)(nil),               // 8: task.TaskDispatchedEvent.Payload
	(*TaskExecutionStartedEvent_Payload)(nil),         // 9: task.TaskExecutionStartedEvent.Payload
	(*TaskExecutionWaitingStartedEvent_Payload)(nil),  // 10: task.TaskExecutionWaitingStartedEvent.Payload
	(*TaskExecutionWaitingEndedEvent_Payload)(nil),    // 11: task.TaskExecutionWaitingEndedEvent.Payload
	(*TaskExecutionWaitingTimedOutEvent_Payload)(nil), // 12: task.TaskExecutionWaitingTimedOutEvent.Payload
	(*TaskExecutionSuccessEvent_Payload)(nil),         // 13: task.TaskExecutionSuccessEvent.Payload
	(*TaskExecutionFailedEvent_Payload)(nil),          // 14: task.TaskExecutionFailedEvent.Payload
	(*common.Metadata)(nil),                           // 15: common.Metadata
	(*common.WorkflowInfo)(nil),                       // 16: common.WorkflowInfo
	(*common.TaskInfo)(nil),                           // 17: common.TaskInfo
	(*structpb.Struct)(nil),                           // 18: google.protobuf.Struct
	(*common.Result)(nil),                             // 19: common.Result
}
var file_task_events_proto_depIdxs = []int32{
	15, // 0: task.TaskDispatchedEvent.metadata:type_name -> common.Metadata
	16, // 1: task.TaskDispatchedEvent.workflow:type_name -> common.WorkflowInfo
	17, // 2: task.TaskDispatchedEvent.task:type_name -> common.TaskInfo
	8,  // 3: task.TaskDispatchedEvent.payload:type_name -> task.TaskDispatchedEvent.Payload
	15, // 4: task.TaskExecutionStartedEvent.metadata:type_name -> common.Metadata
	16, // 5: task.TaskExecutionStartedEvent.workflow:type_name -> common.WorkflowInfo
	17, // 6: task.TaskExecutionStartedEvent.task:type_name -> common.TaskInfo
	9,  // 7: task.TaskExecutionStartedEvent.payload:type_name -> task.TaskExecutionStartedEvent.Payload
	15, // 8: task.TaskExecutionWaitingStartedEvent.metadata:type_name -> common.Metadata
	16, // 9: task.TaskExecutionWaitingStartedEvent.workflow:type_name -> common.WorkflowInfo
	17, // 10: task.TaskExecutionWaitingStartedEvent.task:type_name -> common.TaskInfo
	10, // 11: task.TaskExecutionWaitingStartedEvent.payload:type_name -> task.TaskExecutionWaitingStartedEvent.Payload
	15, // 12: task.TaskExecutionWaitingEndedEvent.metadata:type_name -> common.Metadata
	16, // 13: task.TaskExecutionWaitingEndedEvent.workflow:type_name -> common.WorkflowInfo
	17, // 14: task.TaskExecutionWaitingEndedEvent.task:type_name -> common.TaskInfo
	11, // 15: task.TaskExecutionWaitingEndedEvent.payload:type_name -> task.TaskExecutionWaitingEndedEvent.Payload
	15, // 16: task.TaskExecutionWaitingTimedOutEvent.metadata:type_name -> common.Metadata
	16, // 17: task.TaskExecutionWaitingTimedOutEvent.workflow:type_name -> common.WorkflowInfo
	17, // 18: task.TaskExecutionWaitingTimedOutEvent.task:type_name -> common.TaskInfo
	12, // 19: task.TaskExecutionWaitingTimedOutEvent.payload:type_name -> task.TaskExecutionWaitingTimedOutEvent.Payload
	15, // 20: task.TaskExecutionSuccessEvent.metadata:type_name -> common.Metadata
	16, // 21: task.TaskExecutionSuccessEvent.workflow:type_name -> common.WorkflowInfo
	17, // 22: task.TaskExecutionSuccessEvent.task:type_name -> common.TaskInfo
	13, // 23: task.TaskExecutionSuccessEvent.payload:type_name -> task.TaskExecutionSuccessEvent.Payload
	15, // 24: task.TaskExecutionFailedEvent.metadata:type_name -> common.Metadata
	16, // 25: task.TaskExecutionFailedEvent.workflow:type_name -> common.WorkflowInfo
	17, // 26: task.TaskExecutionFailedEvent.task:type_name -> common.TaskInfo
	14, // 27: task.TaskExecutionFailedEvent.payload:type_name -> task.TaskExecutionFailedEvent.Payload
	0,  // 28: task.TaskDispatchedEvent.Payload.status:type_name -> task.TaskStatus
	18, // 29: task.TaskDispatchedEvent.Payload.context:type_name -> google.protobuf.Struct
	0,  // 30: task.TaskExecutionStartedEvent.Payload.status:type_name -> task.TaskStatus
	18, // 31: task.TaskExecutionStartedEvent.Payload.context:type_name -> google.protobuf.Struct
	0,  // 32: task.TaskExecutionWaitingStartedEvent.Payload.status:type_name -> task.TaskStatus
	18, // 33: task.TaskExecutionWaitingStartedEvent.Payload.context:type_name -> google.protobuf.Struct
	0,  // 34: task.TaskExecutionWaitingEndedEvent.Payload.status:type_name -> task.TaskStatus
	18, // 35: task.TaskExecutionWaitingEndedEvent.Payload.context:type_name -> google.protobuf.Struct
	0,  // 36: task.TaskExecutionWaitingTimedOutEvent.Payload.status:type_name -> task.TaskStatus
	19, // 37: task.TaskExecutionWaitingTimedOutEvent.Payload.result:type_name -> common.Result
	18, // 38: task.TaskExecutionWaitingTimedOutEvent.Payload.context:type_name -> google.protobuf.Struct
	0,  // 39: task.TaskExecutionSuccessEvent.Payload.status:type_name -> task.TaskStatus
	19, // 40: task.TaskExecutionSuccessEvent.Payload.result:type_name -> common.Result
	18, // 41: task.TaskExecutionSuccessEvent.Payload.context:type_name -> google.protobuf.Struct
	0,  // 42: task.TaskExecutionFailedEvent.Payload.status:type_name -> task.TaskStatus
	19, // 43: task.TaskExecutionFailedEvent.Payload.result:type_name -> common.Result
	18, // 44: task.TaskExecutionFailedEvent.Payload.context:type_name -> google.protobuf.Struct
	45, // [45:45] is the sub-list for method output_type
	45, // [45:45] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_task_events_proto_init() }
func file_task_events_proto_init() {
	if File_task_events_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_task_events_proto_rawDesc), len(file_task_events_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_task_events_proto_goTypes,
		DependencyIndexes: file_task_events_proto_depIdxs,
		EnumInfos:         file_task_events_proto_enumTypes,
		MessageInfos:      file_task_events_proto_msgTypes,
	}.Build()
	File_task_events_proto = out.File
	file_task_events_proto_goTypes = nil
	file_task_events_proto_depIdxs = nil
}
