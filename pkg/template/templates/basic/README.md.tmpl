# {{ .Name }}

{{ .Description }}

**Mode:** {{ .Mode | title }}

## Quick Start

{{- if eq .Mode "memory" }}
### Memory Mode (Zero Dependencies)

Start instantly with no external services:

```bash
compozy start
```

The runtime boots in under a second. All state is in-memory and reset on restart.

{{- else if eq .Mode "persistent" }}
### Persistent Mode (Local Development)

Run with durable state stored on disk:

```bash
compozy start
```

Compozy creates the `./.compozy/` directory automatically and keeps data between restarts.

{{- else if eq .Mode "distributed" }}
### Distributed Mode (Production-Ready)

Provision external services, then launch Compozy:

```bash
# Start infrastructure
docker-compose up -d

# Configure connections
export COMPOZY_DATABASE_URL="postgresql://user:password@localhost:5432/{{ .Name | kebabcase }}"
export TEMPORAL_HOST_PORT="localhost:7233"
export TEMPORAL_NAMESPACE="{{ .Name | kebabcase }}-prod"
export REDIS_ADDR="localhost:6379"

# Launch Compozy
compozy start
```

{{- end }}

## Setup

1. ```bash
   cd "{{ .Name }}"
   ```
2. ```bash
   cp env.example .env
   # Populate API keys and service credentials
   ```
3. ```bash
   bun install
   ```

{{- if eq .Mode "distributed" }}
> **Tip:** Use `docker-compose logs -f` to monitor infrastructure services.
{{- end }}

## Project Structure

```
{{ .Name }}/
├── compozy.yaml
├── env.example
├── api.http
├── workflows/
│   └── main.yaml
├── entrypoint.ts
├── greeting_tool.ts
└── .gitignore
```

## Configuration Checklist

- Update `compozy.yaml` to customize workflows, runtime, and mode-specific settings.
- Copy `env.example` to `.env` and set provider credentials.
- Review `workflows/main.yaml` to understand the generated workflow (`id: greeter`).
- Run the sample workflow via REST using `api.http` or the CLI.

{{- if ne .Mode "distributed" }}
## Optional: Switch to Distributed Mode

To scale beyond a single machine:

1. Update `mode` in `compozy.yaml` to `distributed`.
2. Set the required environment variables (see `.env` template).
3. Re-run `compozy start` after provisioning external services.
{{- else }}
## Switching Modes

Need a lighter setup?

1. Change `mode` in `compozy.yaml` to `memory` or `persistent`.
2. Adjust environment variables and restart with `compozy start`.
{{- end }}

## Next Steps

- Use `compozy dev` for hot-reload development.
- Modify `entrypoint.ts` and `greeting_tool.ts` to add custom logic.
- Explore [Compozy Documentation](https://docs.compozy.dev) for advanced workflows and agent patterns.

---

Generated by **Compozy** — a next-level agentic orchestration platform.
