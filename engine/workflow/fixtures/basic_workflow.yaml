id: test-workflow
version: "1.0.0"
description: "Test workflow for code formatting"

config:
    input:
        $ref: local::schemas.#(id=="code_input")
    env:
        WORKFLOW_VERSION: "1.0.0"
        MAX_RETRIES: "3"

schemas:
    - id: code_input
      type: object
      properties:
          code:
              type: string
              description: The code to format
          language:
              type: string
              description: The programming language of the code
      required:
          - code
    - id: code_output
      type: object
      properties:
          formatted_code:
              type: string
              description: The formatted code
      required:
          - formatted_code

tools:
    - id: code-formatter
      description: "A tool for formatting code"
      execute: "./format.ts"
      input:
          $ref: local::schemas.#(id=="code_input")
      output:
          $ref: local::schemas.#(id=="code_output")
      env:
          FORMATTER_VERSION: "1.0.0"

agents:
    - id: code-assistant
      config:
          $ref: global::models.#(id=="gpt-4o")
      instructions: |
          You are a code formatting assistant that helps format code according to language-specific style guides.
          When formatting code:
            - Follow the language's official style guide
            - Maintain code functionality
            - Use consistent indentation
            - Add appropriate spacing
      tools:
          - $ref: local::tools.#(id="code-formatter")
      actions:
          - id: format-code
            prompt: |
                Format the following code according to {{ .input.language }} style guide:
                ```{{ .input.language }}
                {{ .input.code }}
                ```
            input:
                $ref: local::schemas.#(id=="code_input")
            output:
                $ref: local::schemas.#(id=="code_output")

tasks:
    - id: format-code
      type: basic
      $use: agent(local::agents.#(id=="code-assistant"))
      action: format-code
      with:
          code: "{{ .trigger.input.code }}"
          language: "{{ .trigger.input.language }}"
      on_success:
          next: save-formatted-code

    - id: save-formatted-code
      type: basic
      $use: tool(local::tools.#(id="code-formatter"))
      final: true
      with:
          code: "{{ .tasks.format-code.output.formatted_code }}"
          language: "{{ .trigger.input.language }}"
