package postgres

import "fmt"

// dsn builds a pgx-compatible DSN string from Config when ConnString is empty.
func dsn(cfg *Config) string {
	if cfg.ConnString != "" {
		return cfg.ConnString
	}
	host := defaultIfEmpty(cfg.Host, "localhost")
	port := defaultIfEmpty(cfg.Port, "5432")
	user := defaultIfEmpty(cfg.User, "postgres")
	pass := defaultIfEmpty(cfg.Password, "")
	db := defaultIfEmpty(cfg.DBName, "postgres")
	ssl := defaultIfEmpty(cfg.SSLMode, "disable")
	return fmt.Sprintf("host=%s port=%s user=%s password=%s dbname=%s sslmode=%s", host, port, user, pass, db, ssl)
}

// DSNFor returns a DSN appropriate for database/sql with the pgx stdlib driver.
// It uses the same format generated by dsn(cfg).
func DSNFor(cfg *Config) string { return dsn(cfg) }

func defaultIfEmpty(v, def string) string {
	if v == "" {
		return def
	}
	return v
}
