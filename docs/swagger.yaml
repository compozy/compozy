basePath: /api/v0
definitions:
  agent.ActionConfig:
    properties:
      id:
        type: string
      input:
        $ref: '#/definitions/schema.InputSchema'
      output:
        $ref: '#/definitions/schema.OutputSchema'
      prompt:
        type: string
      with:
        $ref: '#/definitions/core.Input'
    required:
    - prompt
    type: object
  agent.Config:
    properties:
      actions:
        items:
          $ref: '#/definitions/agent.ActionConfig'
        type: array
      config:
        $ref: '#/definitions/agent.ProviderConfig'
      env:
        $ref: '#/definitions/core.EnvMap'
      id:
        type: string
      input:
        $ref: '#/definitions/schema.InputSchema'
      instructions:
        type: string
      output:
        $ref: '#/definitions/schema.OutputSchema'
      tools:
        items:
          $ref: '#/definitions/tool.Config'
        type: array
      use:
        type: string
      with:
        $ref: '#/definitions/core.Input'
    required:
    - config
    - id
    - instructions
    type: object
  agent.Execution:
    properties:
      agent_exec_id:
        type: string
      agent_id:
        type: string
      component:
        $ref: '#/definitions/core.ComponentType'
      duration:
        $ref: '#/definitions/time.Duration'
      end_time:
        type: string
      env:
        $ref: '#/definitions/core.EnvMap'
      error:
        $ref: '#/definitions/core.Error'
      input:
        $ref: '#/definitions/core.Input'
      output:
        $ref: '#/definitions/core.Output'
      parent_input:
        $ref: '#/definitions/core.Input'
      request_data:
        $ref: '#/definitions/agent.RequestData'
      start_time:
        type: string
      status:
        $ref: '#/definitions/core.StatusType'
      task_exec_id:
        type: string
      task_id:
        type: string
      workflow_exec_id:
        type: string
      workflow_id:
        type: string
    type: object
  agent.ModelName:
    enum:
    - gpt-4o
    - gpt-4o-mini
    - gpt-4.1
    - gpt-4.1-mini
    - gpt-4.1-nano
    - gpt-4.5
    - o1
    - o3
    - o3-mini
    - o4-mini
    - llama2-70b-4096
    - llama2-13b-4096
    - mixtral-8x7b-32768
    - gemma-7b-it
    - llama-3.3-70b-versatile
    - llama-4-maverick-17b-instruct
    - llama-4-scout-17b-instruct
    - claude-3-opus-20240229
    - claude-3-sonnet-20240229
    - claude-3-haiku-20240307
    - mistral-large-latest
    - mistral-medium-latest
    - mistral-small-latest
    - command
    - command-light
    - command-nightly
    - pplx-7b-online
    - pplx-70b-online
    - pplx-7b
    - pplx-70b
    - grok-3
    - grok-3-mini
    - gemini-2.5-pro
    - gemini-2.0-flash
    - gemini-2.5-flash
    - gemma-3
    type: string
    x-enum-varnames:
    - ModelGPT4o
    - ModelGPT4oMini
    - ModelGPT41
    - ModelGPT41Mini
    - ModelGPT41Nano
    - ModelGPT45
    - ModelO1
    - ModelO3
    - ModelO3Mini
    - ModelO4Mini
    - ModelLLama270b
    - ModelLLama213b
    - ModelMixtral8x7b
    - ModelGemma7b
    - ModelLLama3370bVersatile
    - ModelLLama4Maverick17b
    - ModelLLama4Scout17b
    - ModelClaude3Opus
    - ModelClaude3Sonnet
    - ModelClaude3Haiku
    - ModelMistralLarge
    - ModelMistralMedium
    - ModelMistralSmall
    - ModelCommand
    - ModelCommandLight
    - ModelCommandNightly
    - ModelPPLX7BOnline
    - ModelPPLX70BOnline
    - ModelPPLX7B
    - ModelPPLX70B
    - ModelGrok3
    - ModelGrok3Mini
    - ModelGemini25Pro
    - ModelGemini20Flash
    - ModelGemini25Flash
    - ModelGemma3
  agent.ProviderConfig:
    properties:
      api_key:
        type: string
      api_url:
        type: string
      frequency_penalty:
        type: number
      max_tokens:
        type: integer
      model:
        $ref: '#/definitions/agent.ModelName'
      presence_penalty:
        type: number
      provider:
        $ref: '#/definitions/agent.ProviderName'
      temperature:
        type: number
      top_p:
        type: number
    type: object
  agent.ProviderName:
    enum:
    - openai
    - groq
    - anthropic
    - mistral
    - cohere
    - perplexity
    - xai
    - google
    type: string
    x-enum-varnames:
    - ProviderOpenAI
    - ProviderGroq
    - ProviderAnthropic
    - ProviderMistral
    - ProviderCohere
    - ProviderPerplexity
    - ProviderXAI
    - ProviderGoogle
  agent.RequestData:
    properties:
      agent_env:
        $ref: '#/definitions/core.EnvMap'
      agent_input:
        $ref: '#/definitions/core.Input'
      metadata:
        $ref: '#/definitions/pb.AgentMetadata'
      parent_input:
        $ref: '#/definitions/core.Input'
      task_env:
        $ref: '#/definitions/core.EnvMap'
      task_input:
        $ref: '#/definitions/core.Input'
    type: object
  core.Author:
    properties:
      contributors:
        items:
          $ref: '#/definitions/core.Contributor'
        type: array
      email:
        type: string
      name:
        type: string
      organization:
        type: string
      url:
        type: string
    type: object
  core.ComponentType:
    enum:
    - workflow
    - task
    - agent
    - tool
    - log
    type: string
    x-enum-varnames:
    - ComponentWorkflow
    - ComponentTask
    - ComponentAgent
    - ComponentTool
    - ComponentLog
  core.Contributor:
    properties:
      email:
        type: string
      name:
        type: string
      organization:
        type: string
      url:
        type: string
    type: object
  core.EnvMap:
    additionalProperties:
      type: string
    type: object
  core.Error:
    properties:
      code:
        type: string
      details:
        additionalProperties: {}
        type: object
      message:
        type: string
    type: object
  core.ExecutionMap:
    properties:
      agent_exec_id:
        type: string
      agent_id:
        type: string
      component:
        $ref: '#/definitions/core.ComponentType'
      duration:
        $ref: '#/definitions/time.Duration'
      end_time:
        type: string
      error:
        $ref: '#/definitions/core.Error'
      input:
        $ref: '#/definitions/core.Input'
      output:
        $ref: '#/definitions/core.Output'
      start_time:
        type: string
      status:
        $ref: '#/definitions/core.StatusType'
      task_exec_id:
        type: string
      task_id:
        type: string
      tool_exec_id:
        type: string
      tool_id:
        type: string
      workflow_exec_id:
        type: string
      workflow_id:
        type: string
    type: object
  core.Input:
    additionalProperties: {}
    type: object
  core.MainExecutionMap:
    properties:
      agents:
        items:
          $ref: '#/definitions/core.ExecutionMap'
        type: array
      component:
        $ref: '#/definitions/core.ComponentType'
      duration:
        $ref: '#/definitions/time.Duration'
      end_time:
        type: string
      error:
        $ref: '#/definitions/core.Error'
      input:
        $ref: '#/definitions/core.Input'
      output:
        $ref: '#/definitions/core.Output'
      start_time:
        type: string
      status:
        $ref: '#/definitions/core.StatusType'
      tasks:
        items:
          $ref: '#/definitions/core.ExecutionMap'
        type: array
      tools:
        items:
          $ref: '#/definitions/core.ExecutionMap'
        type: array
      workflow_exec_id:
        type: string
      workflow_id:
        type: string
    type: object
  core.Output:
    additionalProperties: {}
    type: object
  core.StatusType:
    enum:
    - PENDING
    - RUNNING
    - SUCCESS
    - FAILED
    - TIMED_OUT
    - CANCELED
    - WAITING
    - PAUSED
    type: string
    x-enum-varnames:
    - StatusPending
    - StatusRunning
    - StatusSuccess
    - StatusFailed
    - StatusTimedOut
    - StatusCanceled
    - StatusWaiting
    - StatusPaused
  pb.AgentMetadata:
    properties:
      agent_exec_id:
        type: string
      agent_id:
        type: string
      source:
        type: string
      subject:
        type: string
      task_exec_id:
        type: string
      task_id:
        type: string
      time:
        $ref: '#/definitions/timestamppb.Timestamp'
      version:
        type: string
      workflow_exec_id:
        type: string
      workflow_id:
        type: string
    type: object
  pb.TaskMetadata:
    properties:
      source:
        type: string
      subject:
        type: string
      task_exec_id:
        type: string
      task_id:
        type: string
      time:
        $ref: '#/definitions/timestamppb.Timestamp'
      version:
        type: string
      workflow_exec_id:
        type: string
      workflow_id:
        type: string
    type: object
  pb.ToolMetadata:
    properties:
      source:
        type: string
      subject:
        type: string
      task_exec_id:
        type: string
      task_id:
        type: string
      time:
        $ref: '#/definitions/timestamppb.Timestamp'
      tool_exec_id:
        type: string
      tool_id:
        type: string
      version:
        type: string
      workflow_exec_id:
        type: string
      workflow_id:
        type: string
    type: object
  router.ErrorInfo:
    properties:
      code:
        type: string
      details:
        type: string
      message:
        type: string
    type: object
  router.Response:
    properties:
      data: {}
      error:
        $ref: '#/definitions/router.ErrorInfo'
      message:
        type: string
      status:
        type: integer
    type: object
  schema.InputSchema:
    properties:
      schema:
        $ref: '#/definitions/schema.Schema'
    type: object
  schema.OutputSchema:
    properties:
      schema:
        $ref: '#/definitions/schema.Schema'
    type: object
  schema.Schema:
    additionalProperties: {}
    type: object
  task.Config:
    properties:
      $use: {}
      action:
        description: Basic task properties
        type: string
      condition:
        description: Decision task properties
        type: string
      env:
        $ref: '#/definitions/core.EnvMap'
      final:
        type: boolean
      id:
        type: string
      input:
        $ref: '#/definitions/schema.InputSchema'
      on_error:
        $ref: '#/definitions/task.ErrorTransitionConfig'
      on_success:
        $ref: '#/definitions/task.SuccessTransitionConfig'
      output:
        $ref: '#/definitions/schema.OutputSchema'
      routes:
        additionalProperties:
          type: string
        type: object
      type:
        $ref: '#/definitions/task.Type'
      with:
        $ref: '#/definitions/core.Input'
    type: object
  task.ErrorTransitionConfig:
    properties:
      next:
        type: string
      retry_policy:
        $ref: '#/definitions/task.RetryPolicyConfig'
      with:
        $ref: '#/definitions/core.Input'
    type: object
  task.Execution:
    properties:
      component:
        $ref: '#/definitions/core.ComponentType'
      duration:
        $ref: '#/definitions/time.Duration'
      end_time:
        type: string
      env:
        $ref: '#/definitions/core.EnvMap'
      error:
        $ref: '#/definitions/core.Error'
      input:
        $ref: '#/definitions/core.Input'
      output:
        $ref: '#/definitions/core.Output'
      parent_input:
        $ref: '#/definitions/core.Input'
      request_data:
        $ref: '#/definitions/task.RequestData'
      start_time:
        type: string
      status:
        $ref: '#/definitions/core.StatusType'
      task_exec_id:
        type: string
      task_id:
        type: string
      workflow_exec_id:
        type: string
      workflow_id:
        type: string
    type: object
  task.RequestData:
    properties:
      metadata:
        $ref: '#/definitions/pb.TaskMetadata'
      parent_input:
        $ref: '#/definitions/core.Input'
      task_env:
        $ref: '#/definitions/core.EnvMap'
      task_input:
        $ref: '#/definitions/core.Input'
      workflow_env:
        $ref: '#/definitions/core.EnvMap'
    type: object
  task.RetryPolicyConfig:
    properties:
      backoff_factor:
        description: Multiplicative factor for backoff duration (e.g., 2.0)
        type: number
      backoff_initial:
        description: Initial backoff duration (e.g., "1s", "500ms")
        type: string
      backoff_max:
        description: Maximum backoff duration (e.g., "30s", "1m")
        type: string
      max_attempts:
        description: Maximum number of retry attempts
        type: integer
    type: object
  task.SuccessTransitionConfig:
    properties:
      next:
        type: string
      with:
        $ref: '#/definitions/core.Input'
    type: object
  task.Type:
    enum:
    - basic
    - decision
    type: string
    x-enum-varnames:
    - TaskTypeBasic
    - TaskTypeDecision
  time.Duration:
    enum:
    - -9223372036854775808
    - 9223372036854775807
    - 1
    - 1000
    - 1000000
    - 1000000000
    - 60000000000
    - 3600000000000
    type: integer
    x-enum-varnames:
    - minDuration
    - maxDuration
    - Nanosecond
    - Microsecond
    - Millisecond
    - Second
    - Minute
    - Hour
  timestamppb.Timestamp:
    properties:
      nanos:
        description: |-
          Non-negative fractions of a second at nanosecond resolution. Negative
          second values with fractions must still have non-negative nanos values
          that count forward in time. Must be from 0 to 999,999,999
          inclusive.
        type: integer
      seconds:
        description: |-
          Represents seconds of UTC time since Unix epoch
          1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
          9999-12-31T23:59:59Z inclusive.
        type: integer
    type: object
  tool.Config:
    properties:
      $use: {}
      description:
        type: string
      env:
        $ref: '#/definitions/core.EnvMap'
      execute:
        type: string
      id:
        type: string
      input:
        $ref: '#/definitions/schema.InputSchema'
      output:
        $ref: '#/definitions/schema.OutputSchema'
      with:
        $ref: '#/definitions/core.Input'
    type: object
  tool.Execution:
    properties:
      component:
        $ref: '#/definitions/core.ComponentType'
      duration:
        $ref: '#/definitions/time.Duration'
      end_time:
        type: string
      env:
        $ref: '#/definitions/core.EnvMap'
      error:
        $ref: '#/definitions/core.Error'
      input:
        $ref: '#/definitions/core.Input'
      output:
        $ref: '#/definitions/core.Output'
      parent_input:
        $ref: '#/definitions/core.Input'
      request_data:
        $ref: '#/definitions/tool.RequestData'
      start_time:
        type: string
      status:
        $ref: '#/definitions/core.StatusType'
      task_exec_id:
        type: string
      task_id:
        type: string
      tool_exec_id:
        type: string
      tool_id:
        type: string
      workflow_exec_id:
        type: string
      workflow_id:
        type: string
    type: object
  tool.RequestData:
    properties:
      metadata:
        $ref: '#/definitions/pb.ToolMetadata'
      parent_input:
        $ref: '#/definitions/core.Input'
      task_env:
        $ref: '#/definitions/core.EnvMap'
      task_input:
        $ref: '#/definitions/core.Input'
      tool_env:
        $ref: '#/definitions/core.EnvMap'
      tool_input:
        $ref: '#/definitions/core.Input'
    type: object
  wfrouter.ExecuteWorkflowResponse:
    properties:
      exec_url:
        example: localhost:8080/api/workflows/executions/2Z4PVTL6K27XVT4A3NPKMDD5BG
        type: string
      workflow_exec_id:
        example: 2Z4PVTL6K27XVT4A3NPKMDD5BG
        type: string
      workflow_id:
        example: data-processing
        type: string
    type: object
  workflow.Config:
    properties:
      agents:
        items:
          $ref: '#/definitions/agent.Config'
        type: array
      author:
        $ref: '#/definitions/core.Author'
      config:
        $ref: '#/definitions/workflow.Opts'
      description:
        type: string
      env:
        $ref: '#/definitions/core.EnvMap'
      id:
        type: string
      tasks:
        items:
          $ref: '#/definitions/task.Config'
        type: array
      tools:
        items:
          $ref: '#/definitions/tool.Config'
        type: array
      version:
        type: string
    type: object
  workflow.Opts:
    properties:
      input:
        $ref: '#/definitions/schema.InputSchema'
      on_error:
        $ref: '#/definitions/task.ErrorTransitionConfig'
    type: object
info:
  contact:
    email: support@compozy.dev
    name: Compozy Support
    url: https://github.com/compozy/compozy
  description: Compozy is a workflow orchestration engine for AI agents, tasks, and
    tools
  license:
    name: MIT
    url: https://github.com/compozy/compozy/blob/main/LICENSE
  termsOfService: https://github.com/compozy/compozy
  title: Compozy API
  version: "1.0"
paths:
  /agents:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all available agent configurations
      produces:
      - application/json
      responses:
        "200":
          description: Agents retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    agents:
                      items:
                        $ref: '#/definitions/agent.Config'
                      type: array
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List all agents
      tags:
      - agents
  /agents/{agent_id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific agent configuration by its ID
      parameters:
      - description: Agent ID
        example: '"code-assistant"'
        in: path
        name: agent_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Agent retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  $ref: '#/definitions/agent.Config'
              type: object
        "400":
          description: Invalid agent ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "404":
          description: Agent not found
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: Get agent by ID
      tags:
      - agents
  /agents/{agent_id}/executions:
    get:
      consumes:
      - application/json
      description: Retrieve all executions for a specific agent
      parameters:
      - description: Agent ID
        example: '"code-assistant"'
        in: path
        name: agent_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Agent executions retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    executions:
                      items:
                        $ref: '#/definitions/agent.Execution'
                      type: array
                  type: object
              type: object
        "400":
          description: Invalid agent ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List executions by agent ID
      tags:
      - executions
  /executions/agents:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all agent executions across all workflows
      produces:
      - application/json
      responses:
        "200":
          description: Agent executions retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    executions:
                      items:
                        $ref: '#/definitions/agent.Execution'
                      type: array
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List all agent executions
      tags:
      - executions
  /executions/agents/{agent_exec_id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific agent execution by its execution ID
      parameters:
      - description: Agent Execution ID
        example: '"2Z4PVTL6K27XVT4A3NPKMDD5BG"'
        in: path
        name: agent_exec_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Agent execution retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  $ref: '#/definitions/agent.Execution'
              type: object
        "400":
          description: Invalid execution ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "404":
          description: Execution not found
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: Get agent execution by ID
      tags:
      - executions
  /executions/tasks:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all task executions across all workflows
      produces:
      - application/json
      responses:
        "200":
          description: Task executions retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    executions:
                      items:
                        $ref: '#/definitions/task.Execution'
                      type: array
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List all task executions
      tags:
      - executions
  /executions/tasks/{task_exec_id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific task execution by its execution ID
      parameters:
      - description: Task Execution ID
        example: '"2Z4PVTL6K27XVT4A3NPKMDD5BG"'
        in: path
        name: task_exec_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Task execution retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  $ref: '#/definitions/task.Execution'
              type: object
        "400":
          description: Invalid execution ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "404":
          description: Execution not found
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: Get task execution by ID
      tags:
      - executions
  /executions/tasks/{task_exec_id}/executions:
    get:
      consumes:
      - application/json
      description: Retrieve all child executions (agents, tools) for a specific task
        execution
      parameters:
      - description: Task Execution ID
        example: '"2Z4PVTL6K27XVT4A3NPKMDD5BG"'
        in: path
        name: task_exec_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Child executions retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    executions:
                      items: {}
                      type: array
                  type: object
              type: object
        "400":
          description: Invalid execution ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List child executions by task execution ID
      tags:
      - executions
  /executions/tasks/{task_exec_id}/executions/agents:
    get:
      consumes:
      - application/json
      description: Retrieve all agent executions for a specific task execution
      parameters:
      - description: Task Execution ID
        example: '"2Z4PVTL6K27XVT4A3NPKMDD5BG"'
        in: path
        name: task_exec_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Agent executions retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    executions:
                      items:
                        $ref: '#/definitions/agent.Execution'
                      type: array
                  type: object
              type: object
        "400":
          description: Invalid execution ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List agent executions by task execution ID
      tags:
      - executions
  /executions/tasks/{task_exec_id}/executions/tools:
    get:
      consumes:
      - application/json
      description: Retrieve all tool executions for a specific task execution
      parameters:
      - description: Task Execution ID
        example: '"2Z4PVTL6K27XVT4A3NPKMDD5BG"'
        in: path
        name: task_exec_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Tool executions retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    executions:
                      items:
                        $ref: '#/definitions/tool.Execution'
                      type: array
                  type: object
              type: object
        "400":
          description: Invalid execution ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List tool executions by task execution ID
      tags:
      - executions
  /executions/tools:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all tool executions across all workflows
      produces:
      - application/json
      responses:
        "200":
          description: Tool executions retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    executions:
                      items:
                        $ref: '#/definitions/tool.Execution'
                      type: array
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List all tool executions
      tags:
      - executions
  /executions/tools/{tool_exec_id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific tool execution by its execution ID
      parameters:
      - description: Tool Execution ID
        example: '"2Z4PVTL6K27XVT4A3NPKMDD5BG"'
        in: path
        name: tool_exec_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Tool execution retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  $ref: '#/definitions/tool.Execution'
              type: object
        "400":
          description: Invalid execution ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "404":
          description: Execution not found
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: Get tool execution by ID
      tags:
      - executions
  /executions/workflows:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all workflow executions across all workflows
      produces:
      - application/json
      responses:
        "200":
          description: Workflow executions retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    executions:
                      items:
                        $ref: '#/definitions/core.MainExecutionMap'
                      type: array
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List all workflow executions
      tags:
      - executions
  /executions/workflows/{workflow_exec_id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific workflow execution by its execution ID
      parameters:
      - description: Workflow Execution ID
        example: '"2Z4PVTL6K27XVT4A3NPKMDD5BG"'
        in: path
        name: workflow_exec_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Workflow execution retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  $ref: '#/definitions/core.MainExecutionMap'
              type: object
        "400":
          description: Invalid execution ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "404":
          description: Execution not found
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: Get workflow execution by ID
      tags:
      - executions
  /executions/workflows/{workflow_exec_id}/executions:
    get:
      consumes:
      - application/json
      description: Retrieve all child executions (tasks, agents, tools) for a specific
        workflow execution
      parameters:
      - description: Workflow Execution ID
        example: '"2Z4PVTL6K27XVT4A3NPKMDD5BG"'
        in: path
        name: workflow_exec_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Child executions retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    executions:
                      items: {}
                      type: array
                  type: object
              type: object
        "400":
          description: Invalid execution ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List child executions by workflow execution ID
      tags:
      - executions
  /executions/workflows/{workflow_exec_id}/executions/agents:
    get:
      consumes:
      - application/json
      description: Retrieve all agent executions for a specific workflow execution
      parameters:
      - description: Workflow Execution ID
        example: '"2Z4PVTL6K27XVT4A3NPKMDD5BG"'
        in: path
        name: workflow_exec_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Agent executions retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    executions:
                      items:
                        $ref: '#/definitions/agent.Execution'
                      type: array
                  type: object
              type: object
        "400":
          description: Invalid execution ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List agent executions by workflow execution ID
      tags:
      - executions
  /executions/workflows/{workflow_exec_id}/executions/tasks:
    get:
      consumes:
      - application/json
      description: Retrieve all task executions for a specific workflow execution
      parameters:
      - description: Workflow Execution ID
        example: '"2Z4PVTL6K27XVT4A3NPKMDD5BG"'
        in: path
        name: workflow_exec_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Task executions retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    executions:
                      items:
                        $ref: '#/definitions/task.Execution'
                      type: array
                  type: object
              type: object
        "400":
          description: Invalid execution ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List task executions by workflow execution ID
      tags:
      - executions
  /executions/workflows/{workflow_exec_id}/executions/tools:
    get:
      consumes:
      - application/json
      description: Retrieve all tool executions for a specific workflow execution
      parameters:
      - description: Workflow Execution ID
        example: '"2Z4PVTL6K27XVT4A3NPKMDD5BG"'
        in: path
        name: workflow_exec_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Tool executions retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    executions:
                      items:
                        $ref: '#/definitions/tool.Execution'
                      type: array
                  type: object
              type: object
        "400":
          description: Invalid execution ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List tool executions by workflow execution ID
      tags:
      - executions
  /tools:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all available tool configurations
      produces:
      - application/json
      responses:
        "200":
          description: Tools retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    tools:
                      items:
                        $ref: '#/definitions/tool.Config'
                      type: array
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List all tools
      tags:
      - tools
  /tools/{tool_id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific tool configuration by its ID
      parameters:
      - description: Tool ID
        example: '"format-code"'
        in: path
        name: tool_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Tool retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  $ref: '#/definitions/tool.Config'
              type: object
        "400":
          description: Invalid tool ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "404":
          description: Tool not found
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: Get tool by ID
      tags:
      - tools
  /tools/{tool_id}/executions:
    get:
      consumes:
      - application/json
      description: Retrieve all executions for a specific tool
      parameters:
      - description: Tool ID
        example: '"format-code"'
        in: path
        name: tool_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Tool executions retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    executions:
                      items:
                        $ref: '#/definitions/tool.Execution'
                      type: array
                  type: object
              type: object
        "400":
          description: Invalid tool ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List executions by tool ID
      tags:
      - executions
  /workflows:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all available workflow configurations
      produces:
      - application/json
      responses:
        "200":
          description: Workflows retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    workflows:
                      items:
                        $ref: '#/definitions/workflow.Config'
                      type: array
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List all workflows
      tags:
      - workflows
  /workflows/{workflow_id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific workflow configuration by its ID
      parameters:
      - description: Workflow ID
        example: '"data-processing"'
        in: path
        name: workflow_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Workflow retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  $ref: '#/definitions/workflow.Config'
              type: object
        "400":
          description: Invalid workflow ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "404":
          description: Workflow not found
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: Get workflow by ID
      tags:
      - workflows
  /workflows/{workflow_id}/executions:
    get:
      consumes:
      - application/json
      description: Retrieve all executions for a specific workflow
      parameters:
      - description: Workflow ID
        example: '"data-processing"'
        in: path
        name: workflow_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Workflow executions retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    executions:
                      items:
                        $ref: '#/definitions/core.MainExecutionMap'
                      type: array
                  type: object
              type: object
        "400":
          description: Invalid workflow ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List executions by workflow ID
      tags:
      - executions
    post:
      consumes:
      - application/json
      description: Trigger the execution of a workflow with provided input data
      parameters:
      - description: Workflow ID
        example: '"data-processing"'
        in: path
        name: workflow_id
        required: true
        type: string
      - description: Workflow input data
        in: body
        name: input
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "202":
          description: Workflow triggered successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  $ref: '#/definitions/wfrouter.ExecuteWorkflowResponse'
              type: object
        "400":
          description: Invalid input or workflow ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "404":
          description: Workflow not found
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: Execute workflow
      tags:
      - workflows
  /workflows/{workflow_id}/executions/children:
    get:
      consumes:
      - application/json
      description: Retrieve all child executions (tasks, agents, tools) for a specific
        workflow
      parameters:
      - description: Workflow ID
        example: '"data-processing"'
        in: path
        name: workflow_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Child executions retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    executions:
                      items: {}
                      type: array
                  type: object
              type: object
        "400":
          description: Invalid workflow ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List child executions by workflow ID
      tags:
      - executions
  /workflows/{workflow_id}/executions/children/agents:
    get:
      consumes:
      - application/json
      description: Retrieve all agent executions for a specific workflow
      parameters:
      - description: Workflow ID
        example: '"data-processing"'
        in: path
        name: workflow_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Agent executions retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    executions:
                      items:
                        $ref: '#/definitions/agent.Execution'
                      type: array
                  type: object
              type: object
        "400":
          description: Invalid workflow ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List agent executions by workflow ID
      tags:
      - executions
  /workflows/{workflow_id}/executions/children/tasks:
    get:
      consumes:
      - application/json
      description: Retrieve all task executions for a specific workflow
      parameters:
      - description: Workflow ID
        example: '"data-processing"'
        in: path
        name: workflow_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Task executions retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    executions:
                      items:
                        $ref: '#/definitions/task.Execution'
                      type: array
                  type: object
              type: object
        "400":
          description: Invalid workflow ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List task executions by workflow ID
      tags:
      - executions
  /workflows/{workflow_id}/executions/children/tools:
    get:
      consumes:
      - application/json
      description: Retrieve all tool executions for a specific workflow
      parameters:
      - description: Workflow ID
        example: '"data-processing"'
        in: path
        name: workflow_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Tool executions retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    executions:
                      items:
                        $ref: '#/definitions/tool.Execution'
                      type: array
                  type: object
              type: object
        "400":
          description: Invalid workflow ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List tool executions by workflow ID
      tags:
      - executions
  /workflows/{workflow_id}/tasks:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all tasks within a specific workflow
      parameters:
      - description: Workflow ID
        example: '"data-processing"'
        in: path
        name: workflow_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Tasks retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    tasks:
                      items:
                        $ref: '#/definitions/task.Config'
                      type: array
                  type: object
              type: object
        "400":
          description: Invalid workflow ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "404":
          description: Workflow not found
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List tasks for a workflow
      tags:
      - tasks
  /workflows/{workflow_id}/tasks/{task_id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific task configuration by its ID within a workflow
      parameters:
      - description: Workflow ID
        example: '"data-processing"'
        in: path
        name: workflow_id
        required: true
        type: string
      - description: Task ID
        example: '"validate-input"'
        in: path
        name: task_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Task retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  $ref: '#/definitions/task.Config'
              type: object
        "400":
          description: Invalid workflow or task ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "404":
          description: Task not found
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: Get task by ID
      tags:
      - tasks
  /workflows/{workflow_id}/tasks/{task_id}/executions:
    get:
      consumes:
      - application/json
      description: Retrieve all executions for a specific task within a workflow
      parameters:
      - description: Workflow ID
        example: '"data-processing"'
        in: path
        name: workflow_id
        required: true
        type: string
      - description: Task ID
        example: '"validate-input"'
        in: path
        name: task_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Task executions retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    executions:
                      items:
                        $ref: '#/definitions/task.Execution'
                      type: array
                  type: object
              type: object
        "400":
          description: Invalid workflow or task ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List executions by task ID
      tags:
      - executions
  /workflows/{workflow_id}/tasks/{task_id}/executions/agents:
    get:
      consumes:
      - application/json
      description: Retrieve all agent executions for a specific task
      parameters:
      - description: Workflow ID
        example: '"data-processing"'
        in: path
        name: workflow_id
        required: true
        type: string
      - description: Task ID
        example: '"validate-input"'
        in: path
        name: task_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Agent executions retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    executions:
                      items:
                        $ref: '#/definitions/agent.Execution'
                      type: array
                  type: object
              type: object
        "400":
          description: Invalid task ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List agent executions by task ID
      tags:
      - executions
  /workflows/{workflow_id}/tasks/{task_id}/executions/children:
    get:
      consumes:
      - application/json
      description: Retrieve all child executions (agents, tools) for a specific task
      parameters:
      - description: Workflow ID
        example: '"data-processing"'
        in: path
        name: workflow_id
        required: true
        type: string
      - description: Task ID
        example: '"validate-input"'
        in: path
        name: task_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Child executions retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    executions:
                      items: {}
                      type: array
                  type: object
              type: object
        "400":
          description: Invalid task ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List child executions by task ID
      tags:
      - executions
  /workflows/{workflow_id}/tasks/{task_id}/executions/tools:
    get:
      consumes:
      - application/json
      description: Retrieve all tool executions for a specific task
      parameters:
      - description: Workflow ID
        example: '"data-processing"'
        in: path
        name: workflow_id
        required: true
        type: string
      - description: Task ID
        example: '"validate-input"'
        in: path
        name: task_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Tool executions retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                data:
                  properties:
                    executions:
                      items:
                        $ref: '#/definitions/tool.Execution'
                      type: array
                  type: object
              type: object
        "400":
          description: Invalid task ID
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/router.Response'
            - properties:
                error:
                  $ref: '#/definitions/router.ErrorInfo'
              type: object
      summary: List tool executions by task ID
      tags:
      - executions
swagger: "2.0"
tags:
- description: Workflow management operations
  name: workflows
- description: Task management operations
  name: tasks
- description: Agent management operations
  name: agents
- description: Tool management operations
  name: tools
- description: Execution monitoring operations
  name: executions
