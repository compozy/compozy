basePath: /api/v0
definitions:
    agent.ActionConfig:
        properties:
            $merge: {}
            $ref:
                type: string
            $use:
                type: string
            id:
                type: string
            input:
                $ref: "#/definitions/schema.Schema"
            output:
                $ref: "#/definitions/schema.Schema"
            prompt:
                type: string
            with:
                $ref: "#/definitions/core.Input"
        required:
            - prompt
        type: object
    agent.Config:
        properties:
            actions:
                items:
                    $ref: "#/definitions/agent.ActionConfig"
                type: array
            config:
                $ref: "#/definitions/agent.ProviderConfig"
            env:
                $ref: "#/definitions/core.EnvMap"
            id:
                type: string
            input:
                $ref: "#/definitions/schema.Schema"
            instructions:
                type: string
            output:
                $ref: "#/definitions/schema.Schema"
            tools:
                items:
                    $ref: "#/definitions/tool.Config"
                type: array
            with:
                $ref: "#/definitions/core.Input"
        required:
            - config
            - id
            - instructions
        type: object
    agent.ModelName:
        enum:
            - gpt-4o
            - gpt-4o-mini
            - gpt-4.1
            - gpt-4.1-mini
            - gpt-4.1-nano
            - gpt-4.5
            - o1
            - o3
            - o3-mini
            - o4-mini
            - llama2-70b-4096
            - llama2-13b-4096
            - mixtral-8x7b-32768
            - gemma-7b-it
            - llama-3.3-70b-versatile
            - llama-4-maverick-17b-instruct
            - llama-4-scout-17b-instruct
            - claude-3-opus-20240229
            - claude-3-sonnet-20240229
            - claude-3-haiku-20240307
            - mistral-large-latest
            - mistral-medium-latest
            - mistral-small-latest
            - command
            - command-light
            - command-nightly
            - pplx-7b-online
            - pplx-70b-online
            - pplx-7b
            - pplx-70b
            - grok-3
            - grok-3-mini
            - gemini-2.5-pro
            - gemini-2.0-flash
            - gemini-2.5-flash
            - gemma-3
        type: string
        x-enum-varnames:
            - ModelGPT4o
            - ModelGPT4oMini
            - ModelGPT41
            - ModelGPT41Mini
            - ModelGPT41Nano
            - ModelGPT45
            - ModelO1
            - ModelO3
            - ModelO3Mini
            - ModelO4Mini
            - ModelLLama270b
            - ModelLLama213b
            - ModelMixtral8x7b
            - ModelGemma7b
            - ModelLLama3370bVersatile
            - ModelLLama4Maverick17b
            - ModelLLama4Scout17b
            - ModelClaude3Opus
            - ModelClaude3Sonnet
            - ModelClaude3Haiku
            - ModelMistralLarge
            - ModelMistralMedium
            - ModelMistralSmall
            - ModelCommand
            - ModelCommandLight
            - ModelCommandNightly
            - ModelPPLX7BOnline
            - ModelPPLX70BOnline
            - ModelPPLX7B
            - ModelPPLX70B
            - ModelGrok3
            - ModelGrok3Mini
            - ModelGemini25Pro
            - ModelGemini20Flash
            - ModelGemini25Flash
            - ModelGemma3
    agent.ProviderConfig:
        properties:
            api_key:
                type: string
            api_url:
                type: string
            frequency_penalty:
                type: number
            max_tokens:
                type: integer
            model:
                $ref: "#/definitions/agent.ModelName"
            presence_penalty:
                type: number
            provider:
                $ref: "#/definitions/agent.ProviderName"
            temperature:
                type: number
            top_p:
                type: number
        type: object
    agent.ProviderName:
        enum:
            - openai
            - groq
            - anthropic
            - mistral
            - cohere
            - perplexity
            - xai
            - google
        type: string
        x-enum-varnames:
            - ProviderOpenAI
            - ProviderGroq
            - ProviderAnthropic
            - ProviderMistral
            - ProviderCohere
            - ProviderPerplexity
            - ProviderXAI
            - ProviderGoogle
    core.Author:
        properties:
            contributors:
                items:
                    $ref: "#/definitions/core.Contributor"
                type: array
            email:
                type: string
            name:
                type: string
            organization:
                type: string
            url:
                type: string
        type: object
    core.ComponentType:
        enum:
            - workflow
            - task
            - agent
            - tool
            - log
        type: string
        x-enum-varnames:
            - ComponentWorkflow
            - ComponentTask
            - ComponentAgent
            - ComponentTool
            - ComponentLog
    core.Contributor:
        properties:
            email:
                type: string
            name:
                type: string
            organization:
                type: string
            url:
                type: string
        type: object
    core.EnvMap:
        additionalProperties:
            type: string
        type: object
    core.Error:
        properties:
            code:
                type: string
            details:
                additionalProperties: {}
                type: object
            message:
                type: string
        type: object
    core.Input:
        additionalProperties: {}
        type: object
    core.Output:
        additionalProperties: {}
        type: object
    core.StatusType:
        enum:
            - PENDING
            - RUNNING
            - SUCCESS
            - FAILED
            - TIMED_OUT
            - CANCELED
            - WAITING
            - PAUSED
        type: string
        x-enum-varnames:
            - StatusPending
            - StatusRunning
            - StatusSuccess
            - StatusFailed
            - StatusTimedOut
            - StatusCanceled
            - StatusWaiting
            - StatusPaused
    router.ErrorInfo:
        properties:
            code:
                type: string
            details:
                type: string
            message:
                type: string
        type: object
    router.Response:
        properties:
            data: {}
            error:
                $ref: "#/definitions/router.ErrorInfo"
            message:
                type: string
            status:
                type: integer
        type: object
    schema.Schema:
        additionalProperties: {}
        type: object
    task.Config:
        properties:
            action:
                description: Basic task properties
                type: string
            agent:
                $ref: "#/definitions/agent.Config"
            condition:
                description: Router task properties
                type: string
            env:
                $ref: "#/definitions/core.EnvMap"
            final:
                type: boolean
            id:
                type: string
            input:
                $ref: "#/definitions/schema.Schema"
            on_error:
                $ref: "#/definitions/task.ErrorTransitionConfig"
            on_success:
                $ref: "#/definitions/task.SuccessTransitionConfig"
            output:
                $ref: "#/definitions/schema.Schema"
            routes:
                additionalProperties:
                    type: string
                type: object
            tool:
                $ref: "#/definitions/tool.Config"
            type:
                $ref: "#/definitions/task.Type"
            with:
                $ref: "#/definitions/core.Input"
        type: object
    task.ErrorTransitionConfig:
        properties:
            next:
                type: string
            retry_policy:
                $ref: "#/definitions/task.RetryPolicyConfig"
            with:
                $ref: "#/definitions/core.Input"
        type: object
    task.RetryPolicyConfig:
        properties:
            backoff_factor:
                description: Multiplicative factor for backoff duration (e.g., 2.0)
                type: number
            backoff_initial:
                description: Initial backoff duration (e.g., "1s", "500ms")
                type: string
            backoff_max:
                description: Maximum backoff duration (e.g., "30s", "1m")
                type: string
            max_attempts:
                description: Maximum number of retry attempts
                type: integer
        type: object
    task.State:
        properties:
            agent_id:
                type: string
            component:
                $ref: "#/definitions/core.ComponentType"
            error:
                $ref: "#/definitions/core.Error"
            input:
                $ref: "#/definitions/core.Input"
            output:
                $ref: "#/definitions/core.Output"
            state_id:
                $ref: "#/definitions/task.StateID"
            status:
                $ref: "#/definitions/core.StatusType"
            tool_id:
                type: string
        type: object
    task.StateID:
        properties:
            taskExecID:
                type: string
            taskID:
                type: string
        type: object
    task.SuccessTransitionConfig:
        properties:
            next:
                type: string
            with:
                $ref: "#/definitions/core.Input"
        type: object
    task.Type:
        enum:
            - basic
            - router
        type: string
        x-enum-varnames:
            - TaskTypeBasic
            - TaskTypeRouter
    tool.Config:
        properties:
            description:
                type: string
            env:
                $ref: "#/definitions/core.EnvMap"
            execute:
                type: string
            id:
                type: string
            input:
                $ref: "#/definitions/schema.Schema"
            output:
                $ref: "#/definitions/schema.Schema"
            with:
                $ref: "#/definitions/core.Input"
        type: object
    wfrouter.ExecuteWorkflowResponse:
        properties:
            exec_url:
                example: localhost:8080/api/workflows/executions/2Z4PVTL6K27XVT4A3NPKMDD5BG
                type: string
            workflow_exec_id:
                example: 2Z4PVTL6K27XVT4A3NPKMDD5BG
                type: string
            workflow_id:
                example: data-processing
                type: string
        type: object
    workflow.Config:
        properties:
            agents:
                items:
                    $ref: "#/definitions/agent.Config"
                type: array
            author:
                $ref: "#/definitions/core.Author"
            config:
                $ref: "#/definitions/workflow.Opts"
            description:
                type: string
            id:
                type: string
            schemas:
                items:
                    $ref: "#/definitions/schema.Schema"
                type: array
            tasks:
                items:
                    $ref: "#/definitions/task.Config"
                type: array
            tools:
                items:
                    $ref: "#/definitions/tool.Config"
                type: array
            version:
                type: string
        type: object
    workflow.Opts:
        properties:
            env:
                $ref: "#/definitions/core.EnvMap"
            input:
                $ref: "#/definitions/schema.Schema"
            on_error:
                $ref: "#/definitions/task.ErrorTransitionConfig"
        type: object
    workflow.State:
        properties:
            error:
                $ref: "#/definitions/core.Error"
            input:
                $ref: "#/definitions/core.Input"
            output:
                $ref: "#/definitions/core.Output"
            state_id:
                $ref: "#/definitions/workflow.StateID"
            status:
                $ref: "#/definitions/core.StatusType"
            tasks:
                additionalProperties:
                    $ref: "#/definitions/task.State"
                type: object
        type: object
    workflow.StateID:
        properties:
            workflowExec:
                type: string
            workflowID:
                type: string
        type: object
info:
    contact:
        email: support@compozy.dev
        name: Compozy Support
        url: https://github.com/compozy/compozy
    description:
        Compozy is a workflow orchestration engine for AI agents, tasks, and
        tools
    license:
        name: MIT
        url: https://github.com/compozy/compozy/blob/main/LICENSE
    termsOfService: https://github.com/compozy/compozy
    title: Compozy API
    version: "1.0"
paths:
    /executions/workflows:
        get:
            consumes:
                - application/json
            description: Retrieve a list of all workflow executions across all workflows
            produces:
                - application/json
            responses:
                "200":
                    description: Workflow executions retrieved successfully
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  data:
                                      properties:
                                          executions:
                                              items:
                                                  $ref: "#/definitions/workflow.State"
                                              type: array
                                      type: object
                              type: object
                "500":
                    description: Internal server error
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
            summary: List all workflow executions
            tags:
                - workflows
    /executions/workflows/{workflow_exec_id}:
        get:
            consumes:
                - application/json
            description: Retrieve a specific workflow execution by its execution ID
            parameters:
                - description: Workflow Execution ID
                  example: '"2Z4PVTL6K27XVT4A3NPKMDD5BG"'
                  in: path
                  name: workflow_exec_id
                  required: true
                  type: string
            produces:
                - application/json
            responses:
                "200":
                    description: Workflow execution retrieved successfully
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  data:
                                      $ref: "#/definitions/workflow.State"
                              type: object
                "400":
                    description: Invalid execution ID
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
                "404":
                    description: Execution not found
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
                "500":
                    description: Internal server error
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
            summary: Get workflow execution by ID
            tags:
                - workflows
    /workflows:
        get:
            consumes:
                - application/json
            description: Retrieve a list of all available workflow configurations
            produces:
                - application/json
            responses:
                "200":
                    description: Workflows retrieved successfully
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  data:
                                      properties:
                                          workflows:
                                              items:
                                                  $ref: "#/definitions/workflow.Config"
                                              type: array
                                      type: object
                              type: object
                "500":
                    description: Internal server error
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
            summary: List all workflows
            tags:
                - workflows
    /workflows/{workflow_id}:
        get:
            consumes:
                - application/json
            description: Retrieve a specific workflow configuration by its ID
            parameters:
                - description: Workflow ID
                  example: '"data-processing"'
                  in: path
                  name: workflow_id
                  required: true
                  type: string
            produces:
                - application/json
            responses:
                "200":
                    description: Workflow retrieved successfully
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  data:
                                      $ref: "#/definitions/workflow.Config"
                              type: object
                "400":
                    description: Invalid workflow ID
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
                "404":
                    description: Workflow not found
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
                "500":
                    description: Internal server error
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
            summary: Get workflow by ID
            tags:
                - workflows
    /workflows/{workflow_id}/agents:
        get:
            consumes:
                - application/json
            description: Retrieve a list of all available agent configurations
            parameters:
                - description: Workflow ID
                  in: path
                  name: workflow_id
                  required: true
                  type: string
            produces:
                - application/json
            responses:
                "200":
                    description: Agents retrieved successfully
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  data:
                                      properties:
                                          agents:
                                              items:
                                                  $ref: "#/definitions/agent.Config"
                                              type: array
                                      type: object
                              type: object
                "500":
                    description: Internal server error
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
            summary: List all agents
            tags:
                - agents
    /workflows/{workflow_id}/agents/{agent_id}:
        get:
            consumes:
                - application/json
            description: Retrieve a specific agent configuration by its ID
            parameters:
                - description: Workflow ID
                  in: path
                  name: workflow_id
                  required: true
                  type: string
                - description: Agent ID
                  example: '"code-assistant"'
                  in: path
                  name: agent_id
                  required: true
                  type: string
            produces:
                - application/json
            responses:
                "200":
                    description: Agent retrieved successfully
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  data:
                                      $ref: "#/definitions/agent.Config"
                              type: object
                "400":
                    description: Invalid agent ID
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
                "404":
                    description: Agent not found
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
                "500":
                    description: Internal server error
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
            summary: Get agent by ID
            tags:
                - agents
    /workflows/{workflow_id}/executions:
        get:
            consumes:
                - application/json
            description: Retrieve all executions for a specific workflow
            parameters:
                - description: Workflow ID
                  example: '"data-processing"'
                  in: path
                  name: workflow_id
                  required: true
                  type: string
            produces:
                - application/json
            responses:
                "200":
                    description: Workflow executions retrieved successfully
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  data:
                                      properties:
                                          executions:
                                              items:
                                                  $ref: "#/definitions/workflow.State"
                                              type: array
                                      type: object
                              type: object
                "400":
                    description: Invalid workflow ID
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
                "500":
                    description: Internal server error
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
            summary: List executions by workflow ID
            tags:
                - workflows
        post:
            consumes:
                - application/json
            description: Trigger the execution of a workflow with provided input data
            parameters:
                - description: Workflow ID
                  example: '"data-processing"'
                  in: path
                  name: workflow_id
                  required: true
                  type: string
                - description: Workflow input data
                  in: body
                  name: input
                  required: true
                  schema:
                      type: object
            produces:
                - application/json
            responses:
                "202":
                    description: Workflow triggered successfully
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  data:
                                      $ref: "#/definitions/wfrouter.ExecuteWorkflowResponse"
                              type: object
                "400":
                    description: Invalid input or workflow ID
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
                "404":
                    description: Workflow not found
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
                "500":
                    description: Internal server error
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
            summary: Execute workflow
            tags:
                - workflows
    /workflows/{workflow_id}/tasks:
        get:
            consumes:
                - application/json
            description: Retrieve a list of all tasks within a specific workflow
            parameters:
                - description: Workflow ID
                  example: '"data-processing"'
                  in: path
                  name: workflow_id
                  required: true
                  type: string
            produces:
                - application/json
            responses:
                "200":
                    description: Tasks retrieved successfully
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  data:
                                      properties:
                                          tasks:
                                              items:
                                                  $ref: "#/definitions/task.Config"
                                              type: array
                                      type: object
                              type: object
                "400":
                    description: Invalid workflow ID
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
                "404":
                    description: Workflow not found
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
                "500":
                    description: Internal server error
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
            summary: List tasks for a workflow
            tags:
                - tasks
    /workflows/{workflow_id}/tasks/{task_id}:
        get:
            consumes:
                - application/json
            description: Retrieve a specific task configuration by its ID within a workflow
            parameters:
                - description: Workflow ID
                  example: '"data-processing"'
                  in: path
                  name: workflow_id
                  required: true
                  type: string
                - description: Task ID
                  example: '"validate-input"'
                  in: path
                  name: task_id
                  required: true
                  type: string
            produces:
                - application/json
            responses:
                "200":
                    description: Task retrieved successfully
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  data:
                                      $ref: "#/definitions/task.Config"
                              type: object
                "400":
                    description: Invalid workflow or task ID
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
                "404":
                    description: Task not found
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
                "500":
                    description: Internal server error
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
            summary: Get task by ID
            tags:
                - tasks
    /workflows/{workflow_id}/tools:
        get:
            consumes:
                - application/json
            description: Retrieve a list of all available tool configurations
            parameters:
                - description: Workflow ID
                  in: path
                  name: workflow_id
                  required: true
                  type: string
            produces:
                - application/json
            responses:
                "200":
                    description: Tools retrieved successfully
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  data:
                                      properties:
                                          tools:
                                              items:
                                                  $ref: "#/definitions/tool.Config"
                                              type: array
                                      type: object
                              type: object
                "500":
                    description: Internal server error
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
            summary: List all tools
            tags:
                - tools
    /workflows/{workflow_id}/tools/{tool_id}:
        get:
            consumes:
                - application/json
            description: Retrieve a specific tool configuration by its ID
            parameters:
                - description: Workflow ID
                  in: path
                  name: workflow_id
                  required: true
                  type: string
                - description: Tool ID
                  example: '"format-code"'
                  in: path
                  name: tool_id
                  required: true
                  type: string
            produces:
                - application/json
            responses:
                "200":
                    description: Tool retrieved successfully
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  data:
                                      $ref: "#/definitions/tool.Config"
                              type: object
                "400":
                    description: Invalid tool ID
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
                "404":
                    description: Tool not found
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
                "500":
                    description: Internal server error
                    schema:
                        allOf:
                            - $ref: "#/definitions/router.Response"
                            - properties:
                                  error:
                                      $ref: "#/definitions/router.ErrorInfo"
                              type: object
            summary: Get tool by ID
            tags:
                - tools
swagger: "2.0"
tags:
    - description: Workflow management operations
      name: workflows
    - description: Task management operations
      name: tasks
    - description: Agent management operations
      name: agents
    - description: Tool management operations
      name: tools
