// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://github.com/compozy/compozy",
        "contact": {
            "name": "Compozy Support",
            "url": "https://github.com/compozy/compozy",
            "email": "support@compozy.dev"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/compozy/compozy/blob/main/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/executions/workflows": {
            "get": {
                "description": "Retrieve a list of all workflow executions across all workflows",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflows"
                ],
                "summary": "List all workflow executions",
                "responses": {
                    "200": {
                        "description": "Workflow executions retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "executions": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/workflow.State"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/executions/workflows/{exec_id}": {
            "get": {
                "description": "Retrieve a specific workflow execution by its execution ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "executions"
                ],
                "summary": "Get workflow execution by ID",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"2Z4PVTL6K27XVT4A3NPKMDD5BG\"",
                        "description": "Workflow Execution ID",
                        "name": "exec_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workflow execution retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/workflow.State"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid execution ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Execution not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/executions/workflows/{exec_id}/cancel": {
            "post": {
                "description": "Cancel a specific workflow execution by its execution ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "executions"
                ],
                "summary": "Cancel workflow execution",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"workflowID_execID\"",
                        "description": "Workflow Execution ID",
                        "name": "exec_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workflow execution canceled successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid execution ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/executions/workflows/{exec_id}/pause": {
            "post": {
                "description": "Pause a specific workflow execution by its execution ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "executions"
                ],
                "summary": "Pause workflow execution",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"workflowID_execID\"",
                        "description": "Workflow Execution ID",
                        "name": "exec_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workflow execution paused successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid execution ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/executions/workflows/{exec_id}/resume": {
            "post": {
                "description": "Resume a specific workflow execution by its execution ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "executions"
                ],
                "summary": "Resume workflow execution",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"workflowID_execID\"",
                        "description": "Workflow Execution ID",
                        "name": "exec_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workflow execution resumed successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid execution ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/workflows": {
            "get": {
                "description": "Retrieve a list of all available workflow configurations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflows"
                ],
                "summary": "List all workflows",
                "responses": {
                    "200": {
                        "description": "Workflows retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "workflows": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/workflow.Config"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/workflows/{workflow_id}": {
            "get": {
                "description": "Retrieve a specific workflow configuration by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflows"
                ],
                "summary": "Get workflow by ID",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"data-processing\"",
                        "description": "Workflow ID",
                        "name": "workflow_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workflow retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/workflow.Config"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid workflow ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Workflow not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/workflows/{workflow_id}/agents": {
            "get": {
                "description": "Retrieve a list of all available agent configurations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "List all agents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workflow ID",
                        "name": "workflow_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Agents retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "agents": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/agent.Config"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/workflows/{workflow_id}/agents/{agent_id}": {
            "get": {
                "description": "Retrieve a specific agent configuration by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Get agent by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workflow ID",
                        "name": "workflow_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"code-assistant\"",
                        "description": "Agent ID",
                        "name": "agent_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Agent retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/agent.Config"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid agent ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Agent not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/workflows/{workflow_id}/executions": {
            "get": {
                "description": "Retrieve all executions for a specific workflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflows"
                ],
                "summary": "List executions by workflow ID",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"data-processing\"",
                        "description": "Workflow ID",
                        "name": "workflow_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workflow executions retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "executions": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/workflow.State"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid workflow ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Trigger the execution of a workflow with provided input data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflows"
                ],
                "summary": "Execute workflow",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"data-processing\"",
                        "description": "Workflow ID",
                        "name": "workflow_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Workflow input data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Workflow triggered successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/wfrouter.ExecuteWorkflowResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid input or workflow ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Workflow not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/workflows/{workflow_id}/tasks": {
            "get": {
                "description": "Retrieve a list of all tasks within a specific workflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "List tasks for a workflow",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"data-processing\"",
                        "description": "Workflow ID",
                        "name": "workflow_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tasks retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "tasks": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/task.Config"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid workflow ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Workflow not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/workflows/{workflow_id}/tasks/{task_id}": {
            "get": {
                "description": "Retrieve a specific task configuration by its ID within a workflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Get task by ID",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"data-processing\"",
                        "description": "Workflow ID",
                        "name": "workflow_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"validate-input\"",
                        "description": "Task ID",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/task.Config"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid workflow or task ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/workflows/{workflow_id}/tools": {
            "get": {
                "description": "Retrieve a list of all available tool configurations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tools"
                ],
                "summary": "List all tools",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workflow ID",
                        "name": "workflow_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tools retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "tools": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/tool.Config"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/workflows/{workflow_id}/tools/{tool_id}": {
            "get": {
                "description": "Retrieve a specific tool configuration by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tools"
                ],
                "summary": "Get tool by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workflow ID",
                        "name": "workflow_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"format-code\"",
                        "description": "Tool ID",
                        "name": "tool_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tool retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/tool.Config"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid tool ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Tool not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/router.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/router.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "agent.ActionConfig": {
            "type": "object",
            "required": [
                "prompt"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "input": {
                    "$ref": "#/definitions/schema.Schema"
                },
                "json_mode": {
                    "type": "boolean"
                },
                "output": {
                    "$ref": "#/definitions/schema.Schema"
                },
                "prompt": {
                    "type": "string"
                },
                "tools": {
                    "description": "Used to force a single tool call in the action",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tool.Config"
                    }
                },
                "with": {
                    "$ref": "#/definitions/core.Input"
                }
            }
        },
        "agent.Config": {
            "type": "object",
            "required": [
                "config",
                "id",
                "instructions"
            ],
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/agent.ActionConfig"
                    }
                },
                "config": {
                    "$ref": "#/definitions/core.ProviderConfig"
                },
                "env": {
                    "$ref": "#/definitions/core.EnvMap"
                },
                "id": {
                    "type": "string"
                },
                "instructions": {
                    "type": "string"
                },
                "json_mode": {
                    "type": "boolean"
                },
                "max_iterations": {
                    "type": "integer"
                },
                "tools": {
                    "description": "When defined here, the agent will have toolChoice defined as \"auto\"",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tool.Config"
                    }
                },
                "with": {
                    "$ref": "#/definitions/core.Input"
                }
            }
        },
        "core.Author": {
            "type": "object",
            "properties": {
                "contributors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/core.Contributor"
                    }
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "core.ComponentType": {
            "type": "string",
            "enum": [
                "workflow",
                "task",
                "agent",
                "tool",
                "log"
            ],
            "x-enum-varnames": [
                "ComponentWorkflow",
                "ComponentTask",
                "ComponentAgent",
                "ComponentTool",
                "ComponentLog"
            ]
        },
        "core.Contributor": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "core.EnvMap": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "core.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "core.ErrorTransition": {
            "type": "object",
            "properties": {
                "next": {
                    "type": "string"
                },
                "with": {
                    "$ref": "#/definitions/core.Input"
                }
            }
        },
        "core.GlobalOpts": {
            "type": "object",
            "properties": {
                "heartbeat_timeout": {
                    "type": "string"
                },
                "on_error": {
                    "$ref": "#/definitions/core.ErrorTransition"
                },
                "retry_policy": {
                    "$ref": "#/definitions/core.RetryPolicyConfig"
                },
                "schedule_to_close_timeout": {
                    "type": "string"
                },
                "schedule_to_start_timeout": {
                    "type": "string"
                },
                "start_to_close_timeout": {
                    "type": "string"
                }
            }
        },
        "core.Input": {
            "type": "object",
            "additionalProperties": {}
        },
        "core.Output": {
            "type": "object",
            "additionalProperties": {}
        },
        "core.PromptParams": {
            "type": "object",
            "properties": {
                "max_length": {
                    "type": "integer"
                },
                "max_tokens": {
                    "type": "integer"
                },
                "min_length": {
                    "type": "integer"
                },
                "repetition_penalty": {
                    "type": "number"
                },
                "seed": {
                    "type": "integer"
                },
                "stop_words": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "temperature": {
                    "type": "number"
                },
                "top_k": {
                    "type": "integer"
                },
                "top_p": {
                    "type": "number"
                }
            }
        },
        "core.ProviderConfig": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "api_url": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/core.PromptParams"
                },
                "provider": {
                    "$ref": "#/definitions/core.ProviderName"
                }
            }
        },
        "core.ProviderName": {
            "type": "string",
            "enum": [
                "openai",
                "groq",
                "anthropic",
                "google",
                "ollama",
                "deepseek",
                "xai",
                "mock"
            ],
            "x-enum-comments": {
                "ProviderMock": "Mock provider for testing"
            },
            "x-enum-varnames": [
                "ProviderOpenAI",
                "ProviderGroq",
                "ProviderAnthropic",
                "ProviderGoogle",
                "ProviderOllama",
                "ProviderDeepSeek",
                "ProviderXAI",
                "ProviderMock"
            ]
        },
        "core.RetryPolicyConfig": {
            "type": "object",
            "properties": {
                "backoff_coefficient": {
                    "type": "number"
                },
                "initial_interval": {
                    "type": "string"
                },
                "maximum_attempts": {
                    "type": "integer"
                },
                "maximum_interval": {
                    "type": "string"
                },
                "non_retryable_error_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "core.StatusType": {
            "type": "string",
            "enum": [
                "PENDING",
                "RUNNING",
                "SUCCESS",
                "FAILED",
                "TIMED_OUT",
                "CANCELED",
                "WAITING",
                "PAUSED"
            ],
            "x-enum-varnames": [
                "StatusPending",
                "StatusRunning",
                "StatusSuccess",
                "StatusFailed",
                "StatusTimedOut",
                "StatusCanceled",
                "StatusWaiting",
                "StatusPaused"
            ]
        },
        "core.SuccessTransition": {
            "type": "object",
            "properties": {
                "next": {
                    "type": "string"
                },
                "with": {
                    "$ref": "#/definitions/core.Input"
                }
            }
        },
        "router.ErrorInfo": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "router.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "$ref": "#/definitions/router.ErrorInfo"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "schema.Schema": {
            "type": "object",
            "additionalProperties": {}
        },
        "task.CollectionMode": {
            "type": "string",
            "enum": [
                "parallel",
                "parallel",
                "sequential"
            ],
            "x-enum-varnames": [
                "DefaultCollectionMode",
                "CollectionModeParallel",
                "CollectionModeSequential"
            ]
        },
        "task.Config": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "agent": {
                    "$ref": "#/definitions/agent.Config"
                },
                "batch": {
                    "type": "integer"
                },
                "condition": {
                    "type": "string"
                },
                "config": {
                    "$ref": "#/definitions/core.GlobalOpts"
                },
                "continue_on_error": {
                    "type": "boolean"
                },
                "env": {
                    "$ref": "#/definitions/core.EnvMap"
                },
                "filter": {
                    "type": "string"
                },
                "final": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "index_var": {
                    "type": "string"
                },
                "input": {
                    "$ref": "#/definitions/schema.Schema"
                },
                "item_var": {
                    "description": "Variable names for template evaluation",
                    "type": "string"
                },
                "items": {
                    "description": "Core collection fields",
                    "type": "string"
                },
                "max_workers": {
                    "type": "integer"
                },
                "mode": {
                    "$ref": "#/definitions/task.CollectionMode"
                },
                "on_error": {
                    "$ref": "#/definitions/core.ErrorTransition"
                },
                "on_success": {
                    "description": "Task configuration",
                    "allOf": [
                        {
                            "$ref": "#/definitions/core.SuccessTransition"
                        }
                    ]
                },
                "output": {
                    "$ref": "#/definitions/schema.Schema"
                },
                "outputs": {
                    "$ref": "#/definitions/core.Input"
                },
                "retries": {
                    "type": "integer"
                },
                "routes": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "sleep": {
                    "type": "string"
                },
                "stop_condition": {
                    "description": "Optional early termination",
                    "type": "string"
                },
                "strategy": {
                    "description": "Shared parallel execution fields (used by both parallel and collection tasks)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/task.ParallelStrategy"
                        }
                    ]
                },
                "task": {
                    "$ref": "#/definitions/task.Config"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/task.Config"
                    }
                },
                "template": {
                    "$ref": "#/definitions/task.Config"
                },
                "timeout": {
                    "type": "string"
                },
                "tool": {
                    "$ref": "#/definitions/tool.Config"
                },
                "type": {
                    "$ref": "#/definitions/task.Type"
                },
                "with": {
                    "$ref": "#/definitions/core.Input"
                }
            }
        },
        "task.ExecutionType": {
            "type": "string",
            "enum": [
                "basic",
                "router",
                "parallel",
                "collection"
            ],
            "x-enum-varnames": [
                "ExecutionBasic",
                "ExecutionRouter",
                "ExecutionParallel",
                "ExecutionCollection"
            ]
        },
        "task.ParallelState": {
            "type": "object",
            "properties": {
                "completed_tasks": {
                    "description": "List of completed sub-task IDs",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "failed_tasks": {
                    "description": "List of failed sub-task IDs",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "max_workers": {
                    "type": "integer"
                },
                "strategy": {
                    "$ref": "#/definitions/task.ParallelStrategy"
                },
                "sub_tasks": {
                    "description": "Map of sub-task ID to State",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/task.State"
                    }
                },
                "timeout": {
                    "type": "string"
                }
            }
        },
        "task.ParallelStrategy": {
            "type": "string",
            "enum": [
                "wait_all",
                "fail_fast",
                "best_effort",
                "race"
            ],
            "x-enum-comments": {
                "StrategyBestEffort": "Continue even if some tasks fail",
                "StrategyFailFast": "Stop on first failure",
                "StrategyRace": "Return when first task completes",
                "StrategyWaitAll": "Default: wait for all tasks to complete"
            },
            "x-enum-varnames": [
                "StrategyWaitAll",
                "StrategyFailFast",
                "StrategyBestEffort",
                "StrategyRace"
            ]
        },
        "task.State": {
            "type": "object",
            "properties": {
                "action_id": {
                    "type": "string"
                },
                "agent_id": {
                    "description": "Basic execution fields (for single tasks)",
                    "type": "string"
                },
                "batch": {
                    "description": "Batch size for sequential",
                    "type": "integer"
                },
                "completed_count": {
                    "description": "Successfully completed",
                    "type": "integer"
                },
                "completed_tasks": {
                    "description": "List of completed sub-task IDs",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "component": {
                    "description": "Core identification",
                    "allOf": [
                        {
                            "$ref": "#/definitions/core.ComponentType"
                        }
                    ]
                },
                "continue_on_error": {
                    "description": "Error tolerance",
                    "type": "boolean"
                },
                "error": {
                    "$ref": "#/definitions/core.Error"
                },
                "execution_type": {
                    "description": "Execution type and strategy",
                    "allOf": [
                        {
                            "$ref": "#/definitions/task.ExecutionType"
                        }
                    ]
                },
                "failed_count": {
                    "description": "Failed items",
                    "type": "integer"
                },
                "failed_tasks": {
                    "description": "List of failed sub-task IDs",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filter": {
                    "description": "Filter expression used",
                    "type": "string"
                },
                "index_var": {
                    "description": "Variable name for index",
                    "type": "string"
                },
                "input": {
                    "$ref": "#/definitions/core.Input"
                },
                "item_results": {
                    "description": "Collection item results - stored as task_states with parent reference",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "item_var": {
                    "description": "Variable name for item",
                    "type": "string"
                },
                "items": {
                    "description": "Collection configuration",
                    "type": "array",
                    "items": {}
                },
                "items_evaluated": {
                    "description": "Track if dynamic evaluation is complete",
                    "type": "boolean"
                },
                "items_expression": {
                    "description": "Dynamic evaluation support",
                    "type": "string"
                },
                "max_workers": {
                    "type": "integer"
                },
                "mode": {
                    "description": "parallel | sequential",
                    "type": "string"
                },
                "output": {
                    "$ref": "#/definitions/core.Output"
                },
                "parallel_config": {
                    "description": "Parallel execution settings (when mode=parallel, reuse existing ParallelState)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/task.ParallelState"
                        }
                    ]
                },
                "processed_count": {
                    "description": "Progress tracking",
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/core.StatusType"
                },
                "strategy": {
                    "$ref": "#/definitions/task.ParallelStrategy"
                },
                "sub_tasks": {
                    "description": "Map of sub-task ID to State",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/task.State"
                    }
                },
                "task_exec_id": {
                    "type": "string"
                },
                "task_id": {
                    "type": "string"
                },
                "timeout": {
                    "type": "string"
                },
                "tool_id": {
                    "type": "string"
                },
                "workflow_exec_id": {
                    "type": "string"
                },
                "workflow_id": {
                    "type": "string"
                }
            }
        },
        "task.Type": {
            "type": "string",
            "enum": [
                "basic",
                "router",
                "parallel",
                "collection"
            ],
            "x-enum-varnames": [
                "TaskTypeBasic",
                "TaskTypeRouter",
                "TaskTypeParallel",
                "TaskTypeCollection"
            ]
        },
        "tool.Config": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "env": {
                    "$ref": "#/definitions/core.EnvMap"
                },
                "execute": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "input": {
                    "$ref": "#/definitions/schema.Schema"
                },
                "output": {
                    "$ref": "#/definitions/schema.Schema"
                },
                "with": {
                    "$ref": "#/definitions/core.Input"
                }
            }
        },
        "wfrouter.ExecuteWorkflowResponse": {
            "type": "object",
            "properties": {
                "exec_id": {
                    "type": "string",
                    "example": "2Z4PVTL6K27XVT4A3NPKMDD5BG"
                },
                "exec_url": {
                    "type": "string",
                    "example": "localhost:8080/api/workflows/executions/2Z4PVTL6K27XVT4A3NPKMDD5BG"
                },
                "workflow_id": {
                    "type": "string",
                    "example": "data-processing"
                }
            }
        },
        "workflow.Config": {
            "type": "object",
            "properties": {
                "agents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/agent.Config"
                    }
                },
                "author": {
                    "$ref": "#/definitions/core.Author"
                },
                "config": {
                    "$ref": "#/definitions/workflow.Opts"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.Schema"
                    }
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/task.Config"
                    }
                },
                "tools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tool.Config"
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "workflow.Opts": {
            "type": "object",
            "properties": {
                "env": {
                    "$ref": "#/definitions/core.EnvMap"
                },
                "heartbeat_timeout": {
                    "type": "string"
                },
                "input": {
                    "$ref": "#/definitions/schema.Schema"
                },
                "on_error": {
                    "$ref": "#/definitions/core.ErrorTransition"
                },
                "retry_policy": {
                    "$ref": "#/definitions/core.RetryPolicyConfig"
                },
                "schedule_to_close_timeout": {
                    "type": "string"
                },
                "schedule_to_start_timeout": {
                    "type": "string"
                },
                "start_to_close_timeout": {
                    "type": "string"
                }
            }
        },
        "workflow.State": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/core.Error"
                },
                "input": {
                    "$ref": "#/definitions/core.Input"
                },
                "output": {
                    "$ref": "#/definitions/core.Output"
                },
                "status": {
                    "$ref": "#/definitions/core.StatusType"
                },
                "tasks": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/task.State"
                    }
                },
                "workflow_exec_id": {
                    "type": "string"
                },
                "workflow_id": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "description": "Workflow management operations",
            "name": "workflows"
        },
        {
            "description": "Task management operations",
            "name": "tasks"
        },
        {
            "description": "Agent management operations",
            "name": "agents"
        },
        {
            "description": "Tool management operations",
            "name": "tools"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v0",
	Schemes:          []string{},
	Title:            "Compozy API",
	Description:      "Compozy is a workflow orchestration engine for AI agents, tasks, and tools",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
