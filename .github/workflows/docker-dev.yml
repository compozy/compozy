name: Build and publish development Docker images

on:
  workflow_dispatch:
    inputs:
      package:
        type: choice
        description: "Package to build and publish"
        default: "all"
        required: true
        options:
          - all
          - compozy
          - mcp-proxy
  push:
    branches:
      - main
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - "cluster/compozy.Dockerfile"
      - "cluster/mcpproxy.Dockerfile"
      - ".github/workflows/docker-dev.yml"

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-and-publish-dev-images:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        package:
          - name: compozy
            dockerfile: cluster/compozy.Dockerfile
            image: ghcr.io/compozy/compozy-dev
            context: .
          - name: mcp-proxy
            dockerfile: cluster/mcpproxy.Dockerfile
            image: ghcr.io/compozy/mcp-proxy-dev
            context: .
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get short SHA
        id: sha
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Get timestamp
        id: timestamp
        run: echo "timestamp=$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v4

      - name: Log in to GitHub Container Registry
        if: |
          (github.event_name == 'workflow_dispatch' && (github.event.inputs.package == 'all' || github.event.inputs.package == matrix.package.name)) ||
          github.event_name != 'workflow_dispatch'
        uses: docker/login-action@v4
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        if: |
          (github.event_name == 'workflow_dispatch' && (github.event.inputs.package == 'all' || github.event.inputs.package == matrix.package.name)) ||
          github.event_name != 'workflow_dispatch'
        id: meta
        uses: docker/metadata-action@v6
        with:
          images: ${{ matrix.package.image }}
          tags: |
            # Development tags for main branch
            type=raw,value=dev-latest,enable={{is_default_branch}}
            type=raw,value=dev-${{ steps.sha.outputs.short_sha }},enable={{is_default_branch}}
            type=raw,value=dev-${{ steps.timestamp.outputs.timestamp }},enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=Compozy ${{ matrix.package.name }} (Development)
            org.opencontainers.image.description=Development build of Compozy ${{ matrix.package.name }}
            org.opencontainers.image.url=https://github.com/compozy/compozy
            org.opencontainers.image.source=https://github.com/compozy/compozy
            org.opencontainers.image.vendor=Compozy
            org.opencontainers.image.licenses=BSL-1.1

      - name: Build and push Docker image for ${{ matrix.package.name }} (dev-${{ steps.sha.outputs.short_sha }})
        id: build
        if: |
          (github.event_name == 'workflow_dispatch' && (github.event.inputs.package == 'all' || github.event.inputs.package == matrix.package.name)) ||
          github.event_name != 'workflow_dispatch'
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.package.context }}
          file: ${{ matrix.package.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=dev-${{ steps.sha.outputs.short_sha }}
            COMMIT=${{ github.sha }}
            BUILD_DATE=${{ steps.timestamp.outputs.timestamp }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output image digest
        if: |
          (github.event_name == 'workflow_dispatch' && (github.event.inputs.package == 'all' || github.event.inputs.package == matrix.package.name)) ||
          github.event_name != 'workflow_dispatch'
        run: |
          echo "Image: ${{ matrix.package.image }}"
          echo "Tags: ${{ steps.meta.outputs.tags }}"
          echo "Digest: ${{ steps.build.outputs.digest }}"

  summary:
    needs: build-and-publish-dev-images
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Development images summary
        run: |
          echo "## 🐳 Development Docker Images Published" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The following development images have been built and published:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Compozy (dev)**: \`ghcr.io/compozy/compozy-dev:dev-$(git rev-parse --short HEAD)\`" >> $GITHUB_STEP_SUMMARY
          echo "- **MCP Proxy (dev)**: \`ghcr.io/compozy/mcp-proxy-dev:dev-$(git rev-parse --short HEAD)\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Usage" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "# Pull the latest development images" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ghcr.io/compozy/compozy-dev:dev-latest" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ghcr.io/compozy/mcp-proxy-dev:dev-latest" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Note" >> $GITHUB_STEP_SUMMARY
          echo "These are **development images** built from the main branch. For production use, please use the official releases from GoReleaser." >> $GITHUB_STEP_SUMMARY
