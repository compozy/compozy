name: Code Quality & Coverage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  checks: write

jobs:
  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      CGO_ENABLED: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go with caching
        uses: ./.github/actions/setup-go
        with:
          go-version: "1.24.x"
          install-tools: "true"

      - name: Setup Bun
        uses: ./.github/actions/setup-bun

      - name: Validate Codecov config
        run: |
          curl -X POST --data-binary @codecov.yml https://codecov.io/validate || echo "Codecov validation failed, continuing..."

      - name: Run tests with coverage
        run: |
          make test-coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
          override_branch: ${{ github.head_ref || github.ref_name }}
          override_commit: ${{ github.event.pull_request.head.sha || github.sha }}
          env_vars: OS,GO_VERSION
        env:
          OS: ${{ runner.os }}
          GO_VERSION: "1.24.x"

  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go with caching
        uses: ./.github/actions/setup-go
        with:
          go-version: "1.24.x"
          install-tools: "true"

      - name: Setup Bun
        uses: ./.github/actions/setup-bun

      - name: Run quality checks
        run: |-
          # Static analysis
          make lint

          # Cyclomatic complexity check
          go install github.com/fzipp/gocyclo/cmd/gocyclo@latest
          gocyclo -over 15 . || echo "High complexity detected"

          # Dead code detection
          go install golang.org/x/tools/cmd/deadcode@latest
          deadcode ./... || echo "Dead code detected"
