name: "Security Analysis"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 4 * * 1" # Weekly scan on Mondays at 4 AM UTC
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        language: ["go", "javascript"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality

      - name: Set up Go
        if: matrix.language == 'go'
        uses: ./.github/actions/setup-go
        with:
          go-version: "1.24.x"
          install-tools: "false"

      - name: Setup Bun
        if: matrix.language == 'javascript'
        uses: oven-sh/setup-bun@v2

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  gosec:
    name: Security Scan (gosec)
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: ./.github/actions/setup-go
        with:
          go-version: "1.24.x"
          install-tools: "false"

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          # Use -no-fail to let GitHub Security features handle failures
          # and -fmt sarif for GitHub code scanning integration
          args: "-no-fail -fmt sarif -out gosec.sarif ./..."

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: gosec.sarif

  trivy:
    name: Container Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image for scanning
        run: |
          docker build -t compozy:test -f cluster/compozy.Dockerfile .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.31.0
        with:
          image-ref: "compozy:test"
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

  nancy:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: ./.github/actions/setup-go
        with:
          go-version: "1.24.x"
          install-tools: "false"

      - name: Install Nancy
        run: go install github.com/sonatypecommunity/nancy@latest

      - name: Run Nancy
        run: |
          go list -json -deps ./... | nancy sleuth --loud
