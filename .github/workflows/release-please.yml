name: Release Please

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  packages: write
  actions: write
  id-token: write

jobs:
  release-please:
    name: Release Please
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      release-created: ${{ steps.release.outputs.release_created }}
      releases-created: ${{ steps.release.outputs.releases_created }}
      tag-name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version }}
      pr-created: ${{ steps.release.outputs.pr_created }}
      pr-number: ${{ steps.release.outputs.pr_number }}
      paths-released: ${{ steps.release.outputs.paths_released }}

    steps:
      - name: Run Release Please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json
          token: ${{ secrets.RELEASE_TOKEN }}

  # This job runs when release-please creates a new release tag for the main package
  # It synchronizes all tool package versions to match the main version and publishes them
  npm-publish:
    name: Publish npm packages
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.release-created == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.RELEASE_TOKEN }}
          fetch-depth: 0

      - name: Setup Bun
        uses: ./.github/actions/setup-bun
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"

      - name: Sync tool versions
        run: |
          echo "Synchronizing tool versions to ${{ needs.release-please.outputs.version }}"
          ./scripts/sync-tool-versions.sh "${{ needs.release-please.outputs.version }}"

          # Check if there are changes to commit
          if ! git diff --quiet tools/*/package.json; then
            echo "Committing version updates..."
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add tools/*/package.json
            git commit -m "chore(tools): sync tool versions to v${{ needs.release-please.outputs.version }}"
            git push
          else
            echo "No version changes needed"
          fi

      - name: Publish npm packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: ./scripts/publish.sh
