name: collection-children-context-access

workflow:
  id: test-children-context
  version: "1.0.0"
  tasks:
    - id: validate-items
      type: collection
      mode: parallel
      items: "{{ .workflow.input.items }}"
      task:
        id: "validate-{{ .index }}"
        type: basic
        action: validate_item
        with:
          item: "{{ .item }}"
          threshold: "{{ .workflow.input.threshold }}"
      outputs:
        # Test existing aggregation pattern still works
        all_results: "{{ .output }}"
        # Simple test of children access - children is a map with task IDs as keys
        first_child_output:
          "{{ if .children }}{{ if index .children \"validate-0\" }}{{ (index .children\
          \ \"validate-0\").output }}{{ else }}NO_CHILD{{ end }}{{ else }}NO_CHILDREN{{ end }}"
        first_child_status:
          "{{ if .children }}{{ if index .children \"validate-0\" }}{{ (index .children\
          \ \"validate-0\").status }}{{ else }}NO_CHILD{{ end }}{{ else }}NO_CHILDREN{{ end }}"
      on_success:
        next: process-validated

    - id: process-validated
      type: basic
      action: process_results
      with:
        # Test accessing previous task's transformed output - simplified
        some_results: "{{ .tasks.validate-items.output.all_results }}"
        # Test accessing children through tasks context - safe map access
        some_validation:
          "{{ if .tasks.validate-items.children }}{{ if index .tasks.validate-items.children\
          \ \"validate-0\" }}{{ (index .tasks.validate-items.children \"validate-0\").output }}{{ else\
          \ }}NO_CHILD_FOUND{{ end }}{{ else }}NO_CHILDREN_PROPERTY{{ end }}"

input:
  items:
    - name: "item-1"
      value: 10
    - name: "item-2"
      value: 5
    - name: "item-3"
      value: 15
  threshold: 8

expected:
  workflow_state:
    status: "SUCCESS"
